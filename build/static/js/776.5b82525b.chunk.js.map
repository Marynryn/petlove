{"version":3,"file":"static/js/776.5b82525b.chunk.js","mappings":"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","sources":["components/ModalAttention/ModalAttention.jsx","components/Stars/Stars.jsx","components/ModalNotice/ModalNotice.jsx","components/NoticesItem/NoticesItem.jsx","components/NoticesList/NoticesList.jsx","components/PetInfo/PetInfo.jsx","components/SearchField/SearchField.jsx","components/ServerPagination/ServerPagination.jsx","components/Title/Title.jsx","helpers/formatDate.js","components/SelectedValues/SelectedValues.jsx","components/NoticesFilters/NoticesFilters.jsx","pages/Notices/Notices.jsx"],"sourcesContent":["import { Box, Typography } from '@mui/material';\r\n\r\nimport React from 'react'\r\n\r\nimport { AuthNav } from 'components/AuthNav/AuthNav';\r\nexport const ModalAttention = () => {\r\n\r\n\r\n    return (\r\n        <Box sx={{ pb: \" 20px\" }}>\r\n            <Box sx={{ width: \"80px\", height: \"80px\", my: \"20px\", mx: \"auto\", backgroundColor: \"#FFF4DF\", borderRadius: \"100%\", textAlign: 'center' }}>\r\n                <Typography sx={{ textAlign: \"center\", fontSize: \"44px\", fontWeight: 800, }}>🐶</Typography>\r\n            </Box>\r\n            <Typography sx={{ textAlign: \"center\", color: \"var(--secondary-color)\", mb: \"20px\", fontSize: \"20px\", fontWeight: 700, }}>Attention</Typography>\r\n            <Typography sx={{ mb: \"24px\", fontSize: \"14px\", fontWeight: 500, textAlign: \"center\", lineHeight: 1.28, letterSpacing: \"-0.28px\" }}>We would like to remind you that certain functionality is available only to authorized users.If you have an account, please log in with your credentials. If you do not already have an account, you must register to access these features.</Typography>\r\n            <Box px=\"20px\"> <AuthNav /></Box>\r\n\r\n        </Box>\r\n    )\r\n}\r\nexport default ModalAttention;","import React from 'react';\r\nimport { Box } from '@mui/material';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\r\n\r\nconst Stars = ({ popularity }) => {\r\n    if (!popularity) {\r\n        return null;\r\n    }\r\n    const maxStars = 5;\r\n    const filledStars = Math.min(popularity, maxStars);\r\n\r\n    const stars = [];\r\n\r\n    for (let i = 1; i <= maxStars; i++) {\r\n        stars.push(\r\n            i <= filledStars ? (\r\n                <StarIcon key={i} sx={{ color: 'rgba(255, 197, 49, 1)', fontSize: '16px', pr: '4px' }} />\r\n            ) : (\r\n                <StarBorderIcon key={i} sx={{ color: 'rgba(38, 38, 38, 0.05)', fontSize: '16px', pr: '4px' }} />\r\n            )\r\n        );\r\n    }\r\n\r\n    return <Box>{stars}</Box>;\r\n};\r\n\r\nexport default Stars;\r\n\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addToFavorite, getNoticesById, removeFromFavorite } from 'store/operations';\r\nimport { selectNoticeById } from './../../store/selectors';\r\nimport { Box, Button, Link, Typography } from '@mui/material';\r\nimport PetInfo from 'components/PetInfo/PetInfo';\r\nimport sprite from '../../img/svg/symbol-defs.svg'\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport Stars from 'components/Stars/Stars';\r\n\r\nexport const ModalNotice = ({ props }) => {\r\n    const dispatch = useDispatch();\r\n    const [isFavorite, setIsFavorite] = useState(false);\r\n    const infoPet = useSelector(selectNoticeById);\r\n\r\n    useEffect(() => {\r\n        dispatch(getNoticesById(props._id));\r\n\r\n        const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n        setIsFavorite(favorites.includes(props._id));\r\n    }, [dispatch, props._id]);\r\n    console.log(infoPet)\r\n    useEffect(() => {\r\n\r\n        const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n        if (isFavorite && !favorites.includes(props._id)) {\r\n            favorites.push(props._id);\r\n        } else if (!isFavorite && favorites.includes(props._id)) {\r\n            const index = favorites.indexOf(props._id);\r\n            if (index > -1) {\r\n                favorites.splice(index, 1);\r\n            }\r\n        }\r\n        localStorage.setItem('favorites', JSON.stringify(favorites));\r\n    }, [isFavorite, props._id]);\r\n\r\n    const handleFavoriteClick = () => {\r\n        if (isFavorite) {\r\n            dispatch(removeFromFavorite(infoPet._id));\r\n        } else {\r\n            dispatch(addToFavorite(infoPet._id));\r\n        }\r\n        setIsFavorite(!isFavorite);\r\n    };\r\n\r\n    const style = {\r\n        backgroundColor: \"var(--secondary-color)\", color: \"var(--background-color)\", height: \"46px\", width: \"100%\", textTransform: 'capitalize', fontSize: \"14px\", borderRadius: \"30px\", fontWeight: 500, '&:hover': { backgroundColor: \"#F9B020\" }\r\n    }\r\n    return (\r\n        <Box sx={{ py: \"20px\", textAlign: 'center', position: \"relative\", height: \"386px\", width: \"280px\", }}>\r\n            <Box>\r\n                <Box sx={{ position: \"absolute\", right: \"55%\", borderRadius: \"30px\", backgroundColor: \" #FFF4DF\", }}><Typography sx={{ p: \"8px 14px\", textTransform: 'capitalize', fontWeight: 500, fontSize: \"12px\", color: \"var(--secondary-color)\", }}>{infoPet.category}</Typography></Box>\r\n                <img src={infoPet.imgURL} alt={infoPet.title} style={{ width: \"120px\", height: \"120px\", objectFit: 'cover', marginBottom: \"24px\", borderRadius: \"100%\", mx: \"auto\", }} />\r\n            </Box>\r\n            <Box sx={{}}>\r\n                <Typography sx={{ fontWeight: 700, fontSize: \"16px\", mb: \"10px\" }}>{infoPet.title}</Typography>\r\n                <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", mb: \"24px\" }} >\r\n                    <Stars popularity={infoPet.popularity} />\r\n                    <Typography sx={{ fontSize: \"14px\" }}>{infoPet.popularity}</Typography>\r\n                </Box>\r\n            </Box>\r\n            <Box px=\"26px\"> <PetInfo props={infoPet} hidden={true} /></Box>\r\n\r\n            <Typography sx={{ fontWeight: 500, fontSize: \"14px\", overflow: \"hidden\", letterSpacing: \"-0.28px\", mb: \"42px\" }}>{infoPet.comment}</Typography>\r\n            <Box style={{ display: \"flex\", gap: \"10px\", position: \"absolute\", bottom: \"20px\", width: \"100%\", px: \"8px\" }}>\r\n\r\n                {isFavorite ? (\r\n                    <Button onClick={handleFavoriteClick} sx={style}  >Remove from&nbsp;&nbsp;\r\n                        <svg width={18} height={18}>\r\n                            <use href={`${sprite}#icon-trash-01`} style={{ paddingLeft: \"8px\", fill: \"var(--background-color)\" }} ></use>\r\n                        </svg>\r\n                    </Button>\r\n                ) : (\r\n                    <Button onClick={handleFavoriteClick} sx={style} > Add to&nbsp;&nbsp;\r\n                        <FavoriteBorderIcon pl=\"8px\" sx={{ fontSize: \"18px\", stroke: \"var(--background-color)\" }} /></Button>\r\n                )}\r\n\r\n                {infoPet.user && (<Link href={`mailto:${infoPet.user.email}`} target=\"_blank\" rel=\"noopener\" sx={{ textDecoration: 'none', width: \"100%\" }}>\r\n\r\n\r\n                    <Button sx={{ backgroundColor: \" #FFF4DF\", color: \"var(--secondary-color)\", height: \"46px\", width: \"100%\", textTransform: 'capitalize', fontSize: \"16px\", borderRadius: \"30px\", fontWeight: 500, '&:hover': { backgroundColor: \"#FBE7C1\" }, }} >Contact</Button>\r\n                </Link>)}\r\n            </Box>\r\n        </Box >\r\n    )\r\n}\r\nexport default ModalNotice;","import StarIcon from '@mui/icons-material/Star';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Box, Button, IconButton, Typography } from '@mui/material';\r\nimport sprite from '../../img/svg/symbol-defs.svg';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport ModalWrap from 'components/ModalWrap/ModalWrap';\r\nimport ModalAttention from 'components/ModalAttention/ModalAttention';\r\nimport ModalNotice from 'components/ModalNotice/ModalNotice';\r\nimport { IsLoggedIn } from 'helpers/isLoggedIn';\r\nimport PetInfo from 'components/PetInfo/PetInfo';\r\nimport { addToFavorite, removeFromFavorite } from 'store/operations';\r\nimport { selectNoticeFavorite } from 'store/selectors';\r\nimport theme from 'components/Theme';\r\n\r\nconst NoticesItem = ({ props }) => {\r\n    const dispatch = useDispatch();\r\n    const [isFavorite, setIsFavorite] = useState(false);\r\n    const [isModalAttentionOpen, setModalAttentionOpen] = useState(false);\r\n    const [isModalNoticeOpen, setModalNoticeOpen] = useState(false);\r\n    const { isLogIn } = IsLoggedIn();\r\n    const favorites = useSelector(selectNoticeFavorite);\r\n\r\n    useEffect(() => {\r\n\r\n        const localFavorites = JSON.parse(localStorage.getItem('favorites')) || favorites;\r\n        setIsFavorite(favorites.includes(props._id) || localFavorites.includes(props._id));\r\n    }, [favorites, props._id]);\r\n\r\n    const handleFavoriteClick = () => {\r\n        if (!isLogIn) {\r\n            setModalAttentionOpen(true);\r\n        } else {\r\n            const localFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n            if (isFavorite) {\r\n                dispatch(removeFromFavorite(props._id));\r\n                localStorage.setItem('favorites', JSON.stringify(localFavorites.filter(id => id !== props._id)));\r\n            } else {\r\n                dispatch(addToFavorite(props._id));\r\n                localStorage.setItem('favorites', JSON.stringify([...localFavorites, props._id]));\r\n            }\r\n            setIsFavorite(!isFavorite);\r\n        }\r\n    };\r\n\r\n    const handleLearnMoreClick = () => {\r\n        if (!isLogIn) {\r\n            setModalAttentionOpen(true);\r\n        } else {\r\n            setModalNoticeOpen(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box p=\"24px\" width=\"100%\" bgcolor={'var(--background-color)'} sx={{\r\n            minWidth: \"232px\", borderRadius: \"16px\", height: \"430px\", position: \"relative\", [theme.breakpoints.up(\"md\")]: {\r\n                p: \"32px\",\r\n                height: \"380px\"\r\n            },\r\n        }}>\r\n            <img src={props.imgURL} alt={props.title} style={{ width: \"100%\", objectFit: 'cover', marginBottom: \"24px\", height: \"178px\", borderRadius: \"16px\" }} />\r\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <Typography sx={{\r\n                    fontWeight: 700, fontSize: \"16px\", textOverflow: 'ellipsis', overflow: \"hidden\", [theme.breakpoints.up(\"md\")]: {\r\n                        fontSize: \"18px\",\r\n                    },\r\n                }}>{props.title}</Typography>\r\n                <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <StarIcon sx={{ color: \"var(--secondary-color)\", width: \"16px\", height: \"16px\" }} />\r\n                    <Typography sx={{ fontSize: \"14px\" }}>{props.popularity}</Typography>\r\n                </Box>\r\n            </Box>\r\n            <PetInfo props={props} />\r\n            <Typography sx={{\r\n                fontWeight: 500, fontSize: \"14px\", overflow: \"hidden\", letterSpacing: \"-0.28px\", [theme.breakpoints.up(\"md\")]: {\r\n                    lineHeight: \"18px\"\r\n                },\r\n            }}>{props.comment}</Typography>\r\n            <Box style={{\r\n                display: \"flex\", gap: \"10px\", width: \"280px\", bottom: \"25px\", position: \"absolute\", justifyContent: \"space-between\", [theme.breakpoints.down(\"sm\")]: {\r\n                    width: \"232px\",\r\n                }, [theme.breakpoints.up(\"md\")]: {\r\n                    bottom: \"32px\",\r\n                },\r\n            }}>\r\n\r\n                <Button sx={{\r\n                    backgroundColor: \"var(--secondary-color)\", color: \"var(--background-color)\", width: \"100%\", height: \"46px\", textTransform: 'capitalize', fontSize: \"14px\", borderRadius: \"30px\", fontWeight: 500, [theme.breakpoints.up(\"md\")]: {\r\n                        width: \"230px\"\r\n                    },\r\n                }} onClick={handleLearnMoreClick}>\r\n                    Learn more\r\n                </Button>\r\n                <Box sx={{ borderRadius: \"30px\", backgroundColor: \" #FFF4DF\", width: \"46px\", height: \"46px\", display: \"flex\", justifyContent: \"center\" }}>\r\n                    <IconButton onClick={handleFavoriteClick}>\r\n                        {isFavorite ? (\r\n                            <Box>\r\n                                <svg width={18} height={18}>\r\n                                    <use href={`${sprite}#icon-trash-01`} style={{ fill: \"var(--secondary-color)\" }}></use>\r\n                                </svg>\r\n                            </Box>\r\n                        ) : (\r\n                            <FavoriteBorderIcon sx={{ fill: \"var(--secondary-color)\" }} />\r\n                        )}\r\n                    </IconButton>\r\n                </Box>\r\n            </Box>\r\n            <ModalWrap isOpen={isModalAttentionOpen} onClose={() => setModalAttentionOpen(false)}>\r\n                <ModalAttention />\r\n            </ModalWrap>\r\n            <ModalWrap isOpen={isModalNoticeOpen} onClose={() => setModalNoticeOpen(false)}>\r\n                <ModalNotice props={props} />\r\n            </ModalWrap>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default NoticesItem;\r\n","import React from 'react'\r\nimport { Box, List, ListItem } from \"@mui/material\";\r\nimport NoticesItem from 'components/NoticesItem/NoticesItem';\r\nimport theme from 'components/Theme';\r\n\r\nexport const NoticesList = ({ props }) => {\r\n    if (props.length === 0) return null;\r\n    return (\r\n        <Box>\r\n            <List sx={{\r\n                p: 0, [theme.breakpoints.up(\"md\")]: {\r\n                    display: \"flex\", flexWrap: \"wrap\", gap: \"20px 20px\"\r\n                },\r\n            }}>\r\n                {props.map((el) => (\r\n                    <ListItem key={el._id} sx={{\r\n                        p: 0, mb: \"24px\", [theme.breakpoints.up(\"md\")]: {\r\n                            width: \"342px\",\r\n                            mb: 0\r\n                        },\r\n                    }}>\r\n                        <NoticesItem props={el} />\r\n\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Box>\r\n    )\r\n}\r\nexport default NoticesList;","import React from 'react'\r\nimport { formatDateString } from '../../helpers/formatDate';\r\nimport { Box, Typography } from '@mui/material';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n\r\nexport const PetInfo = ({ props, hidden }) => {\r\n    const location = useLocation();\r\n    const profile = location.pathname === \"/profile\";\r\n\r\n    const styleCategory = {\r\n        fontWeight: 500, fontSize: \"10px\", letterSpacing: \"-0.2px\", opacity: 0.5\r\n    }\r\n    const styleProps = {\r\n        fontWeight: 500, fontSize: \"12px\", letterSpacing: \"-0.24px\", textTransform: \"capitalize\",\r\n    }\r\n    return (\r\n        <Box sx={{\r\n            display: \"flex\", gap: \"10px\", mt: \"8px\", mb: profile ? 0 : \"16px\", justifyContent: \"space-between\", minWidth: profile ? \"100px\" : \"232px\", overflow: 'hidden',\r\n            textOverflow: 'ellipsis', flexWrap: profile ? 'wrap' : 'nowrap',\r\n        }}>\r\n            <Box>\r\n                <Typography sx={styleCategory}>Name</Typography>\r\n                <Typography sx={styleProps}>{props.name}</Typography>\r\n            </Box>\r\n            <Box>\r\n                <Typography sx={styleCategory}>Birthday</Typography>\r\n                <Typography sx={styleProps}>{formatDateString(props.birthday)}</Typography>\r\n            </Box>\r\n            <Box>\r\n                <Typography sx={styleCategory}>Sex</Typography>\r\n                <Typography sx={styleProps}>{props.sex}</Typography>\r\n            </Box>\r\n            <Box>\r\n                <Typography sx={styleCategory}>Species</Typography>\r\n                <Typography sx={styleProps}>{props.species}</Typography>\r\n            </Box>\r\n            {!hidden && <Box>\r\n\r\n                <Typography sx={{\r\n                    fontWeight: 500, fontSize: \"10px\", letterSpacing: \"-0.2px\", opacity: 0.5, overflow: 'hidden',\r\n                    textOverflow: 'ellipsis',\r\n                }}>Category</Typography>\r\n                <Typography sx={styleProps}>{props.category}</Typography>\r\n            </Box>}\r\n\r\n        </Box>\r\n    )\r\n}\r\nexport default PetInfo;","import React, { useEffect, useState } from 'react';\r\nimport { Box, TextField, IconButton, Paper } from '@mui/material';\r\nimport sprite from '../../img/svg/symbol-defs.svg';\r\nimport { useLocation } from 'react-router-dom';\r\nimport theme from 'components/Theme';\r\n\r\n\r\nconst SearchField = ({ onSearch, bgColor }) => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const location = useLocation();\r\n    const isNoticesPage = location.pathname === '/notices';\r\n\r\n\r\n    const handleInputChange = (event) => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const handleClearInput = () => {\r\n        setSearchTerm('');\r\n        onSearch('');\r\n\r\n    };\r\n    useEffect(() => {\r\n        if (onSearch) {\r\n            setSearchTerm(\"\");\r\n\r\n        }\r\n    }, [onSearch, setSearchTerm]);\r\n    const handleSearch = (event) => {\r\n        event.preventDefault();\r\n        onSearch(searchTerm);\r\n    };\r\n    const style = {\r\n        mt: 0,\r\n        mb: 0,\r\n        '& .MuiOutlinedInput-root': {\r\n            backgroundColor: `${bgColor}`,\r\n            borderRadius: '30px',\r\n            margin: '0',\r\n            border: 'none',\r\n            height: \"42px\",\r\n            mt: 0,\r\n            mb: 0, [theme.breakpoints.up(\"md\")]: {\r\n                height: \"48px\"\r\n            },\r\n\r\n        },\r\n        '& .MuiFormControl-root.MuiTextField-root': {\r\n            mt: 0,\r\n            mb: 0\r\n        },\r\n        '& .MuiOutlinedInput-notchedOutline': {\r\n            border: isNoticesPage ? \"none\" : \"1px solid rgba(38, 38, 38, 0.15)\",\r\n        },\r\n        '& .MuiInputBase-input': {\r\n            m: 0,\r\n            mt: 0,\r\n            mb: 0,\r\n            '&::placeholder': {\r\n                opacity: isNoticesPage ? 1 : 0.8,\r\n                color: isNoticesPage ? 'var(--primary-color)' : 'rgba(38, 38, 38, 0.50)',\r\n                fontSize: '14px',\r\n                fontWeight: 500,\r\n            },\r\n        },\r\n    };\r\n    return (\r\n        <Paper component=\"div\" sx={{ m: 0, boxShadow: 'none', backgroundColor: 'var(--background-gray)' }}>\r\n            <Box sx={{\r\n                display: 'flex', alignItems: 'center', mt: '4px', borderRadius: '30px', position: 'relative', [theme.breakpoints.up(\"md\")]: {\r\n                    m: 0\r\n                },\r\n            }}>\r\n                <TextField\r\n                    sx={style}\r\n                    id=\"name\"\r\n                    InputLabelProps={{ shrink: false }}\r\n                    value={searchTerm}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Search\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-Я]*)*$\"\r\n                />\r\n                {searchTerm && (\r\n                    <IconButton onClick={handleClearInput} sx={{ position: 'absolute', right: '32px', p: 0, top: '18px' }} >\r\n                        <svg width={18} height={18} style={{ stroke: '#EF2447', fill: '#EF2447' }}>\r\n                            <use href={`${sprite}#icon-x`}></use>\r\n                        </svg>\r\n                    </IconButton>\r\n                )}\r\n                <IconButton type=\"submit\" onClick={handleSearch} sx={{ position: 'absolute', right: '12px', p: 0, top: '18px' }}>\r\n                    <svg width={18} height={18} style={{ stroke: 'var(--primary-color)', fill: 'white' }}>\r\n                        <use href={`${sprite}#icon-search`}></use>\r\n                    </svg>\r\n                </IconButton>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default SearchField;\r\n\r\n","import React from 'react';\r\nimport { Box, IconButton } from \"@mui/material\";\r\nimport KeyboardDoubleArrowLeftIcon from '@mui/icons-material/KeyboardDoubleArrowLeft';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport KeyboardDoubleArrowRightIcon from '@mui/icons-material/KeyboardDoubleArrowRight';\r\nimport theme from 'components/Theme';\r\n\r\nconst ServerPagination = ({ totalPages, currentPage, onPageChange }) => {\r\n    const handleFirstPage = () => onPageChange(1);\r\n    const handlePreviousPage = () => onPageChange(currentPage - 1);\r\n    const handleNextPage = () => onPageChange(currentPage + 1);\r\n    const handleLastPage = () => onPageChange(totalPages);\r\n\r\n    const isFirstPage = currentPage === 1;\r\n    const isLastPage = currentPage === totalPages;\r\n\r\n    const buttonStyle = {\r\n        borderRadius: '100%',\r\n        border: '1px solid rgba(38, 38, 38, 0.20)',\r\n        width: '38px',\r\n        height: '38px',\r\n\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontWeight: 700,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n\r\n            width: '34px',\r\n            height: '34px',\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: '44px',\r\n            height: '44px',\r\n        },\r\n    };\r\n    const activeButtonStyle = {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontWeight: 700,\r\n        borderRadius: '100%',\r\n        border: '1px solid',\r\n        width: '38px',\r\n        height: '38px',\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            width: '34px',\r\n            height: '34px',\r\n        },\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: '44px',\r\n            height: '44px',\r\n        },\r\n\r\n        borderColor: \"var(--secondary-color)\",\r\n        backgroundColor: 'var(--secondary-color)',\r\n\r\n        color: \"var(--background-color)\",\r\n    };\r\n    const pageNumbers = [currentPage];\r\n    if (currentPage < totalPages) {\r\n        pageNumbers.push(currentPage + 1);\r\n    }\r\n    return (\r\n        <Box sx={{\r\n            display: 'flex', alignItems: 'center', justifyContent: 'center', mt: '26px', gap: \"6px\", width: \"334px\", mb: \"20px\", [theme.breakpoints.down(\"sm\")]: {\r\n                width: '280px',\r\n                gap: \"4px\",\r\n\r\n            },\r\n            [theme.breakpoints.up(\"md\")]: { mx: \"auto\", width: \"440px\", gap: \"8px\", mt: \"60px\", mb: \"48px\" },\r\n        }}>\r\n            <IconButton sx={buttonStyle} onClick={handleFirstPage} disabled={isFirstPage}>\r\n                <KeyboardDoubleArrowLeftIcon sx={{ p: \"8px\", minWidth: \"18px\", [theme.breakpoints.down(\"sm\")]: { p: \"6px\" }, }} />\r\n            </IconButton>\r\n            <IconButton sx={buttonStyle} onClick={handlePreviousPage} disabled={isFirstPage}>\r\n                <ChevronLeftIcon sx={{ p: \"8px\", [theme.breakpoints.down(\"sm\")]: { p: \"6px\" }, }} />\r\n            </IconButton>\r\n            <Box mx=\"5px\" sx={{ display: \"flex\", gap: \"10px\", [theme.breakpoints.down(\"sm\")]: { gap: \"6px\", mx: 0 }, [theme.breakpoints.up(\"md\")]: { mx: \"24px\" }, }}>\r\n                {pageNumbers.map((pageNumber, index) => (\r\n                    <Box key={index} sx={pageNumber === currentPage ? activeButtonStyle : buttonStyle} mx={0} onClick={() => onPageChange(pageNumber)}>\r\n                        {pageNumber}\r\n                    </Box>\r\n                ))}\r\n                <Box sx={buttonStyle} >\r\n                    ...\r\n                </Box></Box>\r\n            <IconButton sx={buttonStyle} onClick={handleNextPage} disabled={isLastPage}>\r\n                <ChevronRightIcon sx={{ p: \"8px\", [theme.breakpoints.down(\"sm\")]: { p: \"6px\" }, }} />\r\n            </IconButton>\r\n            <IconButton sx={buttonStyle} onClick={handleLastPage} disabled={isLastPage}>\r\n                <KeyboardDoubleArrowRightIcon sx={{ p: \"8px\", [theme.breakpoints.down(\"sm\")]: { p: \"6px\" }, }} />\r\n            </IconButton>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ServerPagination;\r\n\r\n\r\n\r\n","import { Typography } from '@mui/material'\r\nimport React from 'react'\r\n\r\nexport const Title = ({ children }) => {\r\n    return (\r\n        <Typography component=\"h2\" sx={(theme) => ({\r\n            fontSize: \"28px\",\r\n            fontWeight: 700,\r\n            color: \"text.primary\",\r\n            lineHeight: 1,\r\n            letterSpacing: \"-1.12px\",\r\n\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                fontSize: \"54px\",\r\n\r\n\r\n                letterSpacing: \"-1.62px\",\r\n            }\r\n        })\r\n        } > {children}</ Typography >\r\n    )\r\n}\r\n\r\nexport default Title;","export function formatDateString(dateString) {\r\n  if (dateString === undefined) {\r\n    return;\r\n  }\r\n  const date = new Date(dateString);\r\n\r\n  const options = {\r\n    year: \"numeric\",\r\n    month: \"2-digit\",\r\n    day: \"2-digit\",\r\n  };\r\n  const formattedDate = new Intl.DateTimeFormat(\"en-US\", options).format(date);\r\n  const parts = formattedDate.split(\"/\");\r\n  const dateWithDots = `${parts[0]}.${parts[1]}.${parts[2]}`;\r\n\r\n  return dateWithDots;\r\n}\r\nexport function formatDateRevers(date) {\r\n  if (!date) {\r\n    return;\r\n  }\r\n\r\n  const year = date.getFullYear();\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n\r\n  return `${year}-${month}-${day}`;\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPopularFilter, setPriceFilter } from 'store/reducer';\r\nimport { Button, IconButton } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Box from '@mui/material/Box';\r\nimport theme from 'components/Theme';\r\n\r\nconst SelectedValues = ({ reset }) => {\r\n    const dispatch = useDispatch();\r\n    const [selectedFilters, setSelectedFilters] = useState({\r\n        popular: null,\r\n        price: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (reset) {\r\n            setSelectedFilters({\r\n                popular: null,\r\n                price: null\r\n            });\r\n            dispatch(setPopularFilter(''));\r\n            dispatch(setPriceFilter(''));\r\n        }\r\n    }, [reset, dispatch]);\r\n\r\n    const handleFilterChange = (filterName, value) => {\r\n        setSelectedFilters(prevState => ({\r\n            ...prevState,\r\n            [filterName]: value\r\n        }));\r\n\r\n        if (filterName === 'popular') {\r\n            dispatch(setPopularFilter(value));\r\n        } else if (filterName === 'price') {\r\n            dispatch(setPriceFilter(value));\r\n        }\r\n    };\r\n\r\n    const clearFilter = (filterName) => {\r\n        setSelectedFilters(prevState => ({\r\n            ...prevState,\r\n            [filterName]: null\r\n        }));\r\n\r\n        if (filterName === 'popular') {\r\n            dispatch(setPopularFilter(''));\r\n        } else if (filterName === 'price') {\r\n            dispatch(setPriceFilter(''));\r\n        }\r\n    };\r\n\r\n    const buttonStyle = {\r\n        borderRadius: '30px',\r\n        p: \"12px\",\r\n        height: \"18px\",\r\n        border: \"none\",\r\n        backgroundColor: '#FFFFFF',\r\n        color: \"var(--primary-color)\", [theme.breakpoints.up(\"md\")]: {\r\n            height: \"20px\",\r\n            p: \"14px\"\r\n        }\r\n    };\r\n\r\n    const selectedButtonStyle = {\r\n        ...buttonStyle,\r\n        backgroundColor: 'var(--secondary-color)',\r\n        color: '#FFFFFF',\r\n    };\r\n    const getButtonStyle = (isSelected) => ({\r\n        p: 0,\r\n        textTransform: 'capitalize',\r\n        height: \"12px\",\r\n        fontSize: '14px',\r\n        fontWeight: 500,\r\n        color: isSelected ? '#FFFFFF' : \"var(--primary-color)\", [theme.breakpoints.up(\"md\")]: {\r\n            fontSize: '16px'\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\" gap={2} mb=\"20px\">\r\n            <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" gap=\"10px\">\r\n                <Box sx={selectedFilters.popular === 'popular' ? selectedButtonStyle : buttonStyle}>\r\n                    <Button\r\n                        sx={getButtonStyle(selectedFilters.popular === 'popular')}\r\n                        onClick={() => handleFilterChange('popular', 'popular')}\r\n                    >\r\n                        Popular\r\n                    </Button>\r\n                    {selectedFilters.popular === 'popular' && (\r\n                        <IconButton onClick={() => clearFilter('popular')} size=\"small\" sx={{ ml: \"6px\", p: 0, color: '#FFFFFF' }}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    )}\r\n                </Box>\r\n                <Box sx={selectedFilters.popular === 'unpopular' ? selectedButtonStyle : buttonStyle}>\r\n                    <Button\r\n                        sx={getButtonStyle(selectedFilters.popular === 'unpopular')}\r\n                        onClick={() => handleFilterChange('popular', 'unpopular')}\r\n                    >\r\n                        Unpopular\r\n                    </Button>\r\n                    {selectedFilters.popular === 'unpopular' && (\r\n                        <IconButton onClick={() => clearFilter('popular')} size=\"small\" sx={{ ml: \"6px\", p: 0, color: '#FFFFFF' }}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    )}\r\n                </Box>\r\n                <Box sx={selectedFilters.price === \"cheap\" ? selectedButtonStyle : buttonStyle}>\r\n                    <Button\r\n                        sx={getButtonStyle(selectedFilters.price === \"cheap\")}\r\n                        onClick={() => handleFilterChange('price', \"cheap\")}\r\n                    >\r\n                        Cheap\r\n                    </Button>\r\n                    {selectedFilters.price === \"cheap\" && (\r\n                        <IconButton onClick={() => clearFilter('price')} size=\"small\" sx={{ ml: \"6px\", p: 0, color: '#FFFFFF' }}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    )}\r\n                </Box>\r\n                <Box sx={selectedFilters.price === \"expensive\" ? selectedButtonStyle : buttonStyle}>\r\n                    <Button\r\n                        sx={getButtonStyle(selectedFilters.price === \"expensive\")}\r\n                        onClick={() => handleFilterChange('price', \"expensive\")}\r\n                    >\r\n                        Expensive\r\n                    </Button>\r\n                    {selectedFilters.price === \"expensive\" && (\r\n                        <IconButton onClick={() => clearFilter('price')} size=\"small\" sx={{ ml: \"6px\", p: 0, color: '#FFFFFF' }}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    )}\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default SelectedValues;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport AsyncSelect from 'react-select/async';\r\nimport sprite from '../../img/svg/symbol-defs.svg';\r\nimport {\r\n    selectGetCategories,\r\n    selectGetSex,\r\n    selectGetSpecies,\r\n    selectGetLocations,\r\n    selectGetNoticesFilter\r\n} from 'store/selectors';\r\nimport SearchField from 'components/SearchField/SearchField';\r\nimport {\r\n    setCategoryFilter,\r\n    setGenderFilter,\r\n    setPetTypeFilter,\r\n    setLocationFilter,\r\n    resetFilters,\r\n\r\n} from 'store/reducer';\r\nimport SelectedValues from 'components/SelectedValues/SelectedValues';\r\nimport { Box, IconButton, Paper } from '@mui/material';\r\nimport Btn from 'components/Button/Button';\r\nimport { getCategories, getLocations, getSex, getSpecies } from 'store/operations';\r\nimport theme from 'components/Theme';\r\n\r\n\r\nconst NoticesFilters = ({ onSearch }) => {\r\n    const [reset, setReset] = useState(false);\r\n    const [selectedLocation, setSelectedLocation] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const categories = useSelector(selectGetCategories);\r\n    const sex = useSelector(selectGetSex);\r\n    const species = useSelector(selectGetSpecies);\r\n    const locations = useSelector(selectGetLocations);\r\n\r\n    const filter = useSelector(selectGetNoticesFilter);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getCategories());\r\n        dispatch(getSex());\r\n        dispatch(getSpecies());\r\n        dispatch(getLocations());\r\n\r\n    }, [dispatch]);\r\n\r\n    const handleCategoryChange = (selectedOption) => {\r\n        dispatch(setCategoryFilter(selectedOption ? selectedOption.value : \"\"));\r\n    };\r\n\r\n    const handleGenderChange = (selectedOption) => {\r\n        dispatch(setGenderFilter(selectedOption ? selectedOption.value : \"\"));\r\n    };\r\n\r\n    const handlePetTypeChange = (selectedOption) => {\r\n        dispatch(setPetTypeFilter(selectedOption ? selectedOption.value : \"\"));\r\n    };\r\n\r\n    const handleLocationChange = (selectedOption) => {\r\n        dispatch(setLocationFilter(selectedOption ? selectedOption.value : \"\"));\r\n        setSelectedLocation(selectedOption);\r\n    };\r\n\r\n    const handleResetFilters = () => {\r\n        dispatch(resetFilters());\r\n        onSearch('');\r\n        setReset(true);\r\n        setTimeout(() => setReset(false), 0);\r\n    };\r\n\r\n    const createOptions = (options) => [\r\n        { value: '', label: 'Show All' },\r\n        ...options.map(option => ({ value: option, label: option }))\r\n    ];\r\n    const getSelectedOption = (value, options) => {\r\n        return options.find(option => option.value === value) || null;\r\n    };\r\n    const loadLocationOptions = (inputValue, callback) => {\r\n\r\n        const filteredLocations = locations.filter(location =>\r\n            location.cityEn.toLowerCase().includes(inputValue.toLowerCase())\r\n        );\r\n\r\n        filteredLocations.sort((a, b) => a.cityEn.localeCompare(b.cityEn));\r\n        const options = filteredLocations.map(location => ({\r\n            value: location._id,\r\n            label: `${location.cityEn}, ${location.stateEn}`\r\n        }));\r\n        callback(options);\r\n    };\r\n    const style = {\r\n        control: (provided, state) => ({\r\n            ...provided,\r\n            cursor: 'default',\r\n            width: \"100%\",\r\n            color: \"var(--primary-color)\",\r\n            height: \"42px\",\r\n            borderRadius: '30px',\r\n            border: 'none', [theme.breakpoints.up(\"md\")]: {\r\n                height: \"48px\",\r\n\r\n            },\r\n\r\n        }),\r\n        singleValue: (provided) => ({\r\n            ...provided,\r\n            color: \"var(--primary-color)\",\r\n            textTransform: 'capitalize',\r\n            paddingLeft: \"2px\",\r\n            fontSize: \"14px\",\r\n            fontWeight: 500,\r\n        }),\r\n        ValueContainer: (provided) => ({\r\n            ...provided,\r\n\r\n        }),\r\n        input: (provided) => ({\r\n            ...provided,\r\n            display: 'none'\r\n\r\n        }),\r\n        indicatorSeparator: (provided) => ({\r\n            ...provided,\r\n            display: 'none'\r\n\r\n        }),\r\n        indicatorContainer: (provided) => ({\r\n            ...provided,\r\n            display: 'none'\r\n\r\n        }),\r\n        container: (provided) => ({\r\n            ...provided,\r\n            width: \"100%\"\r\n\r\n        }),\r\n        placeholder: (provided) => ({\r\n            ...provided,\r\n            color: \"var(--primary-color)\",\r\n            fontSize: \"14px\",\r\n            fontWeight: 500,\r\n\r\n            paddingLeft: \"2px\",\r\n        }),\r\n        dropdownIndicator: (provided) => ({\r\n            ...provided,\r\n            color: \"var(--primary-color)\",\r\n            paddingLeft: 0,\r\n        }),\r\n        menu: (provided) => ({\r\n            ...provided,\r\n            borderRadius: \"14px\",\r\n            padding: \"0 12px \",\r\n            maxHeight: \"216px\",\r\n        }),\r\n        menuList: (provided) => ({\r\n            ...provided,\r\n            maxHeight: '216px !important',\r\n            \"::-webkit-scrollbar\": {\r\n                width: '8px',\r\n                height: '100px',\r\n                paddingTop: '10px',\r\n            },\r\n            \"::-webkit-scrollbar-thumb\": {\r\n                background: 'rgba(0,0,0,0.2)',\r\n                borderRadius: '10px',\r\n\r\n            },\r\n        }),\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            textTransform: 'capitalize',\r\n            color: state.isFocused ? 'var(--secondary-color)' : \"rgba(38, 38, 38, 0.60)\",\r\n            backgroundColor: state.isFocused ? 'transparent' : 'transparent',\r\n\r\n        })\r\n    }\r\n    return (\r\n        <Paper component=\"form\" onReset={handleResetFilters} sx={{\r\n            color: \"var(--primary-color)\", p: \"20px\", pt: \"4px\", my: \"40px\", boxShadow: 'none', backgroundColor: '#FFF4DF', borderRadius: '30px', [theme.breakpoints.up(\"md\")]: {\r\n                mt: \"44px\", mb: \"32px\", p: \"32px 40px\"\r\n            },\r\n        }}>\r\n            <Box sx={{\r\n                [theme.breakpoints.up(\"md\")]: {\r\n                    display: \"flex\", gap: \"16px\",\r\n                    width: \"100%\",\r\n                    mb: \"16px\"\r\n                },\r\n            }}><Box sx={{\r\n                [theme.breakpoints.up(\"md\")]: {\r\n                    width: \"265px\"\r\n\r\n                },\r\n            }}>\r\n                    <SearchField onSearch={onSearch} onReset={handleResetFilters} bgColor={\"var(--background-color)\"} /></Box>\r\n                <Box sx={{\r\n                    display: \"flex\", mt: \"4px\", mb: \"12px\", gap: \"8px\", width: \"100%\", [theme.breakpoints.up(\"md\")]: {\r\n                        width: '356px', m: 0\r\n\r\n                    },\r\n                }}>\r\n                    <Select\r\n                        styles={style}\r\n                        options={createOptions(categories)}\r\n                        onChange={handleCategoryChange}\r\n                        value={getSelectedOption(filter.category, createOptions(categories))}\r\n                        placeholder=\"Category\"\r\n\r\n                    />\r\n                    <Select\r\n                        styles={style}\r\n\r\n                        options={createOptions(sex)}\r\n                        onChange={handleGenderChange}\r\n                        value={getSelectedOption(filter.gender, createOptions(sex))}\r\n                        placeholder=\"By gender\"\r\n\r\n                    /></Box></Box>\r\n            <Box sx={{\r\n                [theme.breakpoints.up(\"md\")]: {\r\n                    width: \"433px\", display: \"flex\",\r\n                    gap: \"16px\"\r\n                },\r\n            }}> <Box sx={{\r\n                [theme.breakpoints.up(\"md\")]: {\r\n                    width: \"190px\", m: 0\r\n\r\n                },\r\n            }}>\r\n                    <Select\r\n                        styles={style}\r\n                        options={createOptions(species)}\r\n                        onChange={handlePetTypeChange}\r\n                        value={getSelectedOption(filter.species, createOptions(species))}\r\n                        placeholder=\"By type\"\r\n\r\n                    /></Box>\r\n                <Box mt=\"12px\" sx={{\r\n                    position: \"relative\", [theme.breakpoints.up(\"md\")]: {\r\n                        width: \"233px\",\r\n                        mt: 0\r\n                    },\r\n                }}>\r\n                    <AsyncSelect\r\n                        styles={{\r\n                            control: (provided, state) => ({\r\n                                ...provided,\r\n                                cursor: 'default',\r\n                                width: \"100%\",\r\n                                color: \"var(--primary-color)\",\r\n                                height: \"42px\",\r\n                                borderRadius: '30px',\r\n                                border: 'none', [theme.breakpoints.up(\"md\")]: {\r\n                                    height: \"48px\",\r\n\r\n                                },\r\n\r\n                            }),\r\n                            singleValue: (provided) => ({\r\n                                ...provided,\r\n                                color: \"var(--primary-color)\",\r\n                                textTransform: 'capitalize',\r\n                                paddingLeft: \"2px\",\r\n                                fontSize: \"14px\",\r\n                                fontWeight: 500,\r\n                            }),\r\n                            ValueContainer: (provided) => ({\r\n                                ...provided,\r\n\r\n                            }),\r\n                            input: (provided) => ({\r\n                                ...provided,\r\n\r\n\r\n                            }),\r\n                            indicatorSeparator: (provided) => ({\r\n                                ...provided,\r\n                                display: 'none'\r\n\r\n                            }),\r\n                            indicatorContainer: (provided) => ({\r\n                                ...provided,\r\n\r\n\r\n                            }),\r\n                            container: (provided) => ({\r\n                                ...provided,\r\n                                width: \"100%\"\r\n\r\n                            }),\r\n                            placeholder: (provided) => ({\r\n                                ...provided,\r\n                                color: \"var(--primary-color)\",\r\n                                fontSize: \"14px\",\r\n                                fontWeight: 500,\r\n\r\n                                paddingLeft: \"2px\",\r\n                            }),\r\n                            dropdownIndicator: (provided) => ({\r\n                                ...provided,\r\n                                display: 'none'\r\n                            }),\r\n                            menu: (provided) => ({\r\n                                ...provided,\r\n                                borderRadius: \"14px\",\r\n                                padding: \" 12px \",\r\n                                maxHeight: \"216px\",\r\n                            }),\r\n                            menuList: (provided) => ({\r\n                                ...provided,\r\n                                height: '94px ',\r\n                                \"::-webkit-scrollbar\": {\r\n                                    width: '8px',\r\n                                    height: '100px',\r\n                                    paddingTop: '10px',\r\n                                },\r\n                                \"::-webkit-scrollbar-thumb\": {\r\n                                    background: 'rgba(0,0,0,0.2)',\r\n                                    borderRadius: '10px',\r\n\r\n                                },\r\n                            }),\r\n                            option: (provided, state) => ({\r\n                                ...provided,\r\n                                textTransform: 'capitalize',\r\n                                color: state.isFocused ? 'var(--secondary-color)' : \"rgba(38, 38, 38, 0.60)\",\r\n                                backgroundColor: state.isFocused ? 'transparent' : 'transparent',\r\n                                padding: \"0 12px 8px 12px\",\r\n                                fontSize: \"14px\",\r\n                                fontWeight: 500,\r\n                            })\r\n                        }}\r\n                        loadOptions={loadLocationOptions}\r\n                        onChange={handleLocationChange}\r\n                        value={selectedLocation}\r\n                        placeholder=\"Location\"\r\n                        isClearable\r\n                    />\r\n                    <IconButton type=\"submit\" sx={{ position: 'absolute', right: '12px', p: 0, top: '12px' }}>\r\n                        <svg width={18} height={18} style={{ stroke: 'var(--primary-color)', fill: 'white' }}>\r\n                            <use href={`${sprite}#icon-search`}></use>\r\n                        </svg>\r\n                    </IconButton></Box></Box>\r\n            <Box sx={{ my: \"20px\", width: \"100%\", height: \" 1px\", backgroundColor: \"rgba(38, 38, 38, 0.10)\" }}></Box>\r\n            <SelectedValues reset={reset} />\r\n            <Box sx={{\r\n                [theme.breakpoints.up(\"md\")]: {\r\n                    width: \"200px\",\r\n                    ml: \"  auto \",\r\n                    mr: 0\r\n                },\r\n            }}>\r\n                <Btn onClick={handleResetFilters} bgColor={\"var(--secondary-color)\"} textColor={\"var(--background-color)\"} type={\"reset\"}>Reset</Btn></Box>\r\n        </Paper>\r\n\r\n    );\r\n};\r\n\r\nexport default NoticesFilters;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Box } from '@mui/material';\r\nimport NoticesFilters from 'components/NoticesFilters/NoticesFilters';\r\nimport NoticesList from 'components/NoticesList/NoticesList';\r\nimport ServerPagination from 'components/ServerPagination/ServerPagination';\r\nimport Title from 'components/Title/Title';\r\nimport { getNotices } from 'store/operations';\r\nimport { setInputFilter } from 'store/reducer';\r\nimport { selectGetNotices, selectGetNoticesFilter, selectTotalPagesNotices } from 'store/selectors';\r\nimport theme from 'components/Theme';\r\n\r\nconst Notices = () => {\r\n    const dispatch = useDispatch();\r\n    const filter = useSelector(selectGetNoticesFilter);\r\n    const notices = useSelector(selectGetNotices);\r\n    const totalPages = useSelector(selectTotalPagesNotices);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const itemsPerPage = 6;\r\n    const [filteredNotices, setFilteredNotices] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getNotices({ page: currentPage, perPage: itemsPerPage, filter }));\r\n    }, [dispatch, currentPage, filter]);\r\n    useEffect(() => {\r\n        const applyFilter = () => {\r\n            let filtered = notices;\r\n\r\n\r\n            if (filter.gender) {\r\n                filtered = filtered.filter(notice => notice.sex === filter.gender);\r\n            }\r\n\r\n            setFilteredNotices(filtered);\r\n        };\r\n\r\n        applyFilter();\r\n    }, [notices, filter]);\r\n    const handlePageChange = (page) => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    const handleSearch = (searchTerm) => {\r\n        dispatch(setInputFilter(searchTerm));\r\n        setCurrentPage(1);\r\n    };\r\n    console.log(filteredNotices)\r\n    return (\r\n        <Box mt=\"60px\" sx={{\r\n            [theme.breakpoints.up(\"md\")]: {\r\n                mt: \"96px\"\r\n            },\r\n        }}>\r\n            <Title>Find your favorite pet</Title>\r\n            <NoticesFilters onSearch={handleSearch} />\r\n            <NoticesList props={filteredNotices} />\r\n            {(filteredNotices.length > 6 || totalPages > 1) && (\r\n                <ServerPagination\r\n                    totalPages={totalPages}\r\n                    currentPage={currentPage}\r\n                    onPageChange={handlePageChange}\r\n                />\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Notices;\r\n"],"names":["ModalAttention","_jsxs","Box","sx","pb","children","_jsx","width","height","my","mx","backgroundColor","borderRadius","textAlign","Typography","fontSize","fontWeight","color","mb","lineHeight","letterSpacing","px","AuthNav","_ref","popularity","filledStars","Math","min","stars","i","push","StarIcon","pr","StarBorderIcon","props","dispatch","useDispatch","isFavorite","setIsFavorite","useState","infoPet","useSelector","selectNoticeById","useEffect","getNoticesById","_id","favorites","JSON","parse","localStorage","getItem","includes","console","log","index","indexOf","splice","setItem","stringify","handleFavoriteClick","removeFromFavorite","addToFavorite","style","textTransform","py","position","right","p","category","src","imgURL","alt","title","objectFit","marginBottom","display","alignItems","justifyContent","Stars","PetInfo","hidden","overflow","comment","gap","bottom","Button","onClick","href","concat","sprite","paddingLeft","fill","FavoriteBorderIcon","pl","stroke","user","Link","email","target","rel","textDecoration","isModalAttentionOpen","setModalAttentionOpen","isModalNoticeOpen","setModalNoticeOpen","isLogIn","IsLoggedIn","selectNoticeFavorite","localFavorites","bgcolor","minWidth","theme","breakpoints","up","textOverflow","down","handleLearnMoreClick","IconButton","filter","id","ModalWrap","isOpen","onClose","ModalNotice","length","List","flexWrap","map","el","ListItem","NoticesItem","profile","useLocation","pathname","styleCategory","opacity","styleProps","mt","name","formatDateString","birthday","sex","species","onSearch","bgColor","searchTerm","setSearchTerm","isNoticesPage","margin","border","m","Paper","component","boxShadow","TextField","InputLabelProps","shrink","value","onChange","event","placeholder","fullWidth","pattern","handleClearInput","top","type","preventDefault","totalPages","currentPage","onPageChange","isFirstPage","isLastPage","buttonStyle","activeButtonStyle","borderColor","pageNumbers","handleFirstPage","disabled","KeyboardDoubleArrowLeftIcon","handlePreviousPage","ChevronLeftIcon","pageNumber","handleNextPage","ChevronRightIcon","handleLastPage","KeyboardDoubleArrowRightIcon","dateString","undefined","date","Date","parts","Intl","DateTimeFormat","year","month","day","format","split","formatDateRevers","getFullYear","String","getMonth","padStart","getDate","reset","selectedFilters","setSelectedFilters","popular","price","setPopularFilter","setPriceFilter","handleFilterChange","filterName","prevState","clearFilter","selectedButtonStyle","getButtonStyle","isSelected","flexDirection","size","ml","CloseIcon","setReset","selectedLocation","setSelectedLocation","categories","selectGetCategories","selectGetSex","selectGetSpecies","locations","selectGetLocations","selectGetNoticesFilter","getCategories","getSex","getSpecies","getLocations","handleResetFilters","resetFilters","setTimeout","createOptions","options","label","option","getSelectedOption","find","control","provided","state","cursor","singleValue","ValueContainer","input","indicatorSeparator","indicatorContainer","container","dropdownIndicator","menu","padding","maxHeight","menuList","paddingTop","background","isFocused","onReset","pt","SearchField","Select","styles","selectedOption","setCategoryFilter","setGenderFilter","gender","setPetTypeFilter","AsyncSelect","loadOptions","loadLocationOptions","inputValue","callback","filteredLocations","location","cityEn","toLowerCase","sort","a","b","localeCompare","stateEn","setLocationFilter","isClearable","SelectedValues","mr","Btn","textColor","Notices","notices","selectGetNotices","selectTotalPagesNotices","setCurrentPage","filteredNotices","setFilteredNotices","getNotices","page","perPage","applyFilter","filtered","notice","Title","NoticesFilters","setInputFilter","NoticesList","ServerPagination"],"sourceRoot":""}