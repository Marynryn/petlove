{"version":3,"file":"static/js/776.9ca97c03.chunk.js","mappings":"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","sources":["components/ModalAttention/ModalAttention.jsx","components/Stars/Stars.jsx","components/ModalNotice/ModalNotice.jsx","components/NoticesItem/NoticesItem.jsx","components/NoticesList/NoticesList.jsx","components/PetInfo/PetInfo.jsx","components/SearchField/SearchField.jsx","components/ServerPagination/ServerPagination.jsx","components/Title/Title.jsx","helpers/formatDate.js","components/SelectedValues/SelectedValues.jsx","components/NoticesFilters/NoticesFilters.jsx","pages/Notices/Notices.jsx"],"sourcesContent":["import { Box, Typography } from '@mui/material';\n\nimport React from 'react'\n\nimport { AuthNav } from 'components/AuthNav/AuthNav';\nexport const ModalAttention = () => {\n\n\n    return (\n        <Box sx={{ pb: \" 20px\" }}>\n            <Box sx={{ width: \"80px\", height: \"80px\", my: \"20px\", mx: \"auto\", backgroundColor: \"#FFF4DF\", borderRadius: \"100%\", textAlign: 'center' }}>\n                <Typography sx={{ textAlign: \"center\", fontSize: \"44px\", fontWeight: 800, }}>🐶</Typography>\n            </Box>\n            <Typography sx={{ textAlign: \"center\", color: \"var(--secondary-color)\", mb: \"20px\", fontSize: \"20px\", fontWeight: 700, }}>Attention</Typography>\n            <Typography sx={{ mb: \"24px\", fontSize: \"14px\", fontWeight: 500, textAlign: \"center\", lineHeight: 1.28, letterSpacing: \"-0.28px\" }}>We would like to remind you that certain functionality is available only to authorized users.If you have an account, please log in with your credentials. If you do not already have an account, you must register to access these features.</Typography>\n            <Box px=\"20px\"> <AuthNav /></Box>\n\n        </Box>\n    )\n}\nexport default ModalAttention;","import React from 'react';\nimport { Box } from '@mui/material';\nimport StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\n\nconst Stars = ({ popularity }) => {\n    if (!popularity) {\n        return null;\n    }\n    const maxStars = 5;\n    const filledStars = Math.min(popularity, maxStars);\n\n    const stars = [];\n\n    for (let i = 1; i <= maxStars; i++) {\n        stars.push(\n            i <= filledStars ? (\n                <StarIcon key={i} sx={{ color: 'rgba(255, 197, 49, 1)', fontSize: '16px', pr: '4px' }} />\n            ) : (\n                <StarBorderIcon key={i} sx={{ color: 'rgba(38, 38, 38, 0.05)', fontSize: '16px', pr: '4px' }} />\n            )\n        );\n    }\n\n    return <Box>{stars}</Box>;\n};\n\nexport default Stars;\n\n\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addToFavorite, getNoticesById, removeFromFavorite } from 'store/operations';\nimport { selectNoticeById } from './../../store/selectors';\nimport { Box, Button, Link, Typography } from '@mui/material';\nimport PetInfo from 'components/PetInfo/PetInfo';\nimport sprite from '../../img/svg/symbol-defs.svg'\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport Stars from 'components/Stars/Stars';\n\nexport const ModalNotice = ({ props }) => {\n    const dispatch = useDispatch();\n    const [isFavorite, setIsFavorite] = useState(false);\n    const infoPet = useSelector(selectNoticeById);\n\n    useEffect(() => {\n        dispatch(getNoticesById(props._id));\n\n        const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n        setIsFavorite(favorites.includes(props._id));\n    }, [dispatch, props._id]);\n    console.log(infoPet)\n    useEffect(() => {\n\n        const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n        if (isFavorite && !favorites.includes(props._id)) {\n            favorites.push(props._id);\n        } else if (!isFavorite && favorites.includes(props._id)) {\n            const index = favorites.indexOf(props._id);\n            if (index > -1) {\n                favorites.splice(index, 1);\n            }\n        }\n        localStorage.setItem('favorites', JSON.stringify(favorites));\n    }, [isFavorite, props._id]);\n\n    const handleFavoriteClick = () => {\n        if (isFavorite) {\n            dispatch(removeFromFavorite(infoPet._id));\n        } else {\n            dispatch(addToFavorite(infoPet._id));\n        }\n        setIsFavorite(!isFavorite);\n    };\n\n    const style = {\n        backgroundColor: \"var(--secondary-color)\", color: \"var(--background-color)\", height: \"46px\", width: \"100%\", textTransform: 'capitalize', fontSize: \"14px\", borderRadius: \"30px\", fontWeight: 500, '&:hover': { backgroundColor: \"#F9B020\" }\n    }\n    return (\n        <Box sx={{ py: \"20px\", textAlign: 'center', position: \"relative\", height: \"386px\", width: \"280px\", }}>\n            <Box>\n                <Box sx={{ position: \"absolute\", right: \"55%\", borderRadius: \"30px\", backgroundColor: \" #FFF4DF\", }}><Typography sx={{ p: \"8px 14px\", textTransform: 'capitalize', fontWeight: 500, fontSize: \"12px\", color: \"var(--secondary-color)\", }}>{infoPet.category}</Typography></Box>\n                <img src={infoPet.imgURL} alt={infoPet.title} style={{ width: \"120px\", height: \"120px\", objectFit: 'cover', marginBottom: \"24px\", borderRadius: \"100%\", mx: \"auto\", }} />\n            </Box>\n            <Box sx={{}}>\n                <Typography sx={{ fontWeight: 700, fontSize: \"16px\", mb: \"10px\" }}>{infoPet.title}</Typography>\n                <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", mb: \"24px\" }} >\n                    <Stars popularity={infoPet.popularity} />\n                    <Typography sx={{ fontSize: \"14px\" }}>{infoPet.popularity}</Typography>\n                </Box>\n            </Box>\n            <Box px=\"26px\"> <PetInfo props={infoPet} hidden={true} /></Box>\n\n            <Typography sx={{ fontWeight: 500, fontSize: \"14px\", overflow: \"hidden\", letterSpacing: \"-0.28px\", mb: \"42px\" }}>{infoPet.comment}</Typography>\n            <Box style={{ display: \"flex\", gap: \"10px\", position: \"absolute\", bottom: \"20px\", width: \"100%\", px: \"8px\" }}>\n\n                {isFavorite ? (\n                    <Button onClick={handleFavoriteClick} sx={style}  >Remove from&nbsp;&nbsp;\n                        <svg width={18} height={18}>\n                            <use href={`${sprite}#icon-trash-01`} style={{ paddingLeft: \"8px\", fill: \"var(--background-color)\" }} ></use>\n                        </svg>\n                    </Button>\n                ) : (\n                    <Button onClick={handleFavoriteClick} sx={style} > Add to&nbsp;&nbsp;\n                        <FavoriteBorderIcon pl=\"8px\" sx={{ fontSize: \"18px\", stroke: \"var(--background-color)\" }} /></Button>\n                )}\n\n                {infoPet.user && (<Link href={`mailto:${infoPet.user.email}`} target=\"_blank\" rel=\"noopener\" sx={{ textDecoration: 'none', width: \"100%\" }}>\n\n\n                    <Button sx={{ backgroundColor: \" #FFF4DF\", color: \"var(--secondary-color)\", height: \"46px\", width: \"100%\", textTransform: 'capitalize', fontSize: \"16px\", borderRadius: \"30px\", fontWeight: 500, '&:hover': { backgroundColor: \"#FBE7C1\" }, }} >Contact</Button>\n                </Link>)}\n            </Box>\n        </Box >\n    )\n}\nexport default ModalNotice;","import StarIcon from '@mui/icons-material/Star';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, Button, IconButton, Typography } from '@mui/material';\nimport sprite from '../../img/svg/symbol-defs.svg';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport ModalWrap from 'components/ModalWrap/ModalWrap';\nimport ModalAttention from 'components/ModalAttention/ModalAttention';\nimport ModalNotice from 'components/ModalNotice/ModalNotice';\nimport { IsLoggedIn } from 'helpers/isLoggedIn';\nimport PetInfo from 'components/PetInfo/PetInfo';\nimport { addToFavorite, removeFromFavorite } from 'store/operations';\nimport { selectNoticeFavorite } from 'store/selectors';\n\nconst NoticesItem = ({ props }) => {\n    const dispatch = useDispatch();\n    const [isFavorite, setIsFavorite] = useState(false);\n    const [isModalAttentionOpen, setModalAttentionOpen] = useState(false);\n    const [isModalNoticeOpen, setModalNoticeOpen] = useState(false);\n    const { isLogIn } = IsLoggedIn();\n    const favorites = useSelector(selectNoticeFavorite);\n\n    useEffect(() => {\n\n        const localFavorites = JSON.parse(localStorage.getItem('favorites')) || favorites;\n        setIsFavorite(favorites.includes(props._id) || localFavorites.includes(props._id));\n    }, [favorites, props._id]);\n\n    const handleFavoriteClick = () => {\n        if (!isLogIn) {\n            setModalAttentionOpen(true);\n        } else {\n            const localFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n            if (isFavorite) {\n                dispatch(removeFromFavorite(props._id));\n                localStorage.setItem('favorites', JSON.stringify(localFavorites.filter(id => id !== props._id)));\n            } else {\n                dispatch(addToFavorite(props._id));\n                localStorage.setItem('favorites', JSON.stringify([...localFavorites, props._id]));\n            }\n            setIsFavorite(!isFavorite);\n        }\n    };\n\n    const handleLearnMoreClick = () => {\n        if (!isLogIn) {\n            setModalAttentionOpen(true);\n        } else {\n            setModalNoticeOpen(true);\n        }\n    };\n\n    return (\n        <Box p=\"24px\" width=\"100%\" bgcolor={'var(--background-color)'} sx={{ minWidth: \"232px\", borderRadius: \"16px\", height: \"430px\", position: \"relative\" }}>\n            <img src={props.imgURL} alt={props.title} style={{ width: \"100%\", objectFit: 'cover', marginBottom: \"24px\", height: \"178px\", borderRadius: \"16px\" }} />\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <Typography sx={{ fontWeight: 700, fontSize: \"16px\", textOverflow: 'ellipsis', overflow: \"hidden\" }}>{props.title}</Typography>\n                <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                    <StarIcon sx={{ color: \"var(--secondary-color)\", width: \"16px\", height: \"16px\" }} />\n                    <Typography sx={{ fontSize: \"14px\" }}>{props.popularity}</Typography>\n                </Box>\n            </Box>\n            <PetInfo props={props} />\n            <Typography sx={{ fontWeight: 500, fontSize: \"14px\", overflow: \"hidden\", letterSpacing: \"-0.28px\" }}>{props.comment}</Typography>\n            <Box style={{ display: \"flex\", gap: \"10px\", bottom: \"25px\", position: \"absolute\", justifyContent: \"space-between\", minWidth: \"232px\" }}>\n\n                <Button sx={{ backgroundColor: \"var(--secondary-color)\", color: \"var(--background-color)\", minWidth: \"180px\", height: \"46px\", textTransform: 'capitalize', fontSize: \"14px\", borderRadius: \"30px\", fontWeight: 500, }} onClick={handleLearnMoreClick}>\n                    Learn more\n                </Button>\n                <Box sx={{ borderRadius: \"30px\", backgroundColor: \" #FFF4DF\", width: \"46px\", height: \"46px\", display: \"flex\", justifyContent: \"center\" }}>\n                    <IconButton onClick={handleFavoriteClick}>\n                        {isFavorite ? (\n                            <Box>\n                                <svg width={18} height={18}>\n                                    <use href={`${sprite}#icon-trash-01`} style={{ fill: \"var(--secondary-color)\" }}></use>\n                                </svg>\n                            </Box>\n                        ) : (\n                            <FavoriteBorderIcon sx={{ fill: \"var(--secondary-color)\" }} />\n                        )}\n                    </IconButton>\n                </Box>\n            </Box>\n            <ModalWrap isOpen={isModalAttentionOpen} onClose={() => setModalAttentionOpen(false)}>\n                <ModalAttention />\n            </ModalWrap>\n            <ModalWrap isOpen={isModalNoticeOpen} onClose={() => setModalNoticeOpen(false)}>\n                <ModalNotice props={props} />\n            </ModalWrap>\n        </Box>\n    );\n};\n\nexport default NoticesItem;\n","import React from 'react'\nimport { Box, List, ListItem } from \"@mui/material\";\nimport NoticesItem from 'components/NoticesItem/NoticesItem';\n\nexport const NoticesList = ({ props }) => {\n    if (props.length === 0) return null;\n    return (\n        <Box>\n            <List sx={{ p: 0 }}>\n                {props.map((el) => (\n                    <ListItem key={el._id} sx={{ p: 0, mb: \"24px\" }}>\n                        <NoticesItem props={el} />\n\n                    </ListItem>\n                ))}\n            </List>\n        </Box>\n    )\n}\nexport default NoticesList;","import React from 'react'\nimport { formatDateString } from '../../helpers/formatDate';\nimport { Box, Typography } from '@mui/material';\nimport { useLocation } from 'react-router-dom';\n\n\nexport const PetInfo = ({ props, hidden }) => {\n    const location = useLocation();\n    const profile = location.pathname === \"/profile\";\n\n    const styleCategory = {\n        fontWeight: 500, fontSize: \"10px\", letterSpacing: \"-0.2px\", opacity: 0.5\n    }\n    const styleProps = {\n        fontWeight: 500, fontSize: \"12px\", letterSpacing: \"-0.24px\", textTransform: \"capitalize\",\n    }\n    return (\n        <Box sx={{\n            display: \"flex\", gap: \"10px\", mt: \"8px\", mb: profile ? 0 : \"16px\", justifyContent: \"space-between\", minWidth: profile ? \"100px\" : \"232px\", overflow: 'hidden',\n            textOverflow: 'ellipsis', flexWrap: profile ? 'wrap' : 'nowrap',\n        }}>\n            <Box>\n                <Typography sx={styleCategory}>Name</Typography>\n                <Typography sx={styleProps}>{props.name}</Typography>\n            </Box>\n            <Box>\n                <Typography sx={styleCategory}>Birthday</Typography>\n                <Typography sx={styleProps}>{formatDateString(props.birthday)}</Typography>\n            </Box>\n            <Box>\n                <Typography sx={styleCategory}>Sex</Typography>\n                <Typography sx={styleProps}>{props.sex}</Typography>\n            </Box>\n            <Box>\n                <Typography sx={styleCategory}>Species</Typography>\n                <Typography sx={styleProps}>{props.species}</Typography>\n            </Box>\n            {!hidden && <Box>\n\n                <Typography sx={{\n                    fontWeight: 500, fontSize: \"10px\", letterSpacing: \"-0.2px\", opacity: 0.5, overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                }}>Category</Typography>\n                <Typography sx={styleProps}>{props.category}</Typography>\n            </Box>}\n\n        </Box>\n    )\n}\nexport default PetInfo;","import React, { useEffect, useState } from 'react';\nimport { Box, TextField, IconButton, Paper } from '@mui/material';\nimport sprite from '../../img/svg/symbol-defs.svg';\nimport { useLocation } from 'react-router-dom';\n\n\nconst SearchField = ({ onSearch, bgColor }) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const location = useLocation();\n    const isNoticesPage = location.pathname === '/notices';\n\n\n    const handleInputChange = (event) => {\n        setSearchTerm(event.target.value);\n    };\n\n    const handleClearInput = () => {\n        setSearchTerm('');\n        onSearch('');\n\n    };\n    useEffect(() => {\n        if (onSearch) {\n            setSearchTerm(\"\");\n\n        }\n    }, [onSearch, setSearchTerm]);\n    const handleSearch = (event) => {\n        event.preventDefault();\n        onSearch(searchTerm);\n    };\n    const style = {\n\n        '& .MuiOutlinedInput-root': {\n            backgroundColor: `${bgColor}`,\n            borderRadius: '30px',\n            margin: '0',\n            border: 'none',\n            height: \"42px\"\n\n        },\n        '& .MuiOutlinedInput-notchedOutline': {\n            border: isNoticesPage ? \"none\" : \"1px solid rgba(38, 38, 38, 0.15)\",\n        },\n        '& .MuiInputBase-input': {\n            '&::placeholder': {\n                opacity: isNoticesPage ? 1 : 0.8,\n                color: isNoticesPage ? 'var(--primary-color)' : 'rgba(38, 38, 38, 0.50)',\n                fontSize: '14px',\n                fontWeight: 500,\n            },\n        },\n    };\n    return (\n        <Paper component=\"div\" sx={{ boxShadow: 'none', backgroundColor: 'var(--background-gray)' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mt: '4px', borderRadius: '30px', position: 'relative' }}>\n                <TextField\n                    sx={style}\n                    id=\"name\"\n                    InputLabelProps={{ shrink: false }}\n                    value={searchTerm}\n                    onChange={handleInputChange}\n                    placeholder=\"Search\"\n                    fullWidth\n                    margin=\"normal\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-Я]*)*$\"\n                />\n                {searchTerm && (\n                    <IconButton onClick={handleClearInput} sx={{ position: 'absolute', right: '32px', p: 0, top: '28px' }} >\n                        <svg width={18} height={18} style={{ stroke: '#EF2447', fill: '#EF2447' }}>\n                            <use href={`${sprite}#icon-x`}></use>\n                        </svg>\n                    </IconButton>\n                )}\n                <IconButton type=\"submit\" onClick={handleSearch} sx={{ position: 'absolute', right: '12px', p: 0, top: '28px' }}>\n                    <svg width={18} height={18} style={{ stroke: 'var(--primary-color)', fill: 'white' }}>\n                        <use href={`${sprite}#icon-search`}></use>\n                    </svg>\n                </IconButton>\n            </Box>\n        </Paper>\n    );\n};\n\nexport default SearchField;\n\n","import React from 'react';\nimport { Box, IconButton } from \"@mui/material\";\nimport KeyboardDoubleArrowLeftIcon from '@mui/icons-material/KeyboardDoubleArrowLeft';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport KeyboardDoubleArrowRightIcon from '@mui/icons-material/KeyboardDoubleArrowRight';\n\nconst ServerPagination = ({ totalPages, currentPage, onPageChange }) => {\n    const handleFirstPage = () => onPageChange(1);\n    const handlePreviousPage = () => onPageChange(currentPage - 1);\n    const handleNextPage = () => onPageChange(currentPage + 1);\n    const handleLastPage = () => onPageChange(totalPages);\n\n    const isFirstPage = currentPage === 1;\n    const isLastPage = currentPage === totalPages;\n\n    const buttonStyle = {\n        borderRadius: '100%',\n        border: '1px solid rgba(38, 38, 38, 0.20)',\n        width: '38px',\n        height: '38px',\n\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontWeight: 700,\n        '@media (max-width: 320px)': {\n            width: '34px',\n            height: '34px',\n        },\n    };\n    const activeButtonStyle = {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontWeight: 700,\n        borderRadius: '100%',\n        border: '1px solid',\n        width: '38px',\n        height: '38px',\n        '@media (max-width: 320px)': {\n            width: '34px',\n            height: '34px',\n        },\n        borderColor: \"var(--secondary-color)\",\n        backgroundColor: 'var(--secondary-color)',\n\n        color: \"var(--background-color)\",\n    };\n    const pageNumbers = [currentPage];\n    if (currentPage < totalPages) {\n        pageNumbers.push(currentPage + 1);\n    }\n    return (\n        <Box sx={{\n            display: 'flex', alignItems: 'center', justifyContent: 'center', mt: '26px', gap: \"6px\", width: \"334px\", '@media (max-width: 320px)': {\n                width: '280px',\n                gap: \"4px\",\n            },\n        }}>\n            <IconButton sx={buttonStyle} onClick={handleFirstPage} disabled={isFirstPage}>\n                <KeyboardDoubleArrowLeftIcon sx={{ p: \"8px\", minWidth: \"18px\", '@media (max-width: 320px)': { p: \"6px\" }, }} />\n            </IconButton>\n            <IconButton sx={buttonStyle} onClick={handlePreviousPage} disabled={isFirstPage}>\n                <ChevronLeftIcon sx={{ p: \"8px\", '@media (max-width: 320px)': { p: \"6px\" }, }} />\n            </IconButton>\n            <Box mx=\"5px\" sx={{ display: \"flex\", gap: \"10px\", '@media (max-width: 320px)': { gap: \"6px\", mx: 0 }, }}>\n                {pageNumbers.map((pageNumber, index) => (\n                    <Box key={index} sx={pageNumber === currentPage ? activeButtonStyle : buttonStyle} mx={0} onClick={() => onPageChange(pageNumber)}>\n                        {pageNumber}\n                    </Box>\n                ))}\n                <Box sx={buttonStyle} >\n                    ...\n                </Box></Box>\n            <IconButton sx={buttonStyle} onClick={handleNextPage} disabled={isLastPage}>\n                <ChevronRightIcon sx={{ p: \"8px\", '@media (max-width: 320px)': { p: \"6px\" }, }} />\n            </IconButton>\n            <IconButton sx={buttonStyle} onClick={handleLastPage} disabled={isLastPage}>\n                <KeyboardDoubleArrowRightIcon sx={{ p: \"8px\", '@media (max-width: 320px)': { p: \"6px\" }, }} />\n            </IconButton>\n        </Box>\n    );\n};\n\nexport default ServerPagination;\n\n\n\n","import { Typography } from '@mui/material'\nimport React from 'react'\n\nexport const Title = ({ children }) => {\n    return (\n        <Typography component=\"h2\" sx={(theme) => ({\n            fontSize: \"28px\",\n            fontWeight: 700,\n            color: \"text.primary\",\n            lineHeight: 1,\n            letterSpacing: \"-1.12px\",\n\n            [theme.breakpoints.up(\"md\")]: {\n                fontSize: \"54px\",\n\n\n                letterSpacing: \"-1.62px\",\n            }\n        })\n        } > {children}</ Typography >\n    )\n}\n\nexport default Title;","export function formatDateString(dateString) {\n  if (dateString === undefined) {\n    return;\n  }\n  const date = new Date(dateString);\n\n  const options = {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n  };\n  const formattedDate = new Intl.DateTimeFormat(\"en-US\", options).format(date);\n  const parts = formattedDate.split(\"/\");\n  const dateWithDots = `${parts[0]}.${parts[1]}.${parts[2]}`;\n\n  return dateWithDots;\n}\nexport function formatDateRevers(date) {\n  if (!date) {\n    return;\n  }\n\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n\n  return `${year}-${month}-${day}`;\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setPopularFilter, setPriceFilter } from 'store/reducer';\nimport { Button, IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Box from '@mui/material/Box';\n\nconst SelectedValues = ({ reset }) => {\n    const dispatch = useDispatch();\n    const [selectedFilters, setSelectedFilters] = useState({\n        popular: null,\n        price: null\n    });\n\n    useEffect(() => {\n        if (reset) {\n            setSelectedFilters({\n                popular: null,\n                price: null\n            });\n            dispatch(setPopularFilter(''));\n            dispatch(setPriceFilter(''));\n        }\n    }, [reset, dispatch]);\n\n    const handleFilterChange = (filterName, value) => {\n        setSelectedFilters(prevState => ({\n            ...prevState,\n            [filterName]: value\n        }));\n\n        if (filterName === 'popular') {\n            dispatch(setPopularFilter(value));\n        } else if (filterName === 'price') {\n            dispatch(setPriceFilter(value));\n        }\n    };\n\n    const clearFilter = (filterName) => {\n        setSelectedFilters(prevState => ({\n            ...prevState,\n            [filterName]: null\n        }));\n\n        if (filterName === 'popular') {\n            dispatch(setPopularFilter(''));\n        } else if (filterName === 'price') {\n            dispatch(setPriceFilter(''));\n        }\n    };\n\n    const buttonStyle = {\n        borderRadius: '30px',\n        p: \"12px\",\n        height: \"18px\",\n        border: \"none\",\n        backgroundColor: '#FFFFFF',\n        color: \"var(--primary-color)\"\n    };\n\n    const selectedButtonStyle = {\n        ...buttonStyle,\n        backgroundColor: 'var(--secondary-color)',\n        color: '#FFFFFF',\n    };\n    const getButtonStyle = (isSelected) => ({\n        p: 0,\n        textTransform: 'capitalize',\n        height: \"12px\",\n        fontSize: '14px',\n        fontWeight: 500,\n        color: isSelected ? '#FFFFFF' : \"var(--primary-color)\"\n    });\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\" gap={2} mb=\"20px\">\n            <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" gap=\"10px\">\n                <Box sx={selectedFilters.popular === 'popular' ? selectedButtonStyle : buttonStyle}>\n                    <Button\n                        sx={getButtonStyle(selectedFilters.popular === 'popular')}\n                        onClick={() => handleFilterChange('popular', 'popular')}\n                    >\n                        Popular\n                    </Button>\n                    {selectedFilters.popular === 'popular' && (\n                        <IconButton onClick={() => clearFilter('popular')} size=\"small\" sx={{ ml: \"6px\", p: 0, color: '#FFFFFF' }}>\n                            <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    )}\n                </Box>\n                <Box sx={selectedFilters.popular === 'unpopular' ? selectedButtonStyle : buttonStyle}>\n                    <Button\n                        sx={getButtonStyle(selectedFilters.popular === 'unpopular')}\n                        onClick={() => handleFilterChange('popular', 'unpopular')}\n                    >\n                        Unpopular\n                    </Button>\n                    {selectedFilters.popular === 'unpopular' && (\n                        <IconButton onClick={() => clearFilter('popular')} size=\"small\" sx={{ ml: \"6px\", p: 0, color: '#FFFFFF' }}>\n                            <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    )}\n                </Box>\n                <Box sx={selectedFilters.price === \"cheap\" ? selectedButtonStyle : buttonStyle}>\n                    <Button\n                        sx={getButtonStyle(selectedFilters.price === \"cheap\")}\n                        onClick={() => handleFilterChange('price', \"cheap\")}\n                    >\n                        Cheap\n                    </Button>\n                    {selectedFilters.price === \"cheap\" && (\n                        <IconButton onClick={() => clearFilter('price')} size=\"small\" sx={{ ml: \"6px\", p: 0, color: '#FFFFFF' }}>\n                            <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    )}\n                </Box>\n                <Box sx={selectedFilters.price === \"expensive\" ? selectedButtonStyle : buttonStyle}>\n                    <Button\n                        sx={getButtonStyle(selectedFilters.price === \"expensive\")}\n                        onClick={() => handleFilterChange('price', \"expensive\")}\n                    >\n                        Expensive\n                    </Button>\n                    {selectedFilters.price === \"expensive\" && (\n                        <IconButton onClick={() => clearFilter('price')} size=\"small\" sx={{ ml: \"6px\", p: 0, color: '#FFFFFF' }}>\n                            <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    )}\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default SelectedValues;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/async';\nimport sprite from '../../img/svg/symbol-defs.svg';\nimport {\n    selectGetCategories,\n    selectGetSex,\n    selectGetSpecies,\n    selectGetLocations,\n    selectGetNoticesFilter\n} from 'store/selectors';\nimport SearchField from 'components/SearchField/SearchField';\nimport {\n    setCategoryFilter,\n    setGenderFilter,\n    setPetTypeFilter,\n    setLocationFilter,\n    resetFilters,\n\n} from 'store/reducer';\nimport SelectedValues from 'components/SelectedValues/SelectedValues';\nimport { Box, IconButton, Paper } from '@mui/material';\nimport Btn from 'components/Button/Button';\nimport { getCategories, getLocations, getSex, getSpecies } from 'store/operations';\n\n\nconst NoticesFilters = ({ onSearch }) => {\n    const [reset, setReset] = useState(false);\n    const [selectedLocation, setSelectedLocation] = useState(null);\n    const dispatch = useDispatch();\n    const categories = useSelector(selectGetCategories);\n    const sex = useSelector(selectGetSex);\n    const species = useSelector(selectGetSpecies);\n    const locations = useSelector(selectGetLocations);\n\n    const filter = useSelector(selectGetNoticesFilter);\n\n    useEffect(() => {\n\n        dispatch(getCategories());\n        dispatch(getSex());\n        dispatch(getSpecies());\n        dispatch(getLocations());\n\n    }, [dispatch]);\n\n    const handleCategoryChange = (selectedOption) => {\n        dispatch(setCategoryFilter(selectedOption ? selectedOption.value : \"\"));\n    };\n\n    const handleGenderChange = (selectedOption) => {\n        dispatch(setGenderFilter(selectedOption ? selectedOption.value : \"\"));\n    };\n\n    const handlePetTypeChange = (selectedOption) => {\n        dispatch(setPetTypeFilter(selectedOption ? selectedOption.value : \"\"));\n    };\n\n    const handleLocationChange = (selectedOption) => {\n        dispatch(setLocationFilter(selectedOption ? selectedOption.value : \"\"));\n        setSelectedLocation(selectedOption);\n    };\n\n    const handleResetFilters = () => {\n        dispatch(resetFilters());\n        onSearch('');\n        setReset(true);\n        setTimeout(() => setReset(false), 0);\n    };\n\n    const createOptions = (options) => [\n        { value: '', label: 'Show All' },\n        ...options.map(option => ({ value: option, label: option }))\n    ];\n    const getSelectedOption = (value, options) => {\n        return options.find(option => option.value === value) || null;\n    };\n    const loadLocationOptions = (inputValue, callback) => {\n\n        const filteredLocations = locations.filter(location =>\n            location.cityEn.toLowerCase().includes(inputValue.toLowerCase())\n        );\n\n        filteredLocations.sort((a, b) => a.cityEn.localeCompare(b.cityEn));\n        const options = filteredLocations.map(location => ({\n            value: location._id,\n            label: `${location.cityEn}, ${location.stateEn}`\n        }));\n        callback(options);\n    };\n    const style = {\n        control: (provided, state) => ({\n            ...provided,\n            cursor: 'default',\n            width: \"100%\",\n            color: \"var(--primary-color)\",\n            height: \"42px\",\n            borderRadius: '30px',\n            border: 'none',\n\n        }),\n        singleValue: (provided) => ({\n            ...provided,\n            color: \"var(--primary-color)\",\n            textTransform: 'capitalize',\n            paddingLeft: \"2px\",\n            fontSize: \"14px\",\n            fontWeight: 500,\n        }),\n        ValueContainer: (provided) => ({\n            ...provided,\n\n        }),\n        input: (provided) => ({\n            ...provided,\n            display: 'none'\n\n        }),\n        indicatorSeparator: (provided) => ({\n            ...provided,\n            display: 'none'\n\n        }),\n        indicatorContainer: (provided) => ({\n            ...provided,\n            display: 'none'\n\n        }),\n        container: (provided) => ({\n            ...provided,\n            width: \"100%\"\n\n        }),\n        placeholder: (provided) => ({\n            ...provided,\n            color: \"var(--primary-color)\",\n            fontSize: \"14px\",\n            fontWeight: 500,\n\n            paddingLeft: \"2px\",\n        }),\n        dropdownIndicator: (provided) => ({\n            ...provided,\n            color: \"var(--primary-color)\",\n            paddingLeft: 0,\n        }),\n        menu: (provided) => ({\n            ...provided,\n            borderRadius: \"14px\",\n            padding: \"0 12px \",\n            maxHeight: \"216px\",\n        }),\n        menuList: (provided) => ({\n            ...provided,\n            maxHeight: '216px !important',\n            \"::-webkit-scrollbar\": {\n                width: '8px',\n                height: '100px',\n                paddingTop: '10px',\n            },\n            \"::-webkit-scrollbar-thumb\": {\n                background: 'rgba(0,0,0,0.2)',\n                borderRadius: '10px',\n\n            },\n        }),\n        option: (provided, state) => ({\n            ...provided,\n            textTransform: 'capitalize',\n            color: state.isFocused ? 'var(--secondary-color)' : \"rgba(38, 38, 38, 0.60)\",\n            backgroundColor: state.isFocused ? 'transparent' : 'transparent',\n\n        })\n    }\n    return (\n        <Paper component=\"form\" onReset={handleResetFilters} sx={{ color: \"var(--primary-color)\", p: \"20px\", pt: \"4px\", my: \"40px\", boxShadow: 'none', backgroundColor: '#FFF4DF', borderRadius: '30px', }}>\n            <SearchField onSearch={onSearch} onReset={handleResetFilters} bgColor={\"var(--background-color)\"} />\n            <Box sx={{ display: \"flex\", mt: \"4px\", mb: \"12px\", gap: \"8px\", width: \"100%\" }}>\n                <Select\n                    styles={style}\n                    options={createOptions(categories)}\n                    onChange={handleCategoryChange}\n                    value={getSelectedOption(filter.category, createOptions(categories))}\n                    placeholder=\"Category\"\n\n                />\n                <Select\n                    styles={style}\n\n                    options={createOptions(sex)}\n                    onChange={handleGenderChange}\n                    value={getSelectedOption(filter.gender, createOptions(sex))}\n                    placeholder=\"By gender\"\n\n                /></Box>\n            <Select\n                styles={style}\n                options={createOptions(species)}\n                onChange={handlePetTypeChange}\n                value={getSelectedOption(filter.species, createOptions(species))}\n                placeholder=\"By type\"\n\n            />\n            <Box mt=\"12px\" sx={{ position: \"relative\" }}>\n                <AsyncSelect\n                    styles={{\n                        control: (provided, state) => ({\n                            ...provided,\n                            cursor: 'default',\n                            width: \"100%\",\n                            color: \"var(--primary-color)\",\n                            height: \"42px\",\n                            borderRadius: '30px',\n                            border: 'none',\n\n                        }),\n                        singleValue: (provided) => ({\n                            ...provided,\n                            color: \"var(--primary-color)\",\n                            textTransform: 'capitalize',\n                            paddingLeft: \"2px\",\n                            fontSize: \"14px\",\n                            fontWeight: 500,\n                        }),\n                        ValueContainer: (provided) => ({\n                            ...provided,\n\n                        }),\n                        input: (provided) => ({\n                            ...provided,\n\n\n                        }),\n                        indicatorSeparator: (provided) => ({\n                            ...provided,\n                            display: 'none'\n\n                        }),\n                        indicatorContainer: (provided) => ({\n                            ...provided,\n\n\n                        }),\n                        container: (provided) => ({\n                            ...provided,\n                            width: \"100%\"\n\n                        }),\n                        placeholder: (provided) => ({\n                            ...provided,\n                            color: \"var(--primary-color)\",\n                            fontSize: \"14px\",\n                            fontWeight: 500,\n\n                            paddingLeft: \"2px\",\n                        }),\n                        dropdownIndicator: (provided) => ({\n                            ...provided,\n                            display: 'none'\n                        }),\n                        menu: (provided) => ({\n                            ...provided,\n                            borderRadius: \"14px\",\n                            padding: \" 12px \",\n                            maxHeight: \"216px\",\n                        }),\n                        menuList: (provided) => ({\n                            ...provided,\n                            height: '94px ',\n                            \"::-webkit-scrollbar\": {\n                                width: '8px',\n                                height: '100px',\n                                paddingTop: '10px',\n                            },\n                            \"::-webkit-scrollbar-thumb\": {\n                                background: 'rgba(0,0,0,0.2)',\n                                borderRadius: '10px',\n\n                            },\n                        }),\n                        option: (provided, state) => ({\n                            ...provided,\n                            textTransform: 'capitalize',\n                            color: state.isFocused ? 'var(--secondary-color)' : \"rgba(38, 38, 38, 0.60)\",\n                            backgroundColor: state.isFocused ? 'transparent' : 'transparent',\n                            padding: \"0 12px 8px 12px\",\n                            fontSize: \"14px\",\n                            fontWeight: 500,\n                        })\n                    }}\n                    loadOptions={loadLocationOptions}\n                    onChange={handleLocationChange}\n                    value={selectedLocation}\n                    placeholder=\"Location\"\n                    isClearable\n                />\n                <IconButton type=\"submit\" sx={{ position: 'absolute', right: '12px', p: 0, top: '12px' }}>\n                    <svg width={18} height={18} style={{ stroke: 'var(--primary-color)', fill: 'white' }}>\n                        <use href={`${sprite}#icon-search`}></use>\n                    </svg>\n                </IconButton></Box>\n            <Box sx={{ my: \"20px\", width: \"100%\", height: \" 1px\", backgroundColor: \"rgba(38, 38, 38, 0.10)\" }}></Box>\n            <SelectedValues reset={reset} />\n            <Btn onClick={handleResetFilters} bgColor={\"var(--secondary-color)\"} textColor={\"var(--background-color)\"} type={\"reset\"}>Reset</Btn>\n        </Paper>\n\n    );\n};\n\nexport default NoticesFilters;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box } from '@mui/material';\nimport NoticesFilters from 'components/NoticesFilters/NoticesFilters';\nimport NoticesList from 'components/NoticesList/NoticesList';\nimport ServerPagination from 'components/ServerPagination/ServerPagination';\nimport Title from 'components/Title/Title';\nimport { getNotices } from 'store/operations';\nimport { setInputFilter } from 'store/reducer';\nimport { selectGetNotices, selectGetNoticesFilter, selectTotalPagesNotices } from 'store/selectors';\n\nconst Notices = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectGetNoticesFilter);\n    const notices = useSelector(selectGetNotices);\n    const totalPages = useSelector(selectTotalPagesNotices);\n    const [currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 6;\n    const [filteredNotices, setFilteredNotices] = useState([]);\n\n\n    useEffect(() => {\n        dispatch(getNotices({ page: currentPage, perPage: itemsPerPage, filter }));\n    }, [dispatch, currentPage, filter]);\n    useEffect(() => {\n        const applyFilter = () => {\n            let filtered = notices;\n\n\n            if (filter.gender) {\n                filtered = filtered.filter(notice => notice.sex === filter.gender);\n            }\n\n            setFilteredNotices(filtered);\n        };\n\n        applyFilter();\n    }, [notices, filter]);\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const handleSearch = (searchTerm) => {\n        dispatch(setInputFilter(searchTerm));\n        setCurrentPage(1);\n    };\n    console.log(filteredNotices)\n    return (\n        <Box mt=\"60px\">\n            <Title>Find your favorite pet</Title>\n            <NoticesFilters onSearch={handleSearch} />\n            <NoticesList props={filteredNotices} />\n            {(filteredNotices.length > 6 || totalPages > 1) && (\n                <ServerPagination\n                    totalPages={totalPages}\n                    currentPage={currentPage}\n                    onPageChange={handlePageChange}\n                />\n            )}\n        </Box>\n    );\n};\n\nexport default Notices;\n"],"names":["ModalAttention","_jsxs","Box","sx","pb","children","_jsx","width","height","my","mx","backgroundColor","borderRadius","textAlign","Typography","fontSize","fontWeight","color","mb","lineHeight","letterSpacing","px","AuthNav","_ref","popularity","filledStars","Math","min","stars","i","push","StarIcon","pr","StarBorderIcon","props","dispatch","useDispatch","isFavorite","setIsFavorite","useState","infoPet","useSelector","selectNoticeById","useEffect","getNoticesById","_id","favorites","JSON","parse","localStorage","getItem","includes","console","log","index","indexOf","splice","setItem","stringify","handleFavoriteClick","removeFromFavorite","addToFavorite","style","textTransform","py","position","right","p","category","src","imgURL","alt","title","objectFit","marginBottom","display","alignItems","justifyContent","Stars","PetInfo","hidden","overflow","comment","gap","bottom","Button","onClick","href","concat","sprite","paddingLeft","fill","FavoriteBorderIcon","pl","stroke","user","Link","email","target","rel","textDecoration","isModalAttentionOpen","setModalAttentionOpen","isModalNoticeOpen","setModalNoticeOpen","isLogIn","IsLoggedIn","selectNoticeFavorite","localFavorites","bgcolor","minWidth","textOverflow","handleLearnMoreClick","IconButton","filter","id","ModalWrap","isOpen","onClose","ModalNotice","length","List","map","el","ListItem","NoticesItem","profile","useLocation","pathname","styleCategory","opacity","styleProps","mt","flexWrap","name","formatDateString","birthday","sex","species","onSearch","bgColor","searchTerm","setSearchTerm","isNoticesPage","margin","border","Paper","component","boxShadow","TextField","InputLabelProps","shrink","value","onChange","event","placeholder","fullWidth","pattern","handleClearInput","top","type","preventDefault","totalPages","currentPage","onPageChange","isFirstPage","isLastPage","buttonStyle","activeButtonStyle","borderColor","pageNumbers","handleFirstPage","disabled","KeyboardDoubleArrowLeftIcon","handlePreviousPage","ChevronLeftIcon","pageNumber","handleNextPage","ChevronRightIcon","handleLastPage","KeyboardDoubleArrowRightIcon","theme","breakpoints","up","dateString","undefined","date","Date","parts","Intl","DateTimeFormat","year","month","day","format","split","formatDateRevers","getFullYear","String","getMonth","padStart","getDate","reset","selectedFilters","setSelectedFilters","popular","price","setPopularFilter","setPriceFilter","handleFilterChange","filterName","prevState","clearFilter","selectedButtonStyle","getButtonStyle","isSelected","flexDirection","size","ml","CloseIcon","setReset","selectedLocation","setSelectedLocation","categories","selectGetCategories","selectGetSex","selectGetSpecies","locations","selectGetLocations","selectGetNoticesFilter","getCategories","getSex","getSpecies","getLocations","handleResetFilters","resetFilters","setTimeout","createOptions","options","label","option","getSelectedOption","find","control","provided","state","cursor","singleValue","ValueContainer","input","indicatorSeparator","indicatorContainer","container","dropdownIndicator","menu","padding","maxHeight","menuList","paddingTop","background","isFocused","onReset","pt","SearchField","Select","styles","selectedOption","setCategoryFilter","setGenderFilter","gender","setPetTypeFilter","AsyncSelect","loadOptions","loadLocationOptions","inputValue","callback","filteredLocations","location","cityEn","toLowerCase","sort","a","b","localeCompare","stateEn","setLocationFilter","isClearable","SelectedValues","Btn","textColor","Notices","notices","selectGetNotices","selectTotalPagesNotices","setCurrentPage","filteredNotices","setFilteredNotices","getNotices","page","perPage","applyFilter","filtered","notice","Title","NoticesFilters","setInputFilter","NoticesList","ServerPagination"],"sourceRoot":""}