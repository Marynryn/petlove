{"version":3,"file":"static/js/678.878aadf8.chunk.js","mappings":"iQAKO,MAeP,EAf8BA,KAItBC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,GAAI,SAAUC,SAAA,EACrBC,EAAAA,EAAAA,KAACJ,EAAAA,EAAG,CAACC,GAAI,CAAEI,MAAO,OAAQC,OAAQ,OAAQC,GAAI,OAAQC,GAAI,OAAQC,gBAAiB,UAAWC,aAAc,OAAQC,UAAW,UAAWR,UACtIC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAI,CAAEU,UAAW,SAAUE,SAAU,OAAQC,WAAY,KAAOX,SAAC,oBAEjFC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAI,CAAEU,UAAW,SAAUI,MAAO,yBAA0BC,GAAI,OAAQH,SAAU,OAAQC,WAAY,KAAOX,SAAC,eAC1HC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAI,CAAEe,GAAI,OAAQH,SAAU,OAAQC,WAAY,IAAKH,UAAW,SAAUM,WAAY,KAAMC,cAAe,WAAYf,SAAC,kPACpIJ,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACmB,GAAG,OAAMhB,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,U,4CCZ7B,MAyCP,EAzCuBC,IAAwB,IAAvB,MAAEC,EAAK,OAAEC,GAAQF,EAErC,MAAMG,EAAgB,CAClBV,WAAY,IAAKD,SAAU,OAAQK,cAAe,SAAUO,QAAS,IAEnEC,EAAa,CACfZ,WAAY,IAAKD,SAAU,OAAQK,cAAe,UAAWS,cAAe,cAEhF,OACI5B,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CACL2B,QAAS,OAAQC,IAAK,OAAQC,GAAI,MAAOd,GAAI,OAAQe,eAAgB,gBAAiBC,SAAU,QAASC,SAAU,SACnHC,aAAc,YAChB/B,SAAA,EACEJ,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAG,SAAA,EACAC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAIuB,EAAcrB,SAAC,UAC/BC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAIyB,EAAWvB,SAAEmB,EAAMa,WAEvCpC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAG,SAAA,EACAC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAIuB,EAAcrB,SAAC,cAC/BC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAIyB,EAAWvB,UAAEiC,EAAAA,EAAAA,GAAiBd,EAAMe,gBAExDtC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAG,SAAA,EACAC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAIuB,EAAcrB,SAAC,SAC/BC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAIyB,EAAWvB,SAAEmB,EAAMgB,UAEvCvC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAG,SAAA,EACAC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAIuB,EAAcrB,SAAC,aAC/BC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAIyB,EAAWvB,SAAEmB,EAAMiB,cAErChB,IAAUxB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAG,SAAA,EAEZC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAI,CACZa,WAAY,IAAKD,SAAU,OAAQK,cAAe,SAAUO,QAAS,GAAKQ,SAAU,SACpFC,aAAc,YAChB/B,SAAC,cACHC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAIyB,EAAWvB,SAAEmB,EAAMkB,gBAGrC,E,cCpCd,MAsBA,EAtBcnB,IAAqB,IAApB,WAAEoB,GAAYpB,EACzB,IAAKoB,EACD,OAAO,KAEX,MACMC,EAAcC,KAAKC,IAAIH,EADZ,GAGXI,EAAQ,GAEd,IAAK,IAAIC,EAAI,EAAGA,GALC,EAKcA,IAC3BD,EAAME,KACFD,GAAKJ,GACDtC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAQ,CAAS/C,GAAI,CAAEc,MAAO,wBAAyBF,SAAU,OAAQoC,GAAI,QAA/DH,IAEf1C,EAAAA,EAAAA,KAAC8C,EAAAA,EAAc,CAASjD,GAAI,CAAEc,MAAO,yBAA0BF,SAAU,OAAQoC,GAAI,QAAhEH,IAKjC,OAAO1C,EAAAA,EAAAA,KAACJ,EAAAA,EAAG,CAAAG,SAAE0C,GAAY,EC8D7B,EA5E2BxB,IAAgB,IAAf,MAAEC,GAAOD,EACjC,MAAM8B,GAAWC,EAAAA,EAAAA,OACVC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GACvCC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,KAE5BC,EAAAA,EAAAA,YAAU,KACNR,GAASS,EAAAA,EAAAA,IAAetC,EAAMuC,MAE9B,MAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GACnEZ,EAAcQ,EAAUK,SAAS7C,EAAMuC,KAAK,GAC7C,CAACV,EAAU7B,EAAMuC,OAEpBF,EAAAA,EAAAA,YAAU,KAEN,MAAMG,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GACnE,GAAIb,IAAeS,EAAUK,SAAS7C,EAAMuC,KACxCC,EAAUf,KAAKzB,EAAMuC,UAClB,IAAKR,GAAcS,EAAUK,SAAS7C,EAAMuC,KAAM,CACrD,MAAMO,EAAQN,EAAUO,QAAQ/C,EAAMuC,KAClCO,GAAS,GACTN,EAAUQ,OAAOF,EAAO,EAEhC,CACAH,aAAaM,QAAQ,YAAaR,KAAKS,UAAUV,GAAW,GAC7D,CAACT,EAAY/B,EAAMuC,MAEtB,MAAMY,EAAsBA,KAEpBtB,EADAE,GACSqB,EAAAA,EAAAA,IAAmBlB,EAAQK,MAE3Bc,EAAAA,EAAAA,IAAcnB,EAAQK,MAEnCP,GAAeD,EAAW,EAGxBuB,EAAQ,CACVnE,gBAAiB,yBAA0BM,MAAO,0BAA2BT,OAAQ,OAAQD,MAAO,OAAQsB,cAAe,aAAcd,SAAU,OAAQH,aAAc,OAAQI,WAAY,IAAK,UAAW,CAAEL,gBAAiB,YAEpO,OACIV,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAE4E,GAAI,OAAQlE,UAAW,SAAUmE,SAAU,WAAYxE,OAAQ,QAASD,MAAO,SAAUF,SAAA,EAChGJ,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAG,SAAA,EACAC,EAAAA,EAAAA,KAACJ,EAAAA,EAAG,CAACC,GAAI,CAAE6E,SAAU,WAAYC,MAAO,MAAOrE,aAAc,OAAQD,gBAAiB,YAAcN,UAACC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAI,CAAE+E,EAAG,WAAYrD,cAAe,aAAcb,WAAY,IAAKD,SAAU,OAAQE,MAAO,0BAA4BZ,SAAEqD,EAAQhB,cACnPpC,EAAAA,EAAAA,KAAA,OAAK6E,IAAKzB,EAAQ0B,OAAQC,IAAK3B,EAAQ4B,MAAOR,MAAO,CAAEvE,MAAO,QAASC,OAAQ,QAAS+E,UAAW,QAASC,aAAc,OAAQ5E,aAAc,OAAQF,GAAI,cAEhKT,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAC,EAAEE,SAAA,EACRC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAI,CAAEa,WAAY,IAAKD,SAAU,OAAQG,GAAI,QAASb,SAAEqD,EAAQ4B,SAC5ErF,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAE2B,QAAS,OAAQ2D,WAAY,SAAUxD,eAAgB,SAAUf,GAAI,QAASb,SAAA,EACrFC,EAAAA,EAAAA,KAACoF,EAAK,CAAC/C,WAAYe,EAAQf,cAC3BrC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAI,CAAEY,SAAU,QAASV,SAAEqD,EAAQf,oBAGvD1C,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACmB,GAAG,OAAMhB,SAAA,CAAC,KAACC,EAAAA,EAAAA,KAACqF,EAAO,CAACnE,MAAOkC,EAASjC,QAAQ,QAEjDnB,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAI,CAAEa,WAAY,IAAKD,SAAU,OAAQoB,SAAU,SAAUf,cAAe,UAAWF,GAAI,QAASb,SAAEqD,EAAQkC,WAC1H3F,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4E,MAAO,CAAEhD,QAAS,OAAQC,IAAK,OAAQiD,SAAU,WAAYa,OAAQ,OAAQtF,MAAO,OAAQc,GAAI,OAAQhB,SAAA,CAExGkD,GACGtD,EAAAA,EAAAA,MAAC6F,EAAAA,EAAM,CAACC,QAASpB,EAAqBxE,GAAI2E,EAAMzE,SAAA,CAAG,uBAC/CC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,GAAIC,OAAQ,GAAGH,UACvBC,EAAAA,EAAAA,KAAA,OAAK0F,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAAkBpB,MAAO,CAAEqB,YAAa,MAAOC,KAAM,mCAIjFnG,EAAAA,EAAAA,MAAC6F,EAAAA,EAAM,CAACC,QAASpB,EAAqBxE,GAAI2E,EAAMzE,SAAA,CAAE,mBAC9CC,EAAAA,EAAAA,KAAC+F,EAAAA,EAAkB,CAACC,GAAG,MAAMnG,GAAI,CAAEY,SAAU,OAAQwF,OAAQ,gCAGpE7C,EAAQ8C,OAASlG,EAAAA,EAAAA,KAACmG,EAAAA,EAAI,CAACT,KAAI,UAAAC,OAAYvC,EAAQ8C,KAAKE,OAASC,OAAO,SAASC,IAAI,WAAWzG,GAAI,CAAE0G,eAAgB,OAAQtG,MAAO,QAASF,UAGvIC,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CAAC3F,GAAI,CAAEQ,gBAAiB,WAAYM,MAAO,yBAA0BT,OAAQ,OAAQD,MAAO,OAAQsB,cAAe,aAAcd,SAAU,OAAQH,aAAc,OAAQI,WAAY,IAAK,UAAW,CAAEL,gBAAiB,YAAeN,SAAE,mBAGrP,E,cCrEf,MA+EA,EA/EoBkB,IAAgB,IAAf,MAAEC,GAAOD,EAC1B,MAAM8B,GAAWC,EAAAA,EAAAA,OAEVC,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCqD,EAAsBC,IAAyBtD,EAAAA,EAAAA,WAAS,IACxDuD,EAAmBC,IAAsBxD,EAAAA,EAAAA,WAAS,IACnD,QAAEyD,IAAYC,EAAAA,EAAAA,KACdnD,GAAYL,EAAAA,EAAAA,IAAYyD,EAAAA,KAE9BvD,EAAAA,EAAAA,YAAU,KAEN,MAAMwD,EAAiBpD,KAAKC,MAAMC,aAAaC,QAAQ,eAAiBJ,EACxER,EAAcQ,EAAUK,SAAS7C,EAAMuC,MAAQsD,EAAehD,SAAS7C,EAAMuC,KAAK,GACnF,CAACC,EAAWxC,EAAMuC,MA0BrB,OACI9D,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACgF,EAAE,OAAO3E,MAAM,OAAO+G,QAAS,0BAA2BnH,GAAI,CAAE+B,SAAU,QAAStB,aAAc,OAAQJ,OAAQ,QAASwE,SAAU,YAAa3E,SAAA,EAClJC,EAAAA,EAAAA,KAAA,OAAK6E,IAAK3D,EAAM4D,OAAQC,IAAK7D,EAAM8D,MAAOR,MAAO,CAAEvE,MAAO,OAAQgF,UAAW,QAASC,aAAc,OAAQhF,OAAQ,QAASI,aAAc,WAC3IX,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAE2B,QAAS,OAAQG,eAAgB,iBAAkB5B,SAAA,EAC1DC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAI,CAAEa,WAAY,IAAKD,SAAU,QAASV,SAAEmB,EAAM8D,SAC9DrF,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAE2B,QAAS,OAAQ2D,WAAY,UAAWpF,SAAA,EAC/CC,EAAAA,EAAAA,KAAC4C,EAAAA,EAAQ,CAAC/C,GAAI,CAAEc,MAAO,yBAA0BV,MAAO,OAAQC,OAAQ,WACxEF,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAI,CAAEY,SAAU,QAASV,SAAEmB,EAAMmB,oBAGrDrC,EAAAA,EAAAA,KAACqF,EAAO,CAACnE,MAAOA,KAChBlB,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACX,GAAI,CAAEa,WAAY,IAAKD,SAAU,OAAQoB,SAAU,SAAUf,cAAe,WAAYf,SAAEmB,EAAMoE,WAC5G3F,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4E,MAAO,CAAEhD,QAAS,OAAQC,IAAK,OAAQ8D,OAAQ,OAAQb,SAAU,WAAYzE,MAAO,QAASF,SAAA,EAC9FC,EAAAA,EAAAA,KAACwF,EAAAA,EAAM,CAAC3F,GAAI,CAAEQ,gBAAiB,yBAA0BM,MAAO,0BAA2BV,MAAO,QAASC,OAAQ,OAAQqB,cAAe,aAAcd,SAAU,OAAQH,aAAc,OAAQI,WAAY,KAAO+E,QArBlMwB,KACpBL,EAGDD,GAAmB,GAFnBF,GAAsB,EAG1B,EAgByP1G,SAAC,gBAGlPC,EAAAA,EAAAA,KAACJ,EAAAA,EAAG,CAACC,GAAI,CAAES,aAAc,OAAQD,gBAAiB,WAAYJ,MAAO,OAAQC,OAAQ,OAAQsB,QAAS,OAAQG,eAAgB,UAAW5B,UACrIC,EAAAA,EAAAA,KAACkH,EAAAA,EAAU,CAACzB,QAzCApB,KACxB,GAAKuC,EAEE,CACH,MAAMG,EAAiBpD,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GACpEb,GACAF,GAASuB,EAAAA,EAAAA,IAAmBpD,EAAMuC,MAClCI,aAAaM,QAAQ,YAAaR,KAAKS,UAAU2C,EAAeI,QAAOC,GAAMA,IAAOlG,EAAMuC,UAE1FV,GAASwB,EAAAA,EAAAA,IAAcrD,EAAMuC,MAC7BI,aAAaM,QAAQ,YAAaR,KAAKS,UAAU,IAAI2C,EAAgB7F,EAAMuC,QAE/EP,GAAeD,EACnB,MAXIwD,GAAsB,EAW1B,EA4BqD1G,SACpCkD,GACGjD,EAAAA,EAAAA,KAACJ,EAAAA,EAAG,CAAAG,UACAC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,GAAIC,OAAQ,GAAGH,UACvBC,EAAAA,EAAAA,KAAA,OAAK0F,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAAkBpB,MAAO,CAAEsB,KAAM,iCAI7D9F,EAAAA,EAAAA,KAAC+F,EAAAA,EAAkB,CAAClG,GAAI,CAAEiG,KAAM,oCAKhD9F,EAAAA,EAAAA,KAACqH,EAAAA,EAAS,CAACC,OAAQd,EAAsBe,QAASA,IAAMd,GAAsB,GAAO1G,UACjFC,EAAAA,EAAAA,KAACN,EAAc,OAEnBM,EAAAA,EAAAA,KAACqH,EAAAA,EAAS,CAACC,OAAQZ,EAAmBa,QAASA,IAAMZ,GAAmB,GAAO5G,UAC3EC,EAAAA,EAAAA,KAACwH,EAAW,CAACtG,MAAOA,QAEtB,ECtEd,EAf2BD,IAAgB,IAAf,MAAEC,GAAOD,EACjC,OAAqB,IAAjBC,EAAMuG,OAAqB,MAE3BzH,EAAAA,EAAAA,KAACJ,EAAAA,EAAG,CAAAG,UACAC,EAAAA,EAAAA,KAAC0H,EAAAA,EAAI,CAAC7H,GAAI,CAAE+E,EAAG,GAAI7E,SACdmB,EAAMyG,KAAKC,IACR5H,EAAAA,EAAAA,KAAC6H,EAAAA,GAAQ,CAAchI,GAAI,CAAE+E,EAAG,EAAGhE,GAAI,QAASb,UAC5CC,EAAAA,EAAAA,KAAC8H,EAAW,CAAC5G,MAAO0G,KADTA,EAAGnE,UAMxB,C,iBChBP,SAASzB,EAAiB+F,GAC/B,QAAmBC,IAAfD,EACF,OAEF,MAAME,EAAO,IAAIC,KAAKH,GAQhBI,EADgB,IAAIC,KAAKC,eAAe,QAL9B,CACdC,KAAM,UACNC,MAAO,UACPC,IAAK,YAEyDC,OAAOR,GAC3CS,MAAM,KAGlC,MAFkB,GAAA/C,OAAMwC,EAAM,GAAE,KAAAxC,OAAIwC,EAAM,GAAE,KAAAxC,OAAIwC,EAAM,GAGxD,C,6ICVA,MAyCA,EAzCkBlH,IAAgB,IAAf,MAAEC,GAAOD,EACxB,MAAO0H,EAAWC,IAAgBzF,EAAAA,EAAAA,UAAS,GAC3C0F,QAAQC,IAAI5H,EAAM6H,eAClB,MAGMC,EAAkB,CACpB3I,gBAAiB,yBAA0BkG,eAAgB,OAAQrG,OAAQ,OAAQqB,cAAe,aAAcjB,aAAc,OAAQ,UAAW,CAAED,gBAAiB,WACpK,gBAAiB,CACbM,MAAO,0BACPD,WAAY,IACZD,SAAU,OACV8F,eAAgB,QAEpB,wBAAyB,CACrB/E,QAAS,SAGXyH,EAAoB,CACtB1H,cAAe,aACflB,gBAAiB,0BAA2BM,MAAO,uBAAwBL,aAAc,OACzF,gBAAiB,CAEbI,WAAY,IACZD,SAAU,OACV8F,eAAgB,SAGxB,OACI5G,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAG,SAAA,EACAJ,EAAAA,EAAAA,MAACuJ,EAAAA,EAAI,CAACrJ,GAAI,CAAE2B,QAAS,OAAQC,IAAK,OAAQ8E,eAAgB,QAAU4C,MAAOR,EAAWS,SA3BtEC,CAACC,EAAOC,KAC5BX,EAAaW,EAAS,EA0B8FxJ,SAAA,EAC5GC,EAAAA,EAAAA,KAACwJ,EAAAA,EAAG,CAACC,MAAM,mBAAmB5J,GAAkB,IAAd8I,EAAkBK,EAAkBC,KACtEjJ,EAAAA,EAAAA,KAACwJ,EAAAA,EAAG,CAACC,MAAM,SAAS5J,GAAkB,IAAd8I,EAAkBK,EAAkBC,OAEjD,IAAdN,IAAmB3I,EAAAA,EAAAA,KAAC0J,EAAAA,EAAW,CAACxI,MAAOA,EAAMyI,mBAC/B,IAAdhB,IAAmB3I,EAAAA,EAAAA,KAAC0J,EAAAA,EAAW,CAACxI,MAAOA,EAAM6H,kBAC5C,E,iCCpCP,MAAMa,EAAUA,KACnB,MAAM7G,GAAWC,EAAAA,EAAAA,MACXkD,GAAO7C,EAAAA,EAAAA,IAAYwG,EAAAA,IAKzB,OAJAtG,EAAAA,EAAAA,YAAU,KACNR,GAAS+G,EAAAA,EAAAA,MAAkB,GAC5B,CAAC/G,KAGA/C,EAAAA,EAAAA,KAAA,OAAAD,UAEIC,EAAAA,EAAAA,KAAC+J,EAAS,CAAC7I,MAAOgF,KAChB,EAGd,G","sources":["components/ModalAttention/ModalAttention.jsx","components/PetInfo/PetInfo.jsx","components/Stars/Stars.jsx","components/ModalNotice/ModalNotice.jsx","components/NoticesItem/NoticesItem.jsx","components/NoticesList/NoticesList.jsx","helpers/formatDate.js","components/MyNotices/MyNotices.jsx","pages/Profile/Profile.jsx"],"sourcesContent":["import { Box, Typography } from '@mui/material';\n\nimport React from 'react'\n\nimport { AuthNav } from 'components/AuthNav/AuthNav';\nexport const ModalAttention = () => {\n\n\n    return (\n        <Box sx={{ pb: \" 20px\" }}>\n            <Box sx={{ width: \"80px\", height: \"80px\", my: \"20px\", mx: \"auto\", backgroundColor: \"#FFF4DF\", borderRadius: \"100%\", textAlign: 'center' }}>\n                <Typography sx={{ textAlign: \"center\", fontSize: \"44px\", fontWeight: 800, }}>🐶</Typography>\n            </Box>\n            <Typography sx={{ textAlign: \"center\", color: \"var(--secondary-color)\", mb: \"20px\", fontSize: \"20px\", fontWeight: 700, }}>Attention</Typography>\n            <Typography sx={{ mb: \"24px\", fontSize: \"14px\", fontWeight: 500, textAlign: \"center\", lineHeight: 1.28, letterSpacing: \"-0.28px\" }}>We would like to remind you that certain functionality is available only to authorized users.If you have an account, please log in with your credentials. If you do not already have an account, you must register to access these features.</Typography>\n            <Box px=\"20px\"> <AuthNav /></Box>\n\n        </Box>\n    )\n}\nexport default ModalAttention;","import React from 'react'\nimport { formatDateString } from '../../helpers/formatDate';\nimport { Box, Typography } from '@mui/material';\nexport const PetInfo = ({ props, hidden }) => {\n\n    const styleCategory = {\n        fontWeight: 500, fontSize: \"10px\", letterSpacing: \"-0.2px\", opacity: 0.5\n    }\n    const styleProps = {\n        fontWeight: 500, fontSize: \"12px\", letterSpacing: \"-0.24px\", textTransform: \"capitalize\",\n    }\n    return (\n        <Box sx={{\n            display: \"flex\", gap: \"10px\", mt: \"8px\", mb: \"16px\", justifyContent: \"space-between\", minWidth: \"232px\", overflow: 'hidden',\n            textOverflow: 'ellipsis'\n        }}>\n            <Box>\n                <Typography sx={styleCategory}>Name</Typography>\n                <Typography sx={styleProps}>{props.name}</Typography>\n            </Box>\n            <Box>\n                <Typography sx={styleCategory}>Birthday</Typography>\n                <Typography sx={styleProps}>{formatDateString(props.birthday)}</Typography>\n            </Box>\n            <Box>\n                <Typography sx={styleCategory}>Sex</Typography>\n                <Typography sx={styleProps}>{props.sex}</Typography>\n            </Box>\n            <Box>\n                <Typography sx={styleCategory}>Species</Typography>\n                <Typography sx={styleProps}>{props.species}</Typography>\n            </Box>\n            {!hidden && <Box>\n\n                <Typography sx={{\n                    fontWeight: 500, fontSize: \"10px\", letterSpacing: \"-0.2px\", opacity: 0.5, overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                }}>Category</Typography>\n                <Typography sx={styleProps}>{props.category}</Typography>\n            </Box>}\n\n        </Box>\n    )\n}\nexport default PetInfo;","import React from 'react';\nimport { Box } from '@mui/material';\nimport StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\n\nconst Stars = ({ popularity }) => {\n    if (!popularity) {\n        return null;\n    }\n    const maxStars = 5;\n    const filledStars = Math.min(popularity, maxStars);\n\n    const stars = [];\n\n    for (let i = 1; i <= maxStars; i++) {\n        stars.push(\n            i <= filledStars ? (\n                <StarIcon key={i} sx={{ color: 'rgba(255, 197, 49, 1)', fontSize: '16px', pr: '4px' }} />\n            ) : (\n                <StarBorderIcon key={i} sx={{ color: 'rgba(38, 38, 38, 0.05)', fontSize: '16px', pr: '4px' }} />\n            )\n        );\n    }\n\n    return <Box>{stars}</Box>;\n};\n\nexport default Stars;\n\n\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addToFavorite, getNoticesById, removeFromFavorite } from 'store/operations';\nimport { selectNoticeById } from './../../store/selectors';\nimport { Box, Button, Link, Typography } from '@mui/material';\nimport PetInfo from 'components/PetInfo/PetInfo';\nimport sprite from '../../img/svg/symbol-defs.svg'\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport Stars from 'components/Stars/Stars';\n\nexport const ModalNotice = ({ props }) => {\n    const dispatch = useDispatch();\n    const [isFavorite, setIsFavorite] = useState(false);\n    const infoPet = useSelector(selectNoticeById);\n\n    useEffect(() => {\n        dispatch(getNoticesById(props._id));\n\n        const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n        setIsFavorite(favorites.includes(props._id));\n    }, [dispatch, props._id]);\n\n    useEffect(() => {\n\n        const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n        if (isFavorite && !favorites.includes(props._id)) {\n            favorites.push(props._id);\n        } else if (!isFavorite && favorites.includes(props._id)) {\n            const index = favorites.indexOf(props._id);\n            if (index > -1) {\n                favorites.splice(index, 1);\n            }\n        }\n        localStorage.setItem('favorites', JSON.stringify(favorites));\n    }, [isFavorite, props._id]);\n\n    const handleFavoriteClick = () => {\n        if (isFavorite) {\n            dispatch(removeFromFavorite(infoPet._id));\n        } else {\n            dispatch(addToFavorite(infoPet._id));\n        }\n        setIsFavorite(!isFavorite);\n    };\n\n    const style = {\n        backgroundColor: \"var(--secondary-color)\", color: \"var(--background-color)\", height: \"46px\", width: \"100%\", textTransform: 'capitalize', fontSize: \"16px\", borderRadius: \"30px\", fontWeight: 500, '&:hover': { backgroundColor: \"#F9B020\" }\n    }\n    return (\n        <Box sx={{ py: \"20px\", textAlign: 'center', position: \"relative\", height: \"386px\", width: \"295px\" }}>\n            <Box>\n                <Box sx={{ position: \"absolute\", right: \"55%\", borderRadius: \"30px\", backgroundColor: \" #FFF4DF\", }}><Typography sx={{ p: \"8px 14px\", textTransform: 'capitalize', fontWeight: 500, fontSize: \"12px\", color: \"var(--secondary-color)\", }}>{infoPet.category}</Typography></Box>\n                <img src={infoPet.imgURL} alt={infoPet.title} style={{ width: \"120px\", height: \"120px\", objectFit: 'cover', marginBottom: \"24px\", borderRadius: \"100%\", mx: \"auto\", }} />\n            </Box>\n            <Box sx={{}}>\n                <Typography sx={{ fontWeight: 700, fontSize: \"16px\", mb: \"10px\" }}>{infoPet.title}</Typography>\n                <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", mb: \"24px\" }} >\n                    <Stars popularity={infoPet.popularity} />\n                    <Typography sx={{ fontSize: \"14px\" }}>{infoPet.popularity}</Typography>\n                </Box>\n            </Box>\n            <Box px=\"26px\"> <PetInfo props={infoPet} hidden={true} /></Box>\n\n            <Typography sx={{ fontWeight: 500, fontSize: \"14px\", overflow: \"hidden\", letterSpacing: \"-0.28px\", mb: \"42px\" }}>{infoPet.comment}</Typography>\n            <Box style={{ display: \"flex\", gap: \"10px\", position: \"absolute\", bottom: \"20px\", width: \"100%\", px: \"8px\" }}>\n\n                {isFavorite ? (\n                    <Button onClick={handleFavoriteClick} sx={style}  >Remove from&nbsp;&nbsp;\n                        <svg width={18} height={18}>\n                            <use href={`${sprite}#icon-trash-01`} style={{ paddingLeft: \"8px\", fill: \"var(--background-color)\" }} ></use>\n                        </svg>\n                    </Button>\n                ) : (\n                    <Button onClick={handleFavoriteClick} sx={style} > Add to&nbsp;&nbsp;\n                        <FavoriteBorderIcon pl=\"8px\" sx={{ fontSize: \"18px\", stroke: \"var(--background-color)\" }} /></Button>\n                )}\n\n                {infoPet.user && (<Link href={`mailto:${infoPet.user.email}`} target=\"_blank\" rel=\"noopener\" sx={{ textDecoration: 'none', width: \"100%\" }}>\n\n\n                    <Button sx={{ backgroundColor: \" #FFF4DF\", color: \"var(--secondary-color)\", height: \"46px\", width: \"100%\", textTransform: 'capitalize', fontSize: \"16px\", borderRadius: \"30px\", fontWeight: 500, '&:hover': { backgroundColor: \"#FBE7C1\" }, }} >Contact</Button>\n                </Link>)}\n            </Box>\n        </Box >\n    )\n}\nexport default ModalNotice;","import StarIcon from '@mui/icons-material/Star';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, Button, IconButton, Typography } from '@mui/material';\nimport sprite from '../../img/svg/symbol-defs.svg';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport ModalWrap from 'components/ModalWrap/ModalWrap';\nimport ModalAttention from 'components/ModalAttention/ModalAttention';\nimport ModalNotice from 'components/ModalNotice/ModalNotice';\nimport { IsLoggedIn } from 'helpers/isLoggedIn';\nimport PetInfo from 'components/PetInfo/PetInfo';\nimport { addToFavorite, removeFromFavorite } from 'store/operations';\nimport { selectNoticeFavorite } from 'store/selectors';\n\nconst NoticesItem = ({ props }) => {\n    const dispatch = useDispatch();\n\n    const [isFavorite, setIsFavorite] = useState(false);\n    const [isModalAttentionOpen, setModalAttentionOpen] = useState(false);\n    const [isModalNoticeOpen, setModalNoticeOpen] = useState(false);\n    const { isLogIn } = IsLoggedIn();\n    const favorites = useSelector(selectNoticeFavorite);\n\n    useEffect(() => {\n        // Загрузка состояния избранного из Redux и LocalStorage\n        const localFavorites = JSON.parse(localStorage.getItem('favorites')) || favorites;\n        setIsFavorite(favorites.includes(props._id) || localFavorites.includes(props._id));\n    }, [favorites, props._id]);\n\n    const handleFavoriteClick = () => {\n        if (!isLogIn) {\n            setModalAttentionOpen(true);\n        } else {\n            const localFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n            if (isFavorite) {\n                dispatch(removeFromFavorite(props._id));\n                localStorage.setItem('favorites', JSON.stringify(localFavorites.filter(id => id !== props._id)));\n            } else {\n                dispatch(addToFavorite(props._id));\n                localStorage.setItem('favorites', JSON.stringify([...localFavorites, props._id]));\n            }\n            setIsFavorite(!isFavorite);\n        }\n    };\n\n    const handleLearnMoreClick = () => {\n        if (!isLogIn) {\n            setModalAttentionOpen(true);\n        } else {\n            setModalNoticeOpen(true);\n        }\n    };\n\n    return (\n        <Box p=\"24px\" width=\"100%\" bgcolor={'var(--background-color)'} sx={{ minWidth: \"232px\", borderRadius: \"16px\", height: \"430px\", position: \"relative\" }}>\n            <img src={props.imgURL} alt={props.title} style={{ width: \"100%\", objectFit: 'cover', marginBottom: \"24px\", height: \"178px\", borderRadius: \"16px\" }} />\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <Typography sx={{ fontWeight: 700, fontSize: \"16px\" }}>{props.title}</Typography>\n                <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                    <StarIcon sx={{ color: \"var(--secondary-color)\", width: \"16px\", height: \"16px\" }} />\n                    <Typography sx={{ fontSize: \"14px\" }}>{props.popularity}</Typography>\n                </Box>\n            </Box>\n            <PetInfo props={props} />\n            <Typography sx={{ fontWeight: 500, fontSize: \"14px\", overflow: \"hidden\", letterSpacing: \"-0.28px\" }}>{props.comment}</Typography>\n            <Box style={{ display: \"flex\", gap: \"10px\", bottom: \"24px\", position: \"absolute\", width: \"100%\" }}>\n                <Button sx={{ backgroundColor: \"var(--secondary-color)\", color: \"var(--background-color)\", width: \"231px\", height: \"46px\", textTransform: 'capitalize', fontSize: \"14px\", borderRadius: \"30px\", fontWeight: 500 }} onClick={handleLearnMoreClick}>\n                    Learn more\n                </Button>\n                <Box sx={{ borderRadius: \"30px\", backgroundColor: \" #FFF4DF\", width: \"46px\", height: \"46px\", display: \"flex\", justifyContent: \"center\" }}>\n                    <IconButton onClick={handleFavoriteClick}>\n                        {isFavorite ? (\n                            <Box>\n                                <svg width={18} height={18}>\n                                    <use href={`${sprite}#icon-trash-01`} style={{ fill: \"var(--secondary-color)\" }}></use>\n                                </svg>\n                            </Box>\n                        ) : (\n                            <FavoriteBorderIcon sx={{ fill: \"var(--secondary-color)\" }} />\n                        )}\n                    </IconButton>\n                </Box>\n            </Box>\n            <ModalWrap isOpen={isModalAttentionOpen} onClose={() => setModalAttentionOpen(false)}>\n                <ModalAttention />\n            </ModalWrap>\n            <ModalWrap isOpen={isModalNoticeOpen} onClose={() => setModalNoticeOpen(false)}>\n                <ModalNotice props={props} />\n            </ModalWrap>\n        </Box>\n    );\n};\n\nexport default NoticesItem;\n","import React from 'react'\nimport { Box, List, ListItem } from \"@mui/material\";\nimport NoticesItem from 'components/NoticesItem/NoticesItem';\n\nexport const NoticesList = ({ props }) => {\n    if (props.length === 0) return null;\n    return (\n        <Box>\n            <List sx={{ p: 0 }}>\n                {props.map((el) => (\n                    <ListItem key={el._id} sx={{ p: 0, mb: \"24px\" }}>\n                        <NoticesItem props={el} />\n\n                    </ListItem>\n                ))}\n            </List>\n        </Box>\n    )\n}\nexport default NoticesList;","export function formatDateString(dateString) {\n  if (dateString === undefined) {\n    return;\n  }\n  const date = new Date(dateString);\n\n  const options = {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n  };\n  const formattedDate = new Intl.DateTimeFormat(\"en-US\", options).format(date);\n  const parts = formattedDate.split(\"/\");\n  const dateWithDots = `${parts[0]}.${parts[1]}.${parts[2]}`;\n\n  return dateWithDots;\n}\n","import React, { useState } from 'react';\nimport { Box, Tabs, Tab } from '@mui/material';\n\nimport NoticesList from 'components/NoticesList/NoticesList';\n\n\nconst MyNotices = ({ props }) => {\n    const [activeTab, setActiveTab] = useState(0);\n    console.log(props.noticesViewed)\n    const handleTabChange = (event, newValue) => {\n        setActiveTab(newValue);\n    };\n    const activeTabStyles = {\n        backgroundColor: \"var(--secondary-color)\", textDecoration: \"none\", height: \"46px\", textTransform: 'capitalize', borderRadius: \"30px\", '&:hover': { backgroundColor: \"#F9B020\" },\n        '&.MuiTab-root': {\n            color: \"var(--background-color)\",\n            fontWeight: 500,\n            fontSize: \"14px\",\n            textDecoration: 'none'\n        },\n        '&.MuiTouchRipple-root': {\n            display: \"none\"\n        }\n    }\n    const inactiveTabStyles = {\n        textTransform: 'capitalize',\n        backgroundColor: \"var(--background-color)\", color: \"var(--primary-color)\", borderRadius: \"30px\",\n        '&.MuiTab-root': {\n\n            fontWeight: 500,\n            fontSize: \"14px\",\n            textDecoration: 'none'\n        },\n    }\n    return (\n        <Box>\n            <Tabs sx={{ display: \"flex\", gap: \"10px\", textDecoration: 'none' }} value={activeTab} onChange={handleTabChange}>\n                <Tab label=\"My favorite pets\" sx={activeTab === 0 ? activeTabStyles : inactiveTabStyles} />\n                <Tab label=\"Viewed\" sx={activeTab === 1 ? activeTabStyles : inactiveTabStyles} />\n            </Tabs>\n            {activeTab === 0 && <NoticesList props={props.noticesFavorites} />}\n            {activeTab === 1 && <NoticesList props={props.noticesViewed} />}\n        </Box>\n    );\n};\n\n\nexport default MyNotices;","import MyNotices from 'components/MyNotices/MyNotices';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { currentUserFull } from 'store/operations';\nimport { selectUser } from 'store/selectors';\n\nexport const Profile = () => {\n    const dispatch = useDispatch();\n    const user = useSelector(selectUser)\n    useEffect(() => {\n        dispatch(currentUserFull());\n    }, [dispatch])\n\n    return (\n        <div>\n            {/* <UserCard /> */}\n            <MyNotices props={user} />\n        </div>\n    )\n}\nexport default Profile;"],"names":["ModalAttention","_jsxs","Box","sx","pb","children","_jsx","width","height","my","mx","backgroundColor","borderRadius","textAlign","Typography","fontSize","fontWeight","color","mb","lineHeight","letterSpacing","px","AuthNav","_ref","props","hidden","styleCategory","opacity","styleProps","textTransform","display","gap","mt","justifyContent","minWidth","overflow","textOverflow","name","formatDateString","birthday","sex","species","category","popularity","filledStars","Math","min","stars","i","push","StarIcon","pr","StarBorderIcon","dispatch","useDispatch","isFavorite","setIsFavorite","useState","infoPet","useSelector","selectNoticeById","useEffect","getNoticesById","_id","favorites","JSON","parse","localStorage","getItem","includes","index","indexOf","splice","setItem","stringify","handleFavoriteClick","removeFromFavorite","addToFavorite","style","py","position","right","p","src","imgURL","alt","title","objectFit","marginBottom","alignItems","Stars","PetInfo","comment","bottom","Button","onClick","href","concat","sprite","paddingLeft","fill","FavoriteBorderIcon","pl","stroke","user","Link","email","target","rel","textDecoration","isModalAttentionOpen","setModalAttentionOpen","isModalNoticeOpen","setModalNoticeOpen","isLogIn","IsLoggedIn","selectNoticeFavorite","localFavorites","bgcolor","handleLearnMoreClick","IconButton","filter","id","ModalWrap","isOpen","onClose","ModalNotice","length","List","map","el","ListItem","NoticesItem","dateString","undefined","date","Date","parts","Intl","DateTimeFormat","year","month","day","format","split","activeTab","setActiveTab","console","log","noticesViewed","activeTabStyles","inactiveTabStyles","Tabs","value","onChange","handleTabChange","event","newValue","Tab","label","NoticesList","noticesFavorites","Profile","selectUser","currentUserFull","MyNotices"],"sourceRoot":""}