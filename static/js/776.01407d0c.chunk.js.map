{"version":3,"file":"static/js/776.01407d0c.chunk.js","mappings":"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","sources":["components/ModalAttention/ModalAttention.jsx","components/PetInfo/PetInfo.jsx","components/Stars/Stars.jsx","components/ModalNotice/ModalNotice.jsx","components/NoticesItem/NoticesItem.jsx","components/NoticesList/NoticesList.jsx","components/SearchField/SearchField.jsx","components/ServerPagination/ServerPagination.jsx","components/Title/Title.jsx","helpers/formatDate.js","components/SelectedValues/SelectedValues.jsx","components/NoticesFilters/NoticesFilters.jsx","pages/Notices/Notices.jsx"],"sourcesContent":["import { Box, Typography } from '@mui/material';\n\nimport React from 'react'\n\nimport { AuthNav } from 'components/AuthNav/AuthNav';\nexport const ModalAttention = () => {\n\n\n    return (\n        <Box sx={{ pb: \" 20px\" }}>\n            <Box sx={{ width: \"80px\", height: \"80px\", my: \"20px\", mx: \"auto\", backgroundColor: \"#FFF4DF\", borderRadius: \"100%\", textAlign: 'center' }}>\n                <Typography sx={{ textAlign: \"center\", fontSize: \"44px\", fontWeight: 800, }}>🐶</Typography>\n            </Box>\n            <Typography sx={{ textAlign: \"center\", color: \"var(--secondary-color)\", mb: \"20px\", fontSize: \"20px\", fontWeight: 700, }}>Attention</Typography>\n            <Typography sx={{ mb: \"24px\", fontSize: \"14px\", fontWeight: 500, textAlign: \"center\", lineHeight: 1.28, letterSpacing: \"-0.28px\" }}>We would like to remind you that certain functionality is available only to authorized users.If you have an account, please log in with your credentials. If you do not already have an account, you must register to access these features.</Typography>\n            <Box px=\"20px\"> <AuthNav /></Box>\n\n        </Box>\n    )\n}\nexport default ModalAttention;","import React from 'react'\nimport { formatDateString } from '../../helpers/formatDate';\nimport { Box, Typography } from '@mui/material';\nexport const PetInfo = ({ props, hidden }) => {\n\n    const styleCategory = {\n        fontWeight: 500, fontSize: \"10px\", letterSpacing: \"-0.2px\", opacity: 0.5\n    }\n    const styleProps = {\n        fontWeight: 500, fontSize: \"12px\", letterSpacing: \"-0.24px\", textTransform: \"capitalize\",\n    }\n    return (\n        <Box sx={{\n            display: \"flex\", gap: \"10px\", mt: \"8px\", mb: \"16px\", justifyContent: \"space-between\", minWidth: \"232px\", overflow: 'hidden',\n            textOverflow: 'ellipsis'\n        }}>\n            <Box>\n                <Typography sx={styleCategory}>Name</Typography>\n                <Typography sx={styleProps}>{props.name}</Typography>\n            </Box>\n            <Box>\n                <Typography sx={styleCategory}>Birthday</Typography>\n                <Typography sx={styleProps}>{formatDateString(props.birthday)}</Typography>\n            </Box>\n            <Box>\n                <Typography sx={styleCategory}>Sex</Typography>\n                <Typography sx={styleProps}>{props.sex}</Typography>\n            </Box>\n            <Box>\n                <Typography sx={styleCategory}>Species</Typography>\n                <Typography sx={styleProps}>{props.species}</Typography>\n            </Box>\n            {!hidden && <Box>\n\n                <Typography sx={{\n                    fontWeight: 500, fontSize: \"10px\", letterSpacing: \"-0.2px\", opacity: 0.5, overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                }}>Category</Typography>\n                <Typography sx={styleProps}>{props.category}</Typography>\n            </Box>}\n\n        </Box>\n    )\n}\nexport default PetInfo;","import React from 'react';\nimport { Box } from '@mui/material';\nimport StarIcon from '@mui/icons-material/Star';\nimport StarBorderIcon from '@mui/icons-material/StarBorder';\n\nconst Stars = ({ popularity }) => {\n    if (!popularity) {\n        return null;\n    }\n    const maxStars = 5;\n    const filledStars = Math.min(popularity, maxStars);\n\n    const stars = [];\n\n    for (let i = 1; i <= maxStars; i++) {\n        stars.push(\n            i <= filledStars ? (\n                <StarIcon key={i} sx={{ color: 'rgba(255, 197, 49, 1)', fontSize: '16px', pr: '4px' }} />\n            ) : (\n                <StarBorderIcon key={i} sx={{ color: 'rgba(38, 38, 38, 0.05)', fontSize: '16px', pr: '4px' }} />\n            )\n        );\n    }\n\n    return <Box>{stars}</Box>;\n};\n\nexport default Stars;\n\n\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addToFavorite, getNoticesById, removeFromFavorite } from 'store/operations';\nimport { selectNoticeById } from './../../store/selectors';\nimport { Box, Button, Link, Typography } from '@mui/material';\nimport PetInfo from 'components/PetInfo/PetInfo';\nimport sprite from '../../img/svg/symbol-defs.svg'\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport Stars from 'components/Stars/Stars';\n\nexport const ModalNotice = ({ props }) => {\n    const dispatch = useDispatch();\n    const [isFavorite, setIsFavorite] = useState(false);\n    const infoPet = useSelector(selectNoticeById);\n\n    useEffect(() => {\n        dispatch(getNoticesById(props._id));\n\n        const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n        setIsFavorite(favorites.includes(props._id));\n    }, [dispatch, props._id]);\n\n    useEffect(() => {\n\n        const favorites = JSON.parse(localStorage.getItem('favorites')) || [];\n        if (isFavorite && !favorites.includes(props._id)) {\n            favorites.push(props._id);\n        } else if (!isFavorite && favorites.includes(props._id)) {\n            const index = favorites.indexOf(props._id);\n            if (index > -1) {\n                favorites.splice(index, 1);\n            }\n        }\n        localStorage.setItem('favorites', JSON.stringify(favorites));\n    }, [isFavorite, props._id]);\n\n    const handleFavoriteClick = () => {\n        if (isFavorite) {\n            dispatch(removeFromFavorite(infoPet._id));\n        } else {\n            dispatch(addToFavorite(infoPet._id));\n        }\n        setIsFavorite(!isFavorite);\n    };\n\n    const style = {\n        backgroundColor: \"var(--secondary-color)\", color: \"var(--background-color)\", height: \"46px\", width: \"100%\", textTransform: 'capitalize', fontSize: \"16px\", borderRadius: \"30px\", fontWeight: 500, '&:hover': { backgroundColor: \"#F9B020\" }\n    }\n    return (\n        <Box sx={{ py: \"20px\", textAlign: 'center', position: \"relative\", height: \"386px\", width: \"295px\" }}>\n            <Box>\n                <Box sx={{ position: \"absolute\", right: \"55%\", borderRadius: \"30px\", backgroundColor: \" #FFF4DF\", }}><Typography sx={{ p: \"8px 14px\", textTransform: 'capitalize', fontWeight: 500, fontSize: \"12px\", color: \"var(--secondary-color)\", }}>{infoPet.category}</Typography></Box>\n                <img src={infoPet.imgURL} alt={infoPet.title} style={{ width: \"120px\", height: \"120px\", objectFit: 'cover', marginBottom: \"24px\", borderRadius: \"100%\", mx: \"auto\", }} />\n            </Box>\n            <Box sx={{}}>\n                <Typography sx={{ fontWeight: 700, fontSize: \"16px\", mb: \"10px\" }}>{infoPet.title}</Typography>\n                <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", mb: \"24px\" }} >\n                    <Stars popularity={infoPet.popularity} />\n                    <Typography sx={{ fontSize: \"14px\" }}>{infoPet.popularity}</Typography>\n                </Box>\n            </Box>\n            <Box px=\"26px\"> <PetInfo props={infoPet} hidden={true} /></Box>\n\n            <Typography sx={{ fontWeight: 500, fontSize: \"14px\", overflow: \"hidden\", letterSpacing: \"-0.28px\", mb: \"42px\" }}>{infoPet.comment}</Typography>\n            <Box style={{ display: \"flex\", gap: \"10px\", position: \"absolute\", bottom: \"20px\", width: \"100%\", px: \"8px\" }}>\n\n                {isFavorite ? (\n                    <Button onClick={handleFavoriteClick} sx={style}  >Remove from&nbsp;&nbsp;\n                        <svg width={18} height={18}>\n                            <use href={`${sprite}#icon-trash-01`} style={{ paddingLeft: \"8px\", fill: \"var(--background-color)\" }} ></use>\n                        </svg>\n                    </Button>\n                ) : (\n                    <Button onClick={handleFavoriteClick} sx={style} > Add to&nbsp;&nbsp;\n                        <FavoriteBorderIcon pl=\"8px\" sx={{ fontSize: \"18px\", stroke: \"var(--background-color)\" }} /></Button>\n                )}\n\n                {infoPet.user && (<Link href={`mailto:${infoPet.user.email}`} target=\"_blank\" rel=\"noopener\" sx={{ textDecoration: 'none', width: \"100%\" }}>\n\n\n                    <Button sx={{ backgroundColor: \" #FFF4DF\", color: \"var(--secondary-color)\", height: \"46px\", width: \"100%\", textTransform: 'capitalize', fontSize: \"16px\", borderRadius: \"30px\", fontWeight: 500, '&:hover': { backgroundColor: \"#FBE7C1\" }, }} >Contact</Button>\n                </Link>)}\n            </Box>\n        </Box >\n    )\n}\nexport default ModalNotice;","import StarIcon from '@mui/icons-material/Star';\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box, Button, IconButton, Typography } from '@mui/material';\nimport sprite from '../../img/svg/symbol-defs.svg';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport ModalWrap from 'components/ModalWrap/ModalWrap';\nimport ModalAttention from 'components/ModalAttention/ModalAttention';\nimport ModalNotice from 'components/ModalNotice/ModalNotice';\nimport { IsLoggedIn } from 'helpers/isLoggedIn';\nimport PetInfo from 'components/PetInfo/PetInfo';\nimport { addToFavorite, removeFromFavorite } from 'store/operations';\nimport { selectNoticeFavorite } from 'store/selectors';\n\nconst NoticesItem = ({ props }) => {\n    const dispatch = useDispatch();\n\n    const [isFavorite, setIsFavorite] = useState(false);\n    const [isModalAttentionOpen, setModalAttentionOpen] = useState(false);\n    const [isModalNoticeOpen, setModalNoticeOpen] = useState(false);\n    const { isLogIn } = IsLoggedIn();\n    const favorites = useSelector(selectNoticeFavorite);\n\n    useEffect(() => {\n        // Загрузка состояния избранного из Redux и LocalStorage\n        const localFavorites = JSON.parse(localStorage.getItem('favorites')) || favorites;\n        setIsFavorite(favorites.includes(props._id) || localFavorites.includes(props._id));\n    }, [favorites, props._id]);\n\n    const handleFavoriteClick = () => {\n        if (!isLogIn) {\n            setModalAttentionOpen(true);\n        } else {\n            const localFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n            if (isFavorite) {\n                dispatch(removeFromFavorite(props._id));\n                localStorage.setItem('favorites', JSON.stringify(localFavorites.filter(id => id !== props._id)));\n            } else {\n                dispatch(addToFavorite(props._id));\n                localStorage.setItem('favorites', JSON.stringify([...localFavorites, props._id]));\n            }\n            setIsFavorite(!isFavorite);\n        }\n    };\n\n    const handleLearnMoreClick = () => {\n        if (!isLogIn) {\n            setModalAttentionOpen(true);\n        } else {\n            setModalNoticeOpen(true);\n        }\n    };\n\n    return (\n        <Box p=\"24px\" width=\"100%\" bgcolor={'var(--background-color)'} sx={{ minWidth: \"232px\", borderRadius: \"16px\", height: \"430px\", position: \"relative\" }}>\n            <img src={props.imgURL} alt={props.title} style={{ width: \"100%\", objectFit: 'cover', marginBottom: \"24px\", height: \"178px\", borderRadius: \"16px\" }} />\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <Typography sx={{ fontWeight: 700, fontSize: \"16px\" }}>{props.title}</Typography>\n                <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                    <StarIcon sx={{ color: \"var(--secondary-color)\", width: \"16px\", height: \"16px\" }} />\n                    <Typography sx={{ fontSize: \"14px\" }}>{props.popularity}</Typography>\n                </Box>\n            </Box>\n            <PetInfo props={props} />\n            <Typography sx={{ fontWeight: 500, fontSize: \"14px\", overflow: \"hidden\", letterSpacing: \"-0.28px\" }}>{props.comment}</Typography>\n            <Box style={{ display: \"flex\", gap: \"10px\", bottom: \"24px\", position: \"absolute\", width: \"100%\" }}>\n                <Button sx={{ backgroundColor: \"var(--secondary-color)\", color: \"var(--background-color)\", width: \"231px\", height: \"46px\", textTransform: 'capitalize', fontSize: \"14px\", borderRadius: \"30px\", fontWeight: 500 }} onClick={handleLearnMoreClick}>\n                    Learn more\n                </Button>\n                <Box sx={{ borderRadius: \"30px\", backgroundColor: \" #FFF4DF\", width: \"46px\", height: \"46px\", display: \"flex\", justifyContent: \"center\" }}>\n                    <IconButton onClick={handleFavoriteClick}>\n                        {isFavorite ? (\n                            <Box>\n                                <svg width={18} height={18}>\n                                    <use href={`${sprite}#icon-trash-01`} style={{ fill: \"var(--secondary-color)\" }}></use>\n                                </svg>\n                            </Box>\n                        ) : (\n                            <FavoriteBorderIcon sx={{ fill: \"var(--secondary-color)\" }} />\n                        )}\n                    </IconButton>\n                </Box>\n            </Box>\n            <ModalWrap isOpen={isModalAttentionOpen} onClose={() => setModalAttentionOpen(false)}>\n                <ModalAttention />\n            </ModalWrap>\n            <ModalWrap isOpen={isModalNoticeOpen} onClose={() => setModalNoticeOpen(false)}>\n                <ModalNotice props={props} />\n            </ModalWrap>\n        </Box>\n    );\n};\n\nexport default NoticesItem;\n","import React from 'react'\nimport { Box, List, ListItem } from \"@mui/material\";\nimport NoticesItem from 'components/NoticesItem/NoticesItem';\n\nexport const NoticesList = ({ props }) => {\n    if (props.length === 0) return null;\n    return (\n        <Box>\n            <List sx={{ p: 0 }}>\n                {props.map((el) => (\n                    <ListItem key={el._id} sx={{ p: 0, mb: \"24px\" }}>\n                        <NoticesItem props={el} />\n\n                    </ListItem>\n                ))}\n            </List>\n        </Box>\n    )\n}\nexport default NoticesList;","import React, { useEffect, useState } from 'react';\nimport { Box, TextField, IconButton, Paper } from '@mui/material';\nimport sprite from '../../img/svg/symbol-defs.svg';\nimport { useLocation } from 'react-router-dom';\n\n\nconst SearchField = ({ onSearch, bgColor }) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const location = useLocation();\n    const isNoticesPage = location.pathname === '/notices';\n\n\n    const handleInputChange = (event) => {\n        setSearchTerm(event.target.value);\n    };\n\n    const handleClearInput = () => {\n        setSearchTerm('');\n        onSearch('');\n\n    };\n    useEffect(() => {\n        if (onSearch) {\n            setSearchTerm(\"\");\n\n        }\n    }, [onSearch, setSearchTerm]);\n    const handleSearch = (event) => {\n        event.preventDefault();\n        onSearch(searchTerm);\n    };\n    const style = {\n\n        '& .MuiOutlinedInput-root': {\n            backgroundColor: `${bgColor}`,\n            borderRadius: '30px',\n            margin: '0',\n            border: 'none',\n            height: \"42px\"\n\n        },\n        '& .MuiOutlinedInput-notchedOutline': {\n            border: isNoticesPage ? \"none\" : \"1px solid rgba(38, 38, 38, 0.15)\",\n        },\n        '& .MuiInputBase-input': {\n            '&::placeholder': {\n                opacity: isNoticesPage ? 1 : 0.8,\n                color: isNoticesPage ? 'var(--primary-color)' : 'rgba(38, 38, 38, 0.50)',\n                fontSize: '14px',\n                fontWeight: 500,\n            },\n        },\n    };\n    return (\n        <Paper component=\"div\" sx={{ boxShadow: 'none', backgroundColor: 'var(--background-gray)' }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mt: '4px', borderRadius: '30px', position: 'relative' }}>\n                <TextField\n                    sx={style}\n                    id=\"name\"\n                    InputLabelProps={{ shrink: false }}\n                    value={searchTerm}\n                    onChange={handleInputChange}\n                    placeholder=\"Search\"\n                    fullWidth\n                    margin=\"normal\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-Я]*)*$\"\n                />\n                {searchTerm && (\n                    <IconButton onClick={handleClearInput} sx={{ position: 'absolute', right: '32px', p: 0, top: '28px' }} >\n                        <svg width={18} height={18} style={{ stroke: '#EF2447', fill: '#EF2447' }}>\n                            <use href={`${sprite}#icon-x`}></use>\n                        </svg>\n                    </IconButton>\n                )}\n                <IconButton type=\"submit\" onClick={handleSearch} sx={{ position: 'absolute', right: '12px', p: 0, top: '28px' }}>\n                    <svg width={18} height={18} style={{ stroke: 'var(--primary-color)', fill: 'white' }}>\n                        <use href={`${sprite}#icon-search`}></use>\n                    </svg>\n                </IconButton>\n            </Box>\n        </Paper>\n    );\n};\n\nexport default SearchField;\n\n","import React from 'react';\nimport { Box, IconButton } from \"@mui/material\";\nimport KeyboardDoubleArrowLeftIcon from '@mui/icons-material/KeyboardDoubleArrowLeft';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport KeyboardDoubleArrowRightIcon from '@mui/icons-material/KeyboardDoubleArrowRight';\n\nconst ServerPagination = ({ totalPages, currentPage, onPageChange }) => {\n    const handleFirstPage = () => onPageChange(1);\n    const handlePreviousPage = () => onPageChange(currentPage - 1);\n    const handleNextPage = () => onPageChange(currentPage + 1);\n    const handleLastPage = () => onPageChange(totalPages);\n\n    const isFirstPage = currentPage === 1;\n    const isLastPage = currentPage === totalPages;\n\n    const buttonStyle = {\n        borderRadius: '100%',\n        border: '1px solid rgba(38, 38, 38, 0.20)',\n        width: '38px',\n        height: '38px',\n\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontWeight: 700,\n        '@media (max-width: 320px)': {\n            width: '34px',\n            height: '34px',\n        },\n    };\n    const activeButtonStyle = {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontWeight: 700,\n        borderRadius: '100%',\n        border: '1px solid',\n        width: '38px',\n        height: '38px',\n        '@media (max-width: 320px)': {\n            width: '34px',\n            height: '34px',\n        },\n        borderColor: \"var(--secondary-color)\",\n        backgroundColor: 'var(--secondary-color)',\n\n        color: \"var(--background-color)\",\n    };\n    const pageNumbers = [currentPage];\n    if (currentPage < totalPages) {\n        pageNumbers.push(currentPage + 1);\n    }\n    return (\n        <Box sx={{\n            display: 'flex', alignItems: 'center', justifyContent: 'center', mt: '26px', gap: \"6px\", width: \"334px\", '@media (max-width: 320px)': {\n                width: '280px',\n                gap: \"4px\",\n            },\n        }}>\n            <IconButton sx={buttonStyle} onClick={handleFirstPage} disabled={isFirstPage}>\n                <KeyboardDoubleArrowLeftIcon sx={{ p: \"8px\", minWidth: \"18px\", '@media (max-width: 320px)': { p: \"6px\" }, }} />\n            </IconButton>\n            <IconButton sx={buttonStyle} onClick={handlePreviousPage} disabled={isFirstPage}>\n                <ChevronLeftIcon sx={{ p: \"8px\", '@media (max-width: 320px)': { p: \"6px\" }, }} />\n            </IconButton>\n            <Box mx=\"5px\" sx={{ display: \"flex\", gap: \"10px\", '@media (max-width: 320px)': { gap: \"6px\", mx: 0 }, }}>\n                {pageNumbers.map((pageNumber, index) => (\n                    <Box key={index} sx={pageNumber === currentPage ? activeButtonStyle : buttonStyle} mx={0} onClick={() => onPageChange(pageNumber)}>\n                        {pageNumber}\n                    </Box>\n                ))}\n                <Box sx={buttonStyle} >\n                    ...\n                </Box></Box>\n            <IconButton sx={buttonStyle} onClick={handleNextPage} disabled={isLastPage}>\n                <ChevronRightIcon sx={{ p: \"8px\", '@media (max-width: 320px)': { p: \"6px\" }, }} />\n            </IconButton>\n            <IconButton sx={buttonStyle} onClick={handleLastPage} disabled={isLastPage}>\n                <KeyboardDoubleArrowRightIcon sx={{ p: \"8px\", '@media (max-width: 320px)': { p: \"6px\" }, }} />\n            </IconButton>\n        </Box>\n    );\n};\n\nexport default ServerPagination;\n\n\n\n","import { Typography } from '@mui/material'\nimport React from 'react'\n\nexport const Title = ({ children }) => {\n    return (\n        <Typography component=\"h2\" sx={(theme) => ({\n            fontSize: \"28px\",\n            fontWeight: 700,\n            color: \"text.primary\",\n            lineHeight: 1,\n            letterSpacing: \"-1.12px\",\n\n            [theme.breakpoints.up(\"md\")]: {\n\n                fontSize: \"54px\",\n                letterSpacing: \"-1.62px\",\n            }\n        })\n        } > {children}</ Typography >\n    )\n}\n\nexport default Title;","export function formatDateString(dateString) {\n  if (dateString === undefined) {\n    return;\n  }\n  const date = new Date(dateString);\n\n  const options = {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n  };\n  const formattedDate = new Intl.DateTimeFormat(\"en-US\", options).format(date);\n  const parts = formattedDate.split(\"/\");\n  const dateWithDots = `${parts[0]}.${parts[1]}.${parts[2]}`;\n\n  return dateWithDots;\n}\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setPopularFilter, setPriceFilter } from 'store/reducer';\nimport { Button, IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Box from '@mui/material/Box';\n\nconst SelectedValues = ({ reset }) => {\n    const dispatch = useDispatch();\n    const [selectedFilters, setSelectedFilters] = useState({\n        popular: null,\n        price: null\n    });\n\n    useEffect(() => {\n        if (reset) {\n            setSelectedFilters({\n                popular: null,\n                price: null\n            });\n            dispatch(setPopularFilter(''));\n            dispatch(setPriceFilter(''));\n        }\n    }, [reset, dispatch]);\n\n    const handleFilterChange = (filterName, value) => {\n        setSelectedFilters(prevState => ({\n            ...prevState,\n            [filterName]: value\n        }));\n\n        if (filterName === 'popular') {\n            dispatch(setPopularFilter(value));\n        } else if (filterName === 'price') {\n            dispatch(setPriceFilter(value));\n        }\n    };\n\n    const clearFilter = (filterName) => {\n        setSelectedFilters(prevState => ({\n            ...prevState,\n            [filterName]: null\n        }));\n\n        if (filterName === 'popular') {\n            dispatch(setPopularFilter(''));\n        } else if (filterName === 'price') {\n            dispatch(setPriceFilter(''));\n        }\n    };\n\n    const buttonStyle = {\n        borderRadius: '30px',\n        p: \"12px\",\n        height: \"18px\",\n        border: \"none\",\n        backgroundColor: '#FFFFFF',\n        color: \"var(--primary-color)\"\n    };\n\n    const selectedButtonStyle = {\n        ...buttonStyle,\n        backgroundColor: 'var(--secondary-color)',\n        color: '#FFFFFF',\n    };\n    const getButtonStyle = (isSelected) => ({\n        p: 0,\n        textTransform: 'capitalize',\n        height: \"12px\",\n        fontSize: '14px',\n        fontWeight: 500,\n        color: isSelected ? '#FFFFFF' : \"var(--primary-color)\"\n    });\n\n    return (\n        <Box display=\"flex\" flexDirection=\"column\" gap={2} mb=\"20px\">\n            <Box display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" gap=\"10px\">\n                <Box sx={selectedFilters.popular === 'popular' ? selectedButtonStyle : buttonStyle}>\n                    <Button\n                        sx={getButtonStyle(selectedFilters.popular === 'popular')}\n                        onClick={() => handleFilterChange('popular', 'popular')}\n                    >\n                        Popular\n                    </Button>\n                    {selectedFilters.popular === true && (\n                        <IconButton onClick={() => clearFilter('popular')} size=\"small\" sx={{ ml: \"6px\", p: 0, color: '#FFFFFF' }}>\n                            <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    )}\n                </Box>\n                <Box sx={selectedFilters.popular === 'unpopular' ? selectedButtonStyle : buttonStyle}>\n                    <Button\n                        sx={getButtonStyle(selectedFilters.popular === 'unpopular')}\n                        onClick={() => handleFilterChange('popular', 'unpopular')}\n                    >\n                        Unpopular\n                    </Button>\n                    {selectedFilters.popular === false && (\n                        <IconButton onClick={() => clearFilter('popular')} size=\"small\" sx={{ ml: \"6px\", p: 0, color: '#FFFFFF' }}>\n                            <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    )}\n                </Box>\n                <Box sx={selectedFilters.price === \"cheap\" ? selectedButtonStyle : buttonStyle}>\n                    <Button\n                        sx={getButtonStyle(selectedFilters.price === \"cheap\")}\n                        onClick={() => handleFilterChange('price', \"cheap\")}\n                    >\n                        Cheap\n                    </Button>\n                    {selectedFilters.price === true && (\n                        <IconButton onClick={() => clearFilter('price')} size=\"small\" sx={{ ml: \"6px\", p: 0, color: '#FFFFFF' }}>\n                            <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    )}\n                </Box>\n                <Box sx={selectedFilters.price === \"expensive\" ? selectedButtonStyle : buttonStyle}>\n                    <Button\n                        sx={getButtonStyle(selectedFilters.price === \"expensive\")}\n                        onClick={() => handleFilterChange('price', \"expensive\")}\n                    >\n                        Expensive\n                    </Button>\n                    {selectedFilters.price === false && (\n                        <IconButton onClick={() => clearFilter('price')} size=\"small\" sx={{ ml: \"6px\", p: 0, color: '#FFFFFF' }}>\n                            <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    )}\n                </Box>\n            </Box>\n        </Box>\n    );\n};\n\nexport default SelectedValues;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/async';\nimport sprite from '../../img/svg/symbol-defs.svg';\nimport {\n    selectGetCategories,\n    selectGetSex,\n    selectGetSpecies,\n    selectGetLocations,\n    selectGetNoticesFilter\n} from 'store/selectors';\nimport SearchField from 'components/SearchField/SearchField';\nimport {\n    setCategoryFilter,\n    setGenderFilter,\n    setPetTypeFilter,\n    setLocationFilter,\n    resetFilters,\n\n} from 'store/reducer';\nimport SelectedValues from 'components/SelectedValues/SelectedValues';\nimport { Box, IconButton, Paper } from '@mui/material';\nimport Btn from 'components/Button/Button';\n\n\nconst NoticesFilters = ({ onSearch }) => {\n    const [reset, setReset] = useState(false);\n    const [selectedLocation, setSelectedLocation] = useState(null);\n    const dispatch = useDispatch();\n    const categories = useSelector(selectGetCategories);\n    const sex = useSelector(selectGetSex);\n    const species = useSelector(selectGetSpecies);\n    const locations = useSelector(selectGetLocations);\n\n    const filter = useSelector(selectGetNoticesFilter);\n\n\n    const handleCategoryChange = (selectedOption) => {\n        dispatch(setCategoryFilter(selectedOption ? selectedOption.value : \"\"));\n    };\n\n    const handleGenderChange = (selectedOption) => {\n        dispatch(setGenderFilter(selectedOption ? selectedOption.value : \"\"));\n    };\n\n    const handlePetTypeChange = (selectedOption) => {\n        dispatch(setPetTypeFilter(selectedOption ? selectedOption.value : \"\"));\n    };\n\n    const handleLocationChange = (selectedOption) => {\n        dispatch(setLocationFilter(selectedOption ? selectedOption.value : \"\"));\n        setSelectedLocation(selectedOption);\n    };\n\n    const handleResetFilters = () => {\n        dispatch(resetFilters());\n        onSearch('');\n        setReset(true);\n        setTimeout(() => setReset(false), 0);\n    };\n\n    const createOptions = (options) => [\n        { value: '', label: 'Show All' },\n        ...options.map(option => ({ value: option, label: option }))\n    ];\n    const getSelectedOption = (value, options) => {\n        return options.find(option => option.value === value) || null;\n    };\n    const loadLocationOptions = (inputValue, callback) => {\n\n        const filteredLocations = locations.filter(location =>\n            location.cityEn.toLowerCase().includes(inputValue.toLowerCase())\n        );\n\n        filteredLocations.sort((a, b) => a.cityEn.localeCompare(b.cityEn));\n        const options = filteredLocations.map(location => ({\n            value: location._id,\n            label: `${location.cityEn}, ${location.stateEn}`\n        }));\n        callback(options);\n    };\n    const style = {\n        control: (provided, state) => ({\n            ...provided,\n            cursor: 'default',\n            width: \"100%\",\n            color: \"var(--primary-color)\",\n            height: \"42px\",\n            borderRadius: '30px',\n            border: 'none',\n\n        }),\n        singleValue: (provided) => ({\n            ...provided,\n            color: \"var(--primary-color)\",\n            textTransform: 'capitalize',\n            paddingLeft: \"2px\",\n            fontSize: \"14px\",\n            fontWeight: 500,\n        }),\n        ValueContainer: (provided) => ({\n            ...provided,\n\n        }),\n        input: (provided) => ({\n            ...provided,\n            display: 'none'\n\n        }),\n        indicatorSeparator: (provided) => ({\n            ...provided,\n            display: 'none'\n\n        }),\n        indicatorContainer: (provided) => ({\n            ...provided,\n            display: 'none'\n\n        }),\n        container: (provided) => ({\n            ...provided,\n            width: \"100%\"\n\n        }),\n        placeholder: (provided) => ({\n            ...provided,\n            color: \"var(--primary-color)\",\n            fontSize: \"14px\",\n            fontWeight: 500,\n\n            paddingLeft: \"2px\",\n        }),\n        dropdownIndicator: (provided) => ({\n            ...provided,\n            color: \"var(--primary-color)\"\n        }),\n        menu: (provided) => ({\n            ...provided,\n            borderRadius: \"14px\",\n            padding: \"0 12px \",\n            maxHeight: \"216px\",\n        }),\n        menuList: (provided) => ({\n            ...provided,\n            maxHeight: '216px !important',\n            \"::-webkit-scrollbar\": {\n                width: '8px',\n                height: '100px',\n                paddingTop: '10px',\n            },\n            \"::-webkit-scrollbar-thumb\": {\n                background: 'rgba(0,0,0,0.2)',\n                borderRadius: '10px',\n\n            },\n        }),\n        option: (provided, state) => ({\n            ...provided,\n            textTransform: 'capitalize',\n            color: state.isFocused ? 'var(--secondary-color)' : \"rgba(38, 38, 38, 0.60)\",\n            backgroundColor: state.isFocused ? 'transparent' : 'transparent',\n\n        })\n    }\n    return (\n        <Paper component=\"form\" onReset={handleResetFilters} sx={{ color: \"var(--primary-color)\", p: \"20px\", pt: \"4px\", my: \"40px\", boxShadow: 'none', backgroundColor: '#FFF4DF', borderRadius: '30px', }}>\n            <SearchField onSearch={onSearch} onReset={handleResetFilters} bgColor={\"var(--background-color)\"} />\n            <Box sx={{ display: \"flex\", mt: \"4px\", mb: \"12px\", gap: \"8px\", width: \"100%\" }}>\n                <Select\n                    styles={style}\n                    options={createOptions(categories)}\n                    onChange={handleCategoryChange}\n                    value={getSelectedOption(filter.category, createOptions(categories))}\n                    placeholder=\"Category\"\n\n                />\n                <Select\n                    styles={style}\n\n                    options={createOptions(sex)}\n                    onChange={handleGenderChange}\n                    value={getSelectedOption(filter.gender, createOptions(sex))}\n                    placeholder=\"By gender\"\n\n                /></Box>\n            <Select\n                styles={style}\n                options={createOptions(species)}\n                onChange={handlePetTypeChange}\n                value={getSelectedOption(filter.species, createOptions(species))}\n                placeholder=\"By type\"\n\n            />\n            <Box mt=\"12px\" sx={{ position: \"relative\" }}>\n                <AsyncSelect\n                    styles={{\n                        control: (provided, state) => ({\n                            ...provided,\n                            cursor: 'default',\n                            width: \"100%\",\n                            color: \"var(--primary-color)\",\n                            height: \"42px\",\n                            borderRadius: '30px',\n                            border: 'none',\n\n                        }),\n                        singleValue: (provided) => ({\n                            ...provided,\n                            color: \"var(--primary-color)\",\n                            textTransform: 'capitalize',\n                            paddingLeft: \"2px\",\n                            fontSize: \"14px\",\n                            fontWeight: 500,\n                        }),\n                        ValueContainer: (provided) => ({\n                            ...provided,\n\n                        }),\n                        input: (provided) => ({\n                            ...provided,\n\n\n                        }),\n                        indicatorSeparator: (provided) => ({\n                            ...provided,\n                            display: 'none'\n\n                        }),\n                        indicatorContainer: (provided) => ({\n                            ...provided,\n\n\n                        }),\n                        container: (provided) => ({\n                            ...provided,\n                            width: \"100%\"\n\n                        }),\n                        placeholder: (provided) => ({\n                            ...provided,\n                            color: \"var(--primary-color)\",\n                            fontSize: \"14px\",\n                            fontWeight: 500,\n\n                            paddingLeft: \"2px\",\n                        }),\n                        dropdownIndicator: (provided) => ({\n                            ...provided,\n                            display: 'none'\n                        }),\n                        menu: (provided) => ({\n                            ...provided,\n                            borderRadius: \"14px\",\n                            padding: \" 12px \",\n                            maxHeight: \"216px\",\n                        }),\n                        menuList: (provided) => ({\n                            ...provided,\n                            height: '94px ',\n                            \"::-webkit-scrollbar\": {\n                                width: '8px',\n                                height: '100px',\n                                paddingTop: '10px',\n                            },\n                            \"::-webkit-scrollbar-thumb\": {\n                                background: 'rgba(0,0,0,0.2)',\n                                borderRadius: '10px',\n\n                            },\n                        }),\n                        option: (provided, state) => ({\n                            ...provided,\n                            textTransform: 'capitalize',\n                            color: state.isFocused ? 'var(--secondary-color)' : \"rgba(38, 38, 38, 0.60)\",\n                            backgroundColor: state.isFocused ? 'transparent' : 'transparent',\n                            padding: \"0 12px 8px 12px\",\n                            fontSize: \"14px\",\n                            fontWeight: 500,\n                        })\n                    }}\n                    loadOptions={loadLocationOptions}\n                    onChange={handleLocationChange}\n                    value={selectedLocation}\n                    placeholder=\"Location\"\n                    isClearable\n                />\n                <IconButton type=\"submit\" sx={{ position: 'absolute', right: '12px', p: 0, top: '12px' }}>\n                    <svg width={18} height={18} style={{ stroke: 'var(--primary-color)', fill: 'white' }}>\n                        <use href={`${sprite}#icon-search`}></use>\n                    </svg>\n                </IconButton></Box>\n            <Box sx={{ my: \"20px\", width: \"100%\", height: \" 1px\", backgroundColor: \"rgba(38, 38, 38, 0.10)\" }}></Box>\n            <SelectedValues reset={reset} />\n            <Btn onClick={handleResetFilters} bgColor={\"var(--secondary-color)\"} textColor={\"var(--background-color)\"} type={\"reset\"}>Reset</Btn>\n        </Paper>\n\n    );\n};\n\nexport default NoticesFilters;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box } from '@mui/material';\nimport NoticesFilters from 'components/NoticesFilters/NoticesFilters';\nimport NoticesList from 'components/NoticesList/NoticesList';\nimport ServerPagination from 'components/ServerPagination/ServerPagination';\nimport Title from 'components/Title/Title';\nimport { getNotices, getCategories, getSex, getSpecies, getLocations } from 'store/operations';\nimport { setInputFilter } from 'store/reducer';\nimport { selectGetNotices, selectGetNoticesFilter, selectTotalPagesNotices } from 'store/selectors';\n\nconst Notices = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectGetNoticesFilter);\n    const notices = useSelector(selectGetNotices);\n    const totalPages = useSelector(selectTotalPagesNotices);\n    const [currentPage, setCurrentPage] = useState(1);\n    const itemsPerPage = 6;\n    const [filteredNotices, setFilteredNotices] = useState([]);\n    useEffect(() => {\n        dispatch(getCategories());\n        dispatch(getSex());\n        dispatch(getSpecies());\n        dispatch(getLocations());\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(getNotices({ page: currentPage, perPage: itemsPerPage, filter }));\n    }, [dispatch, currentPage, filter]);\n    useEffect(() => {\n        const applyFilter = () => {\n            let filtered = notices;\n\n\n            if (filter.gender) {\n                filtered = filtered.filter(notice => notice.sex === filter.gender);\n            }\n\n            setFilteredNotices(filtered);\n        };\n\n        applyFilter();\n    }, [notices, filter]);\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const handleSearch = (searchTerm) => {\n        dispatch(setInputFilter(searchTerm));\n        setCurrentPage(1);\n    };\n    console.log(filteredNotices)\n    return (\n        <Box mt=\"60px\">\n            <Title>Find your favorite pet</Title>\n            <NoticesFilters onSearch={handleSearch} />\n            <NoticesList props={filteredNotices} />\n            {(filteredNotices.length > 6 || totalPages > 1) && (\n                <ServerPagination\n                    totalPages={totalPages}\n                    currentPage={currentPage}\n                    onPageChange={handlePageChange}\n                />\n            )}\n        </Box>\n    );\n};\n\nexport default Notices;\n"],"names":["ModalAttention","_jsxs","Box","sx","pb","children","_jsx","width","height","my","mx","backgroundColor","borderRadius","textAlign","Typography","fontSize","fontWeight","color","mb","lineHeight","letterSpacing","px","AuthNav","_ref","props","hidden","styleCategory","opacity","styleProps","textTransform","display","gap","mt","justifyContent","minWidth","overflow","textOverflow","name","formatDateString","birthday","sex","species","category","popularity","filledStars","Math","min","stars","i","push","StarIcon","pr","StarBorderIcon","dispatch","useDispatch","isFavorite","setIsFavorite","useState","infoPet","useSelector","selectNoticeById","useEffect","getNoticesById","_id","favorites","JSON","parse","localStorage","getItem","includes","index","indexOf","splice","setItem","stringify","handleFavoriteClick","removeFromFavorite","addToFavorite","style","py","position","right","p","src","imgURL","alt","title","objectFit","marginBottom","alignItems","Stars","PetInfo","comment","bottom","Button","onClick","href","concat","sprite","paddingLeft","fill","FavoriteBorderIcon","pl","stroke","user","Link","email","target","rel","textDecoration","isModalAttentionOpen","setModalAttentionOpen","isModalNoticeOpen","setModalNoticeOpen","isLogIn","IsLoggedIn","selectNoticeFavorite","localFavorites","bgcolor","handleLearnMoreClick","IconButton","filter","id","ModalWrap","isOpen","onClose","ModalNotice","length","List","map","el","ListItem","NoticesItem","onSearch","bgColor","searchTerm","setSearchTerm","isNoticesPage","useLocation","pathname","margin","border","Paper","component","boxShadow","TextField","InputLabelProps","shrink","value","onChange","event","placeholder","fullWidth","pattern","handleClearInput","top","type","preventDefault","totalPages","currentPage","onPageChange","isFirstPage","isLastPage","buttonStyle","activeButtonStyle","borderColor","pageNumbers","handleFirstPage","disabled","KeyboardDoubleArrowLeftIcon","handlePreviousPage","ChevronLeftIcon","pageNumber","handleNextPage","ChevronRightIcon","handleLastPage","KeyboardDoubleArrowRightIcon","theme","breakpoints","up","dateString","undefined","date","Date","parts","Intl","DateTimeFormat","year","month","day","format","split","reset","selectedFilters","setSelectedFilters","popular","price","setPopularFilter","setPriceFilter","handleFilterChange","filterName","prevState","clearFilter","selectedButtonStyle","getButtonStyle","isSelected","flexDirection","flexWrap","size","ml","CloseIcon","setReset","selectedLocation","setSelectedLocation","categories","selectGetCategories","selectGetSex","selectGetSpecies","locations","selectGetLocations","selectGetNoticesFilter","handleResetFilters","resetFilters","setTimeout","createOptions","options","label","option","getSelectedOption","find","control","provided","state","cursor","singleValue","ValueContainer","input","indicatorSeparator","indicatorContainer","container","dropdownIndicator","menu","padding","maxHeight","menuList","paddingTop","background","isFocused","onReset","pt","SearchField","Select","styles","selectedOption","setCategoryFilter","setGenderFilter","gender","setPetTypeFilter","AsyncSelect","loadOptions","loadLocationOptions","inputValue","callback","filteredLocations","location","cityEn","toLowerCase","sort","a","b","localeCompare","stateEn","setLocationFilter","isClearable","SelectedValues","Btn","textColor","Notices","notices","selectGetNotices","selectTotalPagesNotices","setCurrentPage","filteredNotices","setFilteredNotices","getCategories","getSex","getSpecies","getLocations","getNotices","page","perPage","applyFilter","filtered","notice","console","log","Title","NoticesFilters","setInputFilter","NoticesList","ServerPagination"],"sourceRoot":""}