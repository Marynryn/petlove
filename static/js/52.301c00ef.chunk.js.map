{"version":3,"file":"static/js/52.301c00ef.chunk.js","mappings":"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","sources":["webpack://petlove/./src/components/PetBlock/PetBlock.module.css?5b63","components/PetBlock/PetBlock.jsx","schema/schema.js","components/RegistrationForm/RegistrationForm.jsx","components/Title/Title.jsx","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"catblock\":\"PetBlock_catblock__Sj84y\",\"dogblock\":\"PetBlock_dogblock__wYVAS\"};","import React from 'react'\nimport css from \"./PetBlock.module.css\"\nimport { useLocation } from 'react-router-dom/dist';\nexport const PetBlock = () => {\n\n    const location = useLocation();\n\n    const style = location.pathname === '/register' ? css.catblock : css.dogblock;\n\n    return (\n        <div className={style}></div>\n    )\n}\nexport default PetBlock;","import * as yup from \"yup\";\r\n\r\nexport const authSchema = yup.object({\r\n  name: yup\r\n    .string()\r\n    .required(\" Name is required\")\r\n    .min(2, \"Name must be at least 8 characters\")\r\n\r\n    .matches(\r\n      /^[a-zA-Zа-яА-Я0-9\\s]*$/,\r\n      \"Name can only contain letters, numbers, and spaces\"\r\n    ),\r\n  email: yup\r\n    .string()\r\n    .trim()\r\n    .email()\r\n    .required(\"Email is required\")\r\n    .matches(\r\n      /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/,\r\n      \"Invalid email format\"\r\n    ),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(7, \"Password must be at least 7 characters\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Confirm Password is required\"),\r\n});\r\nexport const loginSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .trim()\r\n    .email()\r\n    .required(\"Email is required\")\r\n    .matches(\r\n      /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/,\r\n      \"Invalid email format\"\r\n    ),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(7, \"Password must be at least 7 characters\"),\r\n});\r\n","import React, { useState } from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { toast } from 'react-hot-toast';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { authSchema, loginSchema } from 'schema/schema';\nimport Btn from 'components/Button/Button';\nimport { IconButton, InputAdornment, TextField, Box } from '@mui/material';\n\nimport sprite from '../../img/svg/symbol-defs.svg'\nimport { useDispatch } from 'react-redux';\nimport { login, userPost } from 'store/operations';\n\n\n\nconst RegistrationForm = ({ type, onClose }) => {\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n    const dispatch = useDispatch();\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\n    const handleClickShowConfirmPassword = () => setShowConfirmPassword((show) => !show);\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const validationSchema = type === 'register' ? authSchema : loginSchema;\n\n    const methods = useForm({\n        resolver: yupResolver(validationSchema)\n    });\n    const { handleSubmit, formState: { errors }, register } = methods;\n\n    const onSubmit = methods.handleSubmit(async (data) => {\n        console.log(data);\n        const { email, password, name } = data;\n\n        try {\n            if (type === 'register') {\n                await dispatch(userPost({ email, password, name }));\n            } else {\n                await dispatch(login({ email, password }));\n\n\n            }\n        } catch (error) {\n            const errorMessage = error.response?.data?.message || \"Invalid email or password\";\n            toast.error(errorMessage);\n        }\n    });\n\n    const style = {\n        mt: 0,\n        mb: \"10px\",\n        '& .MuiOutlinedInput-input': {\n            p: \"12px\",\n            height: \"16px\",\n            fontSize: \"14px\",\n            fontWeight: 500,\n        },\n        '& .MuiOutlinedInput-root': {\n            borderRadius: \"30px\",\n\n            border: \"1px solid rgba(38, 38, 38, 0.15)\",\n            '&:hover .MuiOutlinedInput-notchedOutline': {\n                borderColor: 'var(--secondary-color)',\n\n            },\n            '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                borderColor: 'var(--secondary-color)',\n\n            },\n        },\n        '& .MuiFormHelperText-root': {\n            height: \"12px\",\n            m: 0,\n            fontSize: \"10px\",\n            color: \"#EF2447\",\n\n            borderColor: \"#EF2447\",\n            '& .MuiOutlinedInput-input': {\n                borderColor: \"#EF2447\"\n            }\n        }\n    }\n    return (\n        <FormProvider {...methods}>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <Box >\n                    {type === 'register' && (\n                        <TextField sx={style}\n                            id=\"name\"\n                            InputLabelProps={{ shrink: false }}\n\n                            placeholder=\"Name\"\n                            fullWidth\n                            margin=\"normal\"\n                            {...register(\"name\")}\n                            error={!!errors.name}\n                            helperText={errors.name ? errors.name.message : ''}\n                        />\n                    )}\n\n                    <TextField\n                        sx={style}\n                        id=\"email\"\n\n                        InputLabelProps={{ shrink: false }}\n                        placeholder=\"Email\"\n                        fullWidth\n                        margin=\"normal\"\n                        {...register(\"email\")}\n                        error={!!errors.email}\n                        helperText={errors.email ? errors.email.message : ''}\n                    />\n\n                    <TextField\n                        sx={style}\n                        id=\"password\"\n                        placeholder='Password'\n                        type={showPassword ? 'text' : 'password'}\n                        fullWidth\n                        {...register(\"password\")}\n                        error={!!errors.password}\n                        helperText={errors.password ? errors.password.message : ''}\n                        InputLabelProps={{ shrink: false }}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowPassword}\n                                        onMouseDown={handleMouseDownPassword}\n                                        edge=\"end\"\n                                        sx={{ color: 'var(--secondary-color)' }} // Цвет иконки\n                                    >\n                                        {showPassword ? (\n                                            <svg width={18} height={18} style={{ stroke: 'var(--secondary-color)', fill: \" white\" }}>\n                                                <use href={`${sprite}#icon-eye-off`}></use>\n                                            </svg>\n                                        ) : (\n                                            <svg width={18} height={18} style={{ stroke: 'var(--secondary-color)', fill: \" white\" }}>\n                                                <use href={`${sprite}#icon-eye`}></use>\n                                            </svg>\n                                        )}\n                                    </IconButton>\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n\n                    {type === 'register' && (\n                        <TextField\n                            sx={style}\n                            id=\"confirmPassword\"\n                            placeholder='Confirm password'\n                            type={showConfirmPassword ? 'text' : 'password'}\n                            fullWidth\n                            {...register(\"confirmPassword\")}\n                            InputLabelProps={{ shrink: false }}\n\n                            error={!!errors.confirmPassword}\n                            helperText={errors.confirmPassword ? errors.confirmPassword.message : ''}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle confirm password visibility\"\n                                            onClick={handleClickShowConfirmPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            sx={{ color: 'var(--secondary-color)' }} // Цвет иконки\n                                        >\n                                            {showConfirmPassword ? (\n                                                <svg width={18} height={18} style={{ stroke: 'var(--secondary-color)', fill: \" white\" }}>\n                                                    <use href={`${sprite}#icon-eye-off`}></use>\n                                                </svg>\n                                            ) : (\n                                                <svg width={18} height={18} style={{ stroke: 'var(--secondary-color)', fill: \" white\" }}>\n                                                    <use href={`${sprite}#icon-eye`}></use>\n                                                </svg>\n                                            )}\n                                        </IconButton>\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                    )}\n\n                    <Box sx={{ mt: type === 'login' ? \"40px\" : \"14px\" }}>\n                        <Btn type={\"submit\"} onClick={onSubmit} bgColor={\"var(--secondary-color)\"} textColor={\"var(--background-color)\"}>\n                            {type === 'login' ? 'Log In' : 'Registration'}\n                        </Btn>\n                    </Box>\n                </Box>\n            </form>\n        </FormProvider>\n    );\n};\n\nexport default RegistrationForm;\n","import { Typography } from '@mui/material'\nimport React from 'react'\n\nexport const Title = ({ children }) => {\n    return (\n        <Typography component=\"h2\" sx={(theme) => ({\n            fontSize: \"28px\",\n            fontWeight: 700,\n            color: \"text.primary\",\n            lineHeight: 1,\n            letterSpacing: \"-1.12px\",\n\n            [theme.breakpoints.up(\"md\")]: {\n\n                fontSize: \"54px\",\n                letterSpacing: \"-1.62px\",\n            }\n        })\n        } > {children}</ Typography >\n    )\n}\n\nexport default Title;","\nimport { Box, Button, Typography } from '@mui/material';\nimport PetBlock from 'components/PetBlock/PetBlock';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport Title from 'components/Title/Title';\nimport React from 'react'\nimport { NavLink } from 'react-router-dom/dist';\n\nexport const Login = () => {\n    const style = {\n        p: \"55px 20px\",\n        backgroundColor: \"var(--background-color)\",\n        borderRadius: \"30px\",\n        textContent: \"center\",\n        minHeight: \"368px\",\n        my: \"auto\",\n    }\n    return (\n        <div>\n            <PetBlock />\n            <Box sx={style}>\n                <Title>Login</Title>\n                <Typography sx={{ mt: \"12px\", mb: \"20px\", fontSize: \"14px\", lineHeight: 1.28, fontWeight: 500, letterSpacing: \"-0.28px\" }}>\n                    Welcome! Please enter your credentials to login to the platform:\n                </Typography>\n                <RegistrationForm type={\"login\"} />\n                <Typography sx={{ fontSize: \"12px\", display: 'flex', alignItems: \"center\", justifyContent: \"center\", height: \"14px\", fontWeight: 500, textAlign: \"center\", mt: \"12px\" }}>Don’t have an account? <NavLink to=\"/register\">\n                    <Button sx={{ color: \"var(--secondary-color)\", p: 0, minWidth: \"15px\", textTransform: 'capitalize', fontSize: \"12px\", height: \"14px\", fontWeight: 700, }}> Register</Button></NavLink>\n                </Typography>\n\n            </Box>\n\n        </div>\n    )\n}\nexport default Login;"],"names":["PetBlock","style","useLocation","pathname","css","_jsx","className","authSchema","yup","name","required","min","matches","email","trim","password","confirmPassword","oneOf","loginSchema","_ref","type","onClose","showPassword","setShowPassword","useState","showConfirmPassword","setShowConfirmPassword","dispatch","useDispatch","handleMouseDownPassword","event","preventDefault","validationSchema","methods","useForm","resolver","yupResolver","handleSubmit","formState","errors","register","onSubmit","async","console","log","data","userPost","login","error","_error$response","_error$response$data","errorMessage","response","message","toast","mt","mb","p","height","fontSize","fontWeight","borderRadius","border","borderColor","m","color","FormProvider","children","_jsxs","Box","TextField","sx","id","InputLabelProps","shrink","placeholder","fullWidth","margin","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","handleClickShowPassword","show","onMouseDown","edge","width","stroke","fill","href","concat","sprite","handleClickShowConfirmPassword","Btn","bgColor","textColor","Typography","component","theme","lineHeight","letterSpacing","breakpoints","up","Login","backgroundColor","textContent","minHeight","my","Title","RegistrationForm","display","alignItems","justifyContent","textAlign","NavLink","to","Button","minWidth","textTransform"],"sourceRoot":""}