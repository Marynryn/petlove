{"version":3,"file":"static/js/52.5cd78d44.chunk.js","mappings":"2HACA,QAA2B,2BAA3B,EAAiE,2BAAjE,EAAgH,oC,0BCEzG,MAiBP,EAjBwBA,KAEpB,MAAMC,GAAWC,EAAAA,EAAAA,MAWjB,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UATqB,cAAtBH,EAASI,SAAiCC,EACpB,WAAtBL,EAASI,SAA8BC,EACjB,aAAtBL,EAASI,SAAgCC,EACtC,MAMwB,C,uPCfhC,SAASC,EAA8BC,GAC5C,OAAOC,EAAAA,EAAAA,IAAqB,oBAAqBD,EACnD,CACA,MACA,GAD8BE,EAAAA,EAAAA,GAAuB,oBAAqB,CAAC,OAAQ,SAAU,WAAY,WAAY,gBAAiB,cAAe,uBAAwB,cAAe,c,ICDxLC,E,sBACJ,MAAMC,EAAY,CAAC,WAAY,YAAa,YAAa,uBAAwB,oBAAqB,WAAY,WAkC5GC,GAAqBC,EAAAA,EAAAA,IAAO,MAAO,CACvCC,KAAM,oBACNP,KAAM,OACNQ,kBAvBwBA,CAACC,EAAOC,KAChC,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAMF,EAAO,WAADG,QAAYC,EAAAA,EAAAA,GAAWH,EAAWI,aAAkD,IAApCJ,EAAWK,sBAAiCN,EAAOM,qBAAsBN,EAAOC,EAAWM,SAAS,GAgBtJX,EAIxBY,IAAA,IAAC,MACFC,EAAK,WACLR,GACDO,EAAA,OAAKE,EAAAA,EAAAA,GAAS,CACbC,QAAS,OACTC,OAAQ,SAERC,UAAW,MACXC,WAAY,SACZC,WAAY,SACZC,OAAQP,EAAMQ,MAAQR,GAAOS,QAAQC,OAAOC,QACpB,WAAvBnB,EAAWM,SAAwB,CAEpC,CAAC,KAADJ,OAAMkB,EAAsBC,cAAa,WAAAnB,OAAUkB,EAAsBE,YAAW,MAAM,CACxFC,UAAW,KAEY,UAAxBvB,EAAWI,UAAwB,CAEpCoB,YAAa,GACY,QAAxBxB,EAAWI,UAAsB,CAElCqB,WAAY,IACyB,IAApCzB,EAAWK,sBAAiC,CAE7CqB,cAAe,QACf,IAwGF,EAvGoCC,EAAAA,YAAiB,SAAwBC,EAASC,GACpF,MAAM/B,GAAQgC,EAAAA,EAAAA,GAAc,CAC1BhC,MAAO8B,EACPhC,KAAM,uBAEF,SACFmC,EAAQ,UACR9C,EAAS,UACT+C,EAAY,MAAK,qBACjB3B,GAAuB,EAAK,kBAC5B4B,GAAoB,EAAK,SACzB7B,EACAE,QAAS4B,GACPpC,EACJqC,GAAQC,EAAAA,EAAAA,GAA8BtC,EAAOL,GACzC4C,GAAiBC,EAAAA,EAAAA,MAAoB,CAAC,EAC5C,IAAIhC,EAAU4B,EACVA,GAAeG,EAAe/B,QAO9B+B,IAAmB/B,IACrBA,EAAU+B,EAAe/B,SAE3B,MAAMN,GAAaS,EAAAA,EAAAA,GAAS,CAAC,EAAGX,EAAO,CACrCwB,YAAae,EAAef,YAC5BiB,KAAMF,EAAeE,KACrBlC,uBACAD,WACAE,YAEIkC,EA9EkBxC,KACxB,MAAM,QACJwC,EAAO,qBACPnC,EAAoB,YACpBiB,EAAW,SACXlB,EAAQ,KACRmC,EAAI,QACJjC,GACEN,EACEyC,EAAQ,CACZxC,KAAM,CAAC,OAAQI,GAAwB,uBAAwBD,GAAY,WAAJF,QAAeC,EAAAA,EAAAA,GAAWC,IAAaE,EAASgB,GAAe,cAAeiB,GAAQ,OAAJrC,QAAWC,EAAAA,EAAAA,GAAWoC,MAEjL,OAAOG,EAAAA,EAAAA,GAAeD,EAAOrD,EAA+BoD,EAAQ,EAkEpDG,CAAkB3C,GAClC,OAAoBhB,EAAAA,EAAAA,KAAK4D,EAAAA,EAAmBC,SAAU,CACpDC,MAAO,KACPf,UAAuB/C,EAAAA,EAAAA,KAAKU,GAAoBe,EAAAA,EAAAA,GAAS,CACvDsC,GAAIf,EACJhC,WAAYA,EACZf,WAAW+D,EAAAA,EAAAA,GAAKR,EAAQvC,KAAMhB,GAC9B4C,IAAKA,GACJM,EAAO,CACRJ,SAA8B,kBAAbA,GAA0BE,GAGzBgB,EAAAA,EAAAA,MAAMtB,EAAAA,SAAgB,CACtCI,SAAU,CAAc,UAAb3B,EAA4GZ,IAAUA,GAAqBR,EAAAA,EAAAA,KAAK,OAAQ,CACjKC,UAAW,cACX8C,SAAU,YACL,KAAMA,MAP6D/C,EAAAA,EAAAA,KAAKkE,EAAAA,EAAY,CAC3FnC,MAAO,iBACPgB,SAAUA,QASlB,I,gDC7GA,MAyLA,EAzLyBxB,IAAwB,IAAvB,KAAE4C,EAAI,QAAEC,GAAS7C,EACvC,MAAO8C,EAAcC,IAAmBC,EAAAA,EAAAA,WAAS,IAC1CC,EAAqBC,IAA0BF,EAAAA,EAAAA,WAAS,GACzDG,GAAWC,EAAAA,EAAAA,MAIXC,EAA2BC,IAC7BA,EAAMC,gBAAgB,EAGpBC,EAA4B,aAATZ,EAAsBa,EAAAA,GAAaC,EAAAA,GAEtDC,GAAUC,EAAAA,EAAAA,IAAQ,CACpBC,UAAUC,EAAAA,EAAAA,GAAYN,MAEpB,aAAEO,EAAcC,WAAW,OAAEC,GAAQ,SAAEC,GAAaP,EAEpDQ,EAAWR,EAAQI,cAAaK,UAClCC,QAAQC,IAAIC,GACZ,MAAM,MAAEC,EAAK,SAAEC,EAAQ,KAAEpF,GAASkF,EAElC,IACiB,aAAT3B,QACMO,GAASuB,EAAAA,EAAAA,IAAS,CAAEF,QAAOC,WAAUpF,gBAErC8D,GAASwB,EAAAA,EAAAA,IAAM,CAAEH,QAAOC,aAItC,CAAE,MAAOG,GAAQ,IAADC,EAAAC,EACZ,MAAMC,GAA6B,QAAdF,EAAAD,EAAMI,gBAAQ,IAAAH,GAAM,QAANC,EAAdD,EAAgBN,YAAI,IAAAO,OAAN,EAAdA,EAAsBG,UAAW,4BACtDC,EAAAA,GAAMN,MAAMG,EAChB,KAGEI,EAAQ,CACVC,GAAI,EACJC,GAAI,OACJ,4BAA6B,CACzBC,EAAG,OACHlF,OAAQ,OACRmF,SAAU,OACVC,WAAY,KAEhB,2BAA4B,CACxBC,aAAc,OAEdC,OAAQ,mCACR,2CAA4C,CACxCC,YAAa,0BAGjB,iDAAkD,CAC9CA,YAAa,2BAIrB,4BAA6B,CACzBvF,OAAQ,OACRwF,EAAG,EACHL,SAAU,OACV/E,MAAO,UAEPmF,YAAa,UACb,4BAA6B,CACzBA,YAAa,aAIzB,OACIlH,EAAAA,EAAAA,KAACoH,EAAAA,GAAY,IAAKlC,EAAOnC,UACrB/C,EAAAA,EAAAA,KAAA,QAAM0F,SAAUJ,EAAaI,GAAU3C,UACnCkB,EAAAA,EAAAA,MAACoD,EAAAA,EAAG,CAAAtE,SAAA,CACU,aAAToB,IACGnE,EAAAA,EAAAA,KAACsH,EAAAA,EAAS,CAACC,GAAIb,EACXc,GAAG,OACHC,gBAAiB,CAAEC,QAAQ,GAE3BC,YAAY,OACZC,WAAS,EACTC,OAAO,YACHpC,EAAS,QACbU,QAASX,EAAO5E,KAChBkH,WAAYtC,EAAO5E,KAAO4E,EAAO5E,KAAK4F,QAAU,MAIxDxG,EAAAA,EAAAA,KAACsH,EAAAA,EAAS,CACNC,GAAIb,EACJc,GAAG,QAEHC,gBAAiB,CAAEC,QAAQ,GAC3BC,YAAY,QACZC,WAAS,EACTC,OAAO,YACHpC,EAAS,SACbU,QAASX,EAAOO,MAChB+B,WAAYtC,EAAOO,MAAQP,EAAOO,MAAMS,QAAU,MAGtDxG,EAAAA,EAAAA,KAACsH,EAAAA,EAAS,CACNC,GAAIb,EACJc,GAAG,WACHG,YAAY,WACZxD,KAAME,EAAe,OAAS,WAC9BuD,WAAS,KACLnC,EAAS,YACbU,QAASX,EAAOQ,SAChB8B,WAAYtC,EAAOQ,SAAWR,EAAOQ,SAASQ,QAAU,GACxDiB,gBAAiB,CAAEC,QAAQ,GAC3BK,WAAY,CACRC,cACIhI,EAAAA,EAAAA,KAACiI,EAAc,CAAC7G,SAAS,MAAK2B,UAC1B/C,EAAAA,EAAAA,KAACkI,EAAAA,EAAU,CACP,aAAW,6BACXC,QAhHJC,IAAM9D,GAAiB+D,IAAUA,IAiH7BC,YAAa1D,EACb2D,KAAK,MACLhB,GAAI,CAAExF,MAAO,0BAA2BgB,SAEvCsB,GACGrE,EAAAA,EAAAA,KAAA,OAAKwI,MAAO,GAAI7G,OAAQ,GAAI+E,MAAO,CAAE+B,OAAQ,yBAA0BC,KAAM,UAAW3F,UACpF/C,EAAAA,EAAAA,KAAA,OAAK2I,KAAI,GAAAzH,OAAK0H,EAAAA,EAAM,sBAGxB5I,EAAAA,EAAAA,KAAA,OAAKwI,MAAO,GAAI7G,OAAQ,GAAI+E,MAAO,CAAE+B,OAAQ,yBAA0BC,KAAM,UAAW3F,UACpF/C,EAAAA,EAAAA,KAAA,OAAK2I,KAAI,GAAAzH,OAAK0H,EAAAA,EAAM,wBAStC,aAATzE,IACGnE,EAAAA,EAAAA,KAACsH,EAAAA,EAAS,CACNC,GAAIb,EACJc,GAAG,kBACHG,YAAY,mBACZxD,KAAMK,EAAsB,OAAS,WACrCoD,WAAS,KACLnC,EAAS,mBACbgC,gBAAiB,CAAEC,QAAQ,GAE3BvB,QAASX,EAAOqD,gBAChBf,WAAYtC,EAAOqD,gBAAkBrD,EAAOqD,gBAAgBrC,QAAU,GACtEuB,WAAY,CACRC,cACIhI,EAAAA,EAAAA,KAACiI,EAAc,CAAC7G,SAAS,MAAK2B,UAC1B/C,EAAAA,EAAAA,KAACkI,EAAAA,EAAU,CACP,aAAW,qCACXC,QApJDW,IAAMrE,GAAwB4D,IAAUA,IAqJvCC,YAAa1D,EACb2D,KAAK,MACLhB,GAAI,CAAExF,MAAO,0BAA4BgB,SAExCyB,GACGxE,EAAAA,EAAAA,KAAA,OAAKwI,MAAO,GAAI7G,OAAQ,GAAI+E,MAAO,CAAE+B,OAAQ,yBAA0BC,KAAM,UAAW3F,UACpF/C,EAAAA,EAAAA,KAAA,OAAK2I,KAAI,GAAAzH,OAAK0H,EAAAA,EAAM,sBAGxB5I,EAAAA,EAAAA,KAAA,OAAKwI,MAAO,GAAI7G,OAAQ,GAAI+E,MAAO,CAAE+B,OAAQ,yBAA0BC,KAAM,UAAW3F,UACpF/C,EAAAA,EAAAA,KAAA,OAAK2I,KAAI,GAAAzH,OAAK0H,EAAAA,EAAM,yBAUpD5I,EAAAA,EAAAA,KAACqH,EAAAA,EAAG,CAACE,GAAI,CAAEZ,GAAa,UAATxC,EAAmB,OAAS,QAASpB,UAChD/C,EAAAA,EAAAA,KAAC+I,EAAAA,EAAG,CAAC5E,KAAM,SAAUgE,QAASzC,EAAUsD,QAAS,yBAA0BC,UAAW,0BAA0BlG,SAClG,UAAToB,EAAmB,SAAW,yBAKpC,C,uEChMhB,MAmBP,EAnBqB5C,IAAmB,IAAlB,SAAEwB,GAAUxB,EAC9B,OACI0C,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CAAClB,UAAU,KAAKuE,GAAK/F,IAAK,CACjCsF,SAAU,OACVC,WAAY,IACZhF,MAAO,eACPmH,WAAY,EACZC,cAAe,UAEf,CAAC3H,EAAM4H,YAAYC,GAAG,OAAQ,CAE1BvC,SAAU,OACVqC,cAAe,aAGtBpG,SAAA,CAAE,IAAEA,IAAwB,C,kKCV9B,MAAMuG,EAAQA,KAebrF,EAAAA,EAAAA,MAAA,OAAAlB,SAAA,EACI/C,EAAAA,EAAAA,KAACH,EAAAA,EAAQ,KACToE,EAAAA,EAAAA,MAACoD,EAAAA,EAAG,CAACE,GAhBC,CACVV,EAAG,YACH0C,gBAAiB,0BACjBvC,aAAc,OACdwC,YAAa,SACbC,UAAW,QACXC,GAAI,OACJhI,QAAS,OACTiI,cAAe,SAEfC,eAAgB,UAMG7G,SAAA,EACX/C,EAAAA,EAAAA,KAAC6J,EAAAA,EAAK,CAAA9G,SAAC,WACP/C,EAAAA,EAAAA,KAACkE,EAAAA,EAAU,CAACqD,GAAI,CAAEZ,GAAI,OAAQC,GAAI,OAAQE,SAAU,OAAQoC,WAAY,KAAMnC,WAAY,IAAKoC,cAAe,WAAYpG,SAAC,sEAG3H/C,EAAAA,EAAAA,KAAC8J,EAAAA,EAAgB,CAAC3F,KAAM,WACxBF,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CAACqD,GAAI,CAAET,SAAU,OAAQpF,QAAS,OAAQG,WAAY,SAAU+H,eAAgB,SAAUjI,OAAQ,OAAQoF,WAAY,IAAKgD,UAAW,SAAUpD,GAAI,QAAS5D,SAAA,CAAC,gCAAuB/C,EAAAA,EAAAA,KAACgK,EAAAA,GAAO,CAACC,GAAG,YAAWlH,UACnN/C,EAAAA,EAAAA,KAACkK,EAAAA,EAAM,CAAC3C,GAAI,CAAExF,MAAO,yBAA0B8E,EAAG,EAAGsD,SAAU,OAAQC,cAAe,aAActD,SAAU,OAAQnF,OAAQ,OAAQoF,WAAY,KAAOhE,SAAC,yBAQ9K,G,8ECtCO,MAAMiC,EAAaqF,EAAAA,GAAW,CACnCzJ,KAAMyJ,EAAAA,KAEHC,SAAS,qBACTC,IAAI,EAAG,sCAEPC,QACC,6CACA,sDAEJzE,MAAOsE,EAAAA,KAEJI,OACA1E,QACAuE,SAAS,qBACTE,QACC,+CACA,wBAEJxE,SAAUqE,EAAAA,KAEPC,SAAS,wBACTC,IAAI,EAAG,0CACV1B,gBAAiBwB,EAAAA,KAEdK,MAAM,CAACL,EAAAA,GAAQ,YAAa,MAAO,wBACnCC,SAAS,kCAEDrF,EAAcoF,EAAAA,GAAW,CACpCtE,MAAOsE,EAAAA,KAEJI,OACA1E,QACAuE,SAAS,qBACTE,QACC,+CACA,wBAEJxE,SAAUqE,EAAAA,KAEPC,SAAS,wBACTC,IAAI,EAAG,4CAECI,EAAgBN,EAAAA,KAAaO,MAAM,CAC9ChK,KAAMyJ,EAAAA,KAAaQ,UAAS,GAAMC,QAAQ,IAC1C/E,MAAOsE,EAAAA,KAEJQ,WACAL,QACC,+CACA,wBAEDF,SAAS,qBACZS,OAAQV,EAAAA,KAELQ,UAAS,GACTL,QAAQ,iDAAkD,CACzDhE,QAAS,oBACTwE,oBAAoB,IAExBC,MAAOZ,EAAAA,KAEJQ,UAAS,GACTL,QAAQ,eAAgB,CACvBhE,QAAS,8BACTwE,oBAAoB,MAGbE,EAAYb,EAAAA,KAAaO,MAAM,CAC1CO,MAAOd,EAAAA,KAAaC,SAAS,qBAC7B1J,KAAMyJ,EAAAA,KAAaC,SAAS,oBAC5Bc,OAAQf,EAAAA,KAELG,QACC,iDACA,sBAEDF,SAAS,yBACZe,QAAShB,EAAAA,KAAaC,SAAS,uBAC/BgB,SAAUjB,EAAAA,KAEPC,SAAS,wBACTE,QAAQ,sBAAuB,uBAElCe,IAAKlB,EAAAA,KAAaC,SAAS,oB","sources":["webpack://petlove/./src/components/PetBlock/PetBlock.module.css?5b63","components/PetBlock/PetBlock.jsx","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","components/RegistrationForm/RegistrationForm.jsx","components/Title/Title.jsx","pages/Login/Login.jsx","schema/schema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"catblock\":\"PetBlock_catblock__Sj84y\",\"dogblock\":\"PetBlock_dogblock__wYVAS\",\"another_dog_block\":\"PetBlock_another_dog_block__nqXAb\"};","import React from 'react'\nimport css from \"./PetBlock.module.css\"\nimport { useLocation } from 'react-router-dom/dist';\nexport const PetBlock = () => {\n\n    const location = useLocation();\n\n    const style = () => {\n        if (location.pathname === '/register') return css.catblock;\n        if (location.pathname === '/login') return css.dogblock;\n        if (location.pathname === '/add-pet') return css.another_dog_block;\n        return null;\n    }\n\n\n\n    return (\n        <div className={style()}></div>\n    )\n}\nexport default PetBlock;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? ( /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import React, { useState } from 'react';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { toast } from 'react-hot-toast';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { authSchema, loginSchema } from 'schema/schema';\nimport Btn from 'components/Button/Button';\nimport { IconButton, InputAdornment, TextField, Box } from '@mui/material';\n\nimport sprite from '../../img/svg/symbol-defs.svg'\nimport { useDispatch } from 'react-redux';\nimport { login, userPost } from 'store/operations';\n\n\n\nconst RegistrationForm = ({ type, onClose }) => {\n    const [showPassword, setShowPassword] = useState(false);\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n    const dispatch = useDispatch();\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\n    const handleClickShowConfirmPassword = () => setShowConfirmPassword((show) => !show);\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const validationSchema = type === 'register' ? authSchema : loginSchema;\n\n    const methods = useForm({\n        resolver: yupResolver(validationSchema)\n    });\n    const { handleSubmit, formState: { errors }, register } = methods;\n\n    const onSubmit = methods.handleSubmit(async (data) => {\n        console.log(data);\n        const { email, password, name } = data;\n\n        try {\n            if (type === 'register') {\n                await dispatch(userPost({ email, password, name }));\n            } else {\n                await dispatch(login({ email, password }));\n\n\n            }\n        } catch (error) {\n            const errorMessage = error.response?.data?.message || \"Invalid email or password\";\n            toast.error(errorMessage);\n        }\n    });\n\n    const style = {\n        mt: 0,\n        mb: \"10px\",\n        '& .MuiOutlinedInput-input': {\n            p: \"12px\",\n            height: \"16px\",\n            fontSize: \"14px\",\n            fontWeight: 500,\n        },\n        '& .MuiOutlinedInput-root': {\n            borderRadius: \"30px\",\n\n            border: \"1px solid rgba(38, 38, 38, 0.15)\",\n            '&:hover .MuiOutlinedInput-notchedOutline': {\n                borderColor: 'var(--secondary-color)',\n\n            },\n            '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                borderColor: 'var(--secondary-color)',\n\n            },\n        },\n        '& .MuiFormHelperText-root': {\n            height: \"12px\",\n            m: 0,\n            fontSize: \"10px\",\n            color: \"#EF2447\",\n\n            borderColor: \"#EF2447\",\n            '& .MuiOutlinedInput-input': {\n                borderColor: \"#EF2447\"\n            }\n        }\n    }\n    return (\n        <FormProvider {...methods}>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <Box >\n                    {type === 'register' && (\n                        <TextField sx={style}\n                            id=\"name\"\n                            InputLabelProps={{ shrink: false }}\n\n                            placeholder=\"Name\"\n                            fullWidth\n                            margin=\"normal\"\n                            {...register(\"name\")}\n                            error={!!errors.name}\n                            helperText={errors.name ? errors.name.message : ''}\n                        />\n                    )}\n\n                    <TextField\n                        sx={style}\n                        id=\"email\"\n\n                        InputLabelProps={{ shrink: false }}\n                        placeholder=\"Email\"\n                        fullWidth\n                        margin=\"normal\"\n                        {...register(\"email\")}\n                        error={!!errors.email}\n                        helperText={errors.email ? errors.email.message : ''}\n                    />\n\n                    <TextField\n                        sx={style}\n                        id=\"password\"\n                        placeholder='Password'\n                        type={showPassword ? 'text' : 'password'}\n                        fullWidth\n                        {...register(\"password\")}\n                        error={!!errors.password}\n                        helperText={errors.password ? errors.password.message : ''}\n                        InputLabelProps={{ shrink: false }}\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowPassword}\n                                        onMouseDown={handleMouseDownPassword}\n                                        edge=\"end\"\n                                        sx={{ color: 'var(--secondary-color)' }}\n                                    >\n                                        {showPassword ? (\n                                            <svg width={18} height={18} style={{ stroke: 'var(--secondary-color)', fill: \" white\" }}>\n                                                <use href={`${sprite}#icon-eye-off`}></use>\n                                            </svg>\n                                        ) : (\n                                            <svg width={18} height={18} style={{ stroke: 'var(--secondary-color)', fill: \" white\" }}>\n                                                <use href={`${sprite}#icon-eye`}></use>\n                                            </svg>\n                                        )}\n                                    </IconButton>\n                                </InputAdornment>\n                            )\n                        }}\n                    />\n\n                    {type === 'register' && (\n                        <TextField\n                            sx={style}\n                            id=\"confirmPassword\"\n                            placeholder='Confirm password'\n                            type={showConfirmPassword ? 'text' : 'password'}\n                            fullWidth\n                            {...register(\"confirmPassword\")}\n                            InputLabelProps={{ shrink: false }}\n\n                            error={!!errors.confirmPassword}\n                            helperText={errors.confirmPassword ? errors.confirmPassword.message : ''}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle confirm password visibility\"\n                                            onClick={handleClickShowConfirmPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                            sx={{ color: 'var(--secondary-color)' }} // Цвет иконки\n                                        >\n                                            {showConfirmPassword ? (\n                                                <svg width={18} height={18} style={{ stroke: 'var(--secondary-color)', fill: \" white\" }}>\n                                                    <use href={`${sprite}#icon-eye-off`}></use>\n                                                </svg>\n                                            ) : (\n                                                <svg width={18} height={18} style={{ stroke: 'var(--secondary-color)', fill: \" white\" }}>\n                                                    <use href={`${sprite}#icon-eye`}></use>\n                                                </svg>\n                                            )}\n                                        </IconButton>\n                                    </InputAdornment>\n                                )\n                            }}\n                        />\n                    )}\n\n                    <Box sx={{ mt: type === 'login' ? \"40px\" : \"14px\" }}>\n                        <Btn type={\"submit\"} onClick={onSubmit} bgColor={\"var(--secondary-color)\"} textColor={\"var(--background-color)\"}>\n                            {type === 'login' ? 'Log In' : 'Registration'}\n                        </Btn>\n                    </Box>\n                </Box>\n            </form>\n        </FormProvider>\n    );\n};\n\nexport default RegistrationForm;\n","import { Typography } from '@mui/material'\nimport React from 'react'\n\nexport const Title = ({ children }) => {\n    return (\n        <Typography component=\"h2\" sx={(theme) => ({\n            fontSize: \"28px\",\n            fontWeight: 700,\n            color: \"text.primary\",\n            lineHeight: 1,\n            letterSpacing: \"-1.12px\",\n\n            [theme.breakpoints.up(\"md\")]: {\n\n                fontSize: \"54px\",\n                letterSpacing: \"-1.62px\",\n            }\n        })\n        } > {children}</ Typography >\n    )\n}\n\nexport default Title;","\nimport { Box, Button, Typography } from '@mui/material';\nimport PetBlock from 'components/PetBlock/PetBlock';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport Title from 'components/Title/Title';\nimport React from 'react'\nimport { NavLink } from 'react-router-dom/dist';\n\nexport const Login = () => {\n    const style = {\n        p: \"20px 20px\",\n        backgroundColor: \"var(--background-color)\",\n        borderRadius: \"30px\",\n        textContent: \"center\",\n        minHeight: \"368px\",\n        my: \"auto\",\n        display: \"flex\",\n        flexDirection: \"column\",\n\n        justifyContent: \"center\",\n\n    }\n    return (\n        <div>\n            <PetBlock />\n            <Box sx={style}>\n                <Title>Login</Title>\n                <Typography sx={{ mt: \"12px\", mb: \"20px\", fontSize: \"14px\", lineHeight: 1.28, fontWeight: 500, letterSpacing: \"-0.28px\" }}>\n                    Welcome! Please enter your credentials to login to the platform:\n                </Typography>\n                <RegistrationForm type={\"login\"} />\n                <Typography sx={{ fontSize: \"12px\", display: 'flex', alignItems: \"center\", justifyContent: \"center\", height: \"14px\", fontWeight: 500, textAlign: \"center\", mt: \"12px\" }}>Don’t have an account? <NavLink to=\"/register\">\n                    <Button sx={{ color: \"var(--secondary-color)\", p: 0, minWidth: \"15px\", textTransform: 'capitalize', fontSize: \"12px\", height: \"14px\", fontWeight: 700, }}> Register</Button></NavLink>\n                </Typography>\n\n            </Box>\n\n        </div>\n    )\n}\nexport default Login;","import * as yup from \"yup\";\r\n\r\nexport const authSchema = yup.object({\r\n  name: yup\r\n    .string()\r\n    .required(\" Name is required\")\r\n    .min(2, \"Name must be at least 8 characters\")\r\n\r\n    .matches(\r\n      /^[a-zA-Zа-яА-Я0-9\\s]*$/,\r\n      \"Name can only contain letters, numbers, and spaces\"\r\n    ),\r\n  email: yup\r\n    .string()\r\n    .trim()\r\n    .email()\r\n    .required(\"Email is required\")\r\n    .matches(\r\n      /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/,\r\n      \"Invalid email format\"\r\n    ),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(7, \"Password must be at least 7 characters\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Confirm Password is required\"),\r\n});\r\nexport const loginSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .trim()\r\n    .email()\r\n    .required(\"Email is required\")\r\n    .matches(\r\n      /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/,\r\n      \"Invalid email format\"\r\n    ),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required\")\r\n    .min(7, \"Password must be at least 7 characters\"),\r\n});\r\nexport const profileSchema = yup.object().shape({\r\n  name: yup.string().nullable(true).default(\"\"),\r\n  email: yup\r\n    .string()\r\n    .nullable()\r\n    .matches(\r\n      /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/,\r\n      \"Invalid email format\"\r\n    )\r\n    .required(\"Email is required\"),\r\n  avatar: yup\r\n    .string()\r\n    .nullable(true)\r\n    .matches(/^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/, {\r\n      message: \"Invalid image URL\",\r\n      excludeEmptyString: true,\r\n    }),\r\n  phone: yup\r\n    .string()\r\n    .nullable(true)\r\n    .matches(/^\\+38\\d{10}$/, {\r\n      message: \"Invalid phone number format\",\r\n      excludeEmptyString: true,\r\n    }),\r\n});\r\nexport const petSchema = yup.object().shape({\r\n  title: yup.string().required(\"Title is required\"),\r\n  name: yup.string().required(\"Name is required\"),\r\n  imgURL: yup\r\n    .string()\r\n    .matches(\r\n      /^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/,\r\n      \"Invalid URL format\"\r\n    )\r\n    .required(\"Image URL is required\"),\r\n  species: yup.string().required(\"Species is required\"),\r\n  birthday: yup\r\n    .string()\r\n    .required(\"Birthday is required\")\r\n    .matches(/^\\d{4}-\\d{2}-\\d{2}$/, \"Invalid date format\"),\r\n\r\n  sex: yup.string().required(\"Sex is required\"),\r\n});\r\n"],"names":["PetBlock","location","useLocation","_jsx","className","pathname","css","getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_span","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","concat","capitalize","position","disablePointerEvents","variant","_ref","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useThemeProps","children","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","size","classes","slots","composeClasses","useUtilityClasses","FormControlContext","Provider","value","as","clsx","_jsxs","Typography","type","onClose","showPassword","setShowPassword","useState","showConfirmPassword","setShowConfirmPassword","dispatch","useDispatch","handleMouseDownPassword","event","preventDefault","validationSchema","authSchema","loginSchema","methods","useForm","resolver","yupResolver","handleSubmit","formState","errors","register","onSubmit","async","console","log","data","email","password","userPost","login","error","_error$response","_error$response$data","errorMessage","response","message","toast","style","mt","mb","p","fontSize","fontWeight","borderRadius","border","borderColor","m","FormProvider","Box","TextField","sx","id","InputLabelProps","shrink","placeholder","fullWidth","margin","helperText","InputProps","endAdornment","InputAdornment","IconButton","onClick","handleClickShowPassword","show","onMouseDown","edge","width","stroke","fill","href","sprite","confirmPassword","handleClickShowConfirmPassword","Btn","bgColor","textColor","lineHeight","letterSpacing","breakpoints","up","Login","backgroundColor","textContent","minHeight","my","flexDirection","justifyContent","Title","RegistrationForm","textAlign","NavLink","to","Button","minWidth","textTransform","yup","required","min","matches","trim","oneOf","profileSchema","shape","nullable","default","avatar","excludeEmptyString","phone","petSchema","title","imgURL","species","birthday","sex"],"sourceRoot":""}